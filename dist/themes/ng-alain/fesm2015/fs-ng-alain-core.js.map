{"version":3,"file":"fs-ng-alain-core.js","sources":["../../../../themes/ng-alain/core/src/lib/i18n/i18n.service.ts","../../../../themes/ng-alain/core/src/lib/net/default.interceptor.ts","../../../../themes/ng-alain/core/src/lib/services/messages/messages.service.ts","../../../../themes/ng-alain/core/src/lib/services/notify/notify.service.ts","../../../../themes/ng-alain/core/src/lib/style-icons.ts","../../../../themes/ng-alain/core/src/lib/style-icons-auto.ts","../../../../themes/ng-alain/core/src/lib/startup/startup.service.ts","../../../../themes/ng-alain/core/src/lib/module-import-guard.ts","../../../../themes/ng-alain/core/src/lib/core.module.ts","../../../../themes/ng-alain/core/src/fs-ng-alain-core.ts"],"sourcesContent":["// 请参考：https://ng-alain.com/docs/i18n\r\nimport { Platform } from '@angular/cdk/platform';\r\nimport { registerLocaleData } from '@angular/common';\r\nimport ngEn from '@angular/common/locales/en';\r\nimport ngZh from '@angular/common/locales/zh';\r\nimport ngZhTw from '@angular/common/locales/zh-Hant';\r\nimport { Injectable } from '@angular/core';\r\nimport {\r\n  AlainI18NService,\r\n  DelonLocaleService,\r\n  en_US as delonEnUS,\r\n  SettingsService,\r\n  zh_CN as delonZhCn,\r\n  zh_TW as delonZhTw,\r\n} from '@delon/theme';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { enUS as dfEn, zhCN as dfZhCn, zhTW as dfZhTw } from 'date-fns/locale';\r\nimport { en_US as zorroEnUS, NzI18nService, zh_CN as zorroZhCN, zh_TW as zorroZhTW } from 'ng-zorro-antd/i18n';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\n\r\ninterface LangData {\r\n  text: string;\r\n  ng: any;\r\n  zorro: any;\r\n  date: any;\r\n  delon: any;\r\n  abbr: string;\r\n}\r\n\r\nconst DEFAULT = 'zh-CN';\r\nconst LANGS: { [key: string]: LangData } = {\r\n  'zh-CN': {\r\n    text: '简体中文',\r\n    ng: ngZh,\r\n    zorro: zorroZhCN,\r\n    date: dfZhCn,\r\n    delon: delonZhCn,\r\n    abbr: '🇨🇳',\r\n  },\r\n  'zh-TW': {\r\n    text: '繁体中文',\r\n    ng: ngZhTw,\r\n    zorro: zorroZhTW,\r\n    date: dfZhTw,\r\n    delon: delonZhTw,\r\n    abbr: '🇭🇰',\r\n  },\r\n  'en-US': {\r\n    text: 'English',\r\n    ng: ngEn,\r\n    zorro: zorroEnUS,\r\n    date: dfEn,\r\n    delon: delonEnUS,\r\n    abbr: '🇬🇧',\r\n  },\r\n};\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class I18NService implements AlainI18NService {\r\n  private _default = DEFAULT;\r\n  private change$ = new BehaviorSubject<string | null>(null);\r\n\r\n  private _langs = Object.keys(LANGS).map((code) => {\r\n    const item = LANGS[code];\r\n    return { code, text: item.text, abbr: item.abbr };\r\n  });\r\n\r\n  constructor(\r\n    private settings: SettingsService,\r\n    private nzI18nService: NzI18nService,\r\n    private delonLocaleService: DelonLocaleService,\r\n    private translate: TranslateService,\r\n    private platform: Platform,\r\n  ) {\r\n    // `@ngx-translate/core` 预先知道支持哪些语言\r\n    const lans = this._langs.map((item) => item.code);\r\n    translate.addLangs(lans);\r\n\r\n    const defaultLan = this.getDefaultLang();\r\n    if (lans.includes(defaultLan)) {\r\n      this._default = defaultLan;\r\n    }\r\n\r\n    this.updateLangData(this._default);\r\n  }\r\n\r\n  private getDefaultLang(): string | undefined {\r\n    if (!this.platform.isBrowser) {\r\n      return DEFAULT;\r\n    }\r\n    if (this.settings.layout.lang) {\r\n      return this.settings.layout.lang;\r\n    }\r\n    return (navigator.languages ? navigator.languages[0] : null) || navigator.language;\r\n  }\r\n\r\n  private updateLangData(lang: string) {\r\n    const item = LANGS[lang];\r\n    registerLocaleData(item.ng);\r\n    this.nzI18nService.setLocale(item.zorro);\r\n    this.nzI18nService.setDateLocale(item.date);\r\n    this.delonLocaleService.setLocale(item.delon);\r\n  }\r\n\r\n  get change(): Observable<string> {\r\n    return this.change$.asObservable().pipe(filter((w) => w != null)) as Observable<string>;\r\n  }\r\n\r\n  use(lang: string): void {\r\n    lang = lang || this.translate.getDefaultLang();\r\n    if (this.currentLang === lang) {\r\n      return;\r\n    }\r\n    this.updateLangData(lang);\r\n    this.translate.use(lang).subscribe(() => this.change$.next(lang));\r\n  }\r\n  /** 获取语言列表 */\r\n  getLangs() {\r\n    return this._langs;\r\n  }\r\n  /** 翻译 */\r\n  fanyi(key: string, interpolateParams?: {}) {\r\n    return this.translate.instant(key, interpolateParams);\r\n  }\r\n  /** 默认语言 */\r\n  get defaultLang() {\r\n    return this._default;\r\n  }\r\n  /** 当前语言 */\r\n  get currentLang() {\r\n    return this.translate.currentLang || this.translate.getDefaultLang() || this._default;\r\n  }\r\n}\r\n","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest, HttpResponseBase } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DA_SERVICE_TOKEN, ITokenService } from '@delon/auth';\r\nimport { _HttpClient } from '@delon/theme';\r\nimport { NzNotificationService } from 'ng-zorro-antd/notification';\r\nimport { Observable, of, throwError } from 'rxjs';\r\nimport { catchError, mergeMap } from 'rxjs/operators';\r\n\r\nconst CODEMESSAGE = {\r\n  200: '服务器成功返回请求的数据。',\r\n  201: '新建或修改数据成功。',\r\n  202: '一个请求已经进入后台排队（异步任务）。',\r\n  204: '删除数据成功。',\r\n  400: '发出的请求有错误，服务器没有进行新建或修改数据的操作。',\r\n  401: '用户没有权限（令牌、用户名、密码错误）。',\r\n  403: '用户得到授权，但是访问是被禁止的。',\r\n  404: '发出的请求针对的是不存在的记录，服务器没有进行操作。',\r\n  406: '请求的格式不可得。',\r\n  410: '请求的资源被永久删除，且不会再得到的。',\r\n  422: '当创建一个对象时，发生一个验证错误。',\r\n  500: '服务器发生错误，请检查服务器。',\r\n  502: '网关错误。',\r\n  503: '服务不可用，服务器暂时过载或维护。',\r\n  504: '网关超时。',\r\n};\r\n\r\n/**\r\n * 默认HTTP拦截器，其注册细节见 `app.module.ts`\r\n */\r\n@Injectable()\r\nexport class DefaultInterceptor implements HttpInterceptor {\r\n  constructor(private injector: Injector) {}\r\n\r\n  private get notification(): NzNotificationService {\r\n    return this.injector.get(NzNotificationService);\r\n  }\r\n\r\n  private goTo(url: string) {\r\n    setTimeout(() => this.injector.get(Router).navigateByUrl(url));\r\n  }\r\n\r\n  private checkStatus(ev: HttpResponseBase) {\r\n    if ((ev.status >= 200 && ev.status < 300) || ev.status === 401) {\r\n      return;\r\n    }\r\n\r\n    const errortext = CODEMESSAGE[ev.status] || ev.statusText;\r\n    this.notification.error(`请求错误 ${ev.status}: ${ev.url}`, errortext);\r\n  }\r\n\r\n  private handleData(ev: HttpResponseBase): Observable<any> {\r\n    // 可能会因为 `throw` 导出无法执行 `_HttpClient` 的 `end()` 操作\r\n    if (ev.status > 0) {\r\n      this.injector.get(_HttpClient).end();\r\n    }\r\n    this.checkStatus(ev);\r\n    // 业务处理：一些通用操作\r\n    switch (ev.status) {\r\n      case 200:\r\n        // 业务层级错误处理，以下是假定restful有一套统一输出格式（指不管成功与否都有相应的数据格式）情况下进行处理\r\n        // 例如响应内容：\r\n        //  错误内容：{ status: 1, msg: '非法参数' }\r\n        //  正确内容：{ status: 0, response: {  } }\r\n        // 则以下代码片断可直接适用\r\n        // if (event instanceof HttpResponse) {\r\n        //     const body: any = event.body;\r\n        //     if (body && body.status !== 0) {\r\n        //         this.msg.error(body.msg);\r\n        //         // 继续抛出错误中断后续所有 Pipe、subscribe 操作，因此：\r\n        //         // this.http.get('/').subscribe() 并不会触发\r\n        //         return throwError({});\r\n        //     } else {\r\n        //         // 重新修改 `body` 内容为 `response` 内容，对于绝大多数场景已经无须再关心业务状态码\r\n        //         return of(new HttpResponse(Object.assign(event, { body: body.response })));\r\n        //         // 或者依然保持完整的格式\r\n        //         return of(event);\r\n        //     }\r\n        // }\r\n        break;\r\n      case 401:\r\n        this.notification.error(`未登录或登录已过期，请重新登录。`, ``);\r\n        // 清空 token 信息\r\n        (this.injector.get(DA_SERVICE_TOKEN) as ITokenService).clear();\r\n        this.goTo('/passport/login');\r\n        break;\r\n      case 403:\r\n      case 404:\r\n      case 500:\r\n        this.goTo(`/exception/${ev.status}`);\r\n        break;\r\n      default:\r\n        if (ev instanceof HttpErrorResponse) {\r\n          console.warn('未可知错误，大部分是由于后端不支持CORS或无效配置引起', ev);\r\n        }\r\n        break;\r\n    }\r\n    if (ev instanceof HttpErrorResponse) {\r\n      return throwError(ev);\r\n    } else {\r\n      return of(ev);\r\n    }\r\n  }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // 统一加上服务端前缀\r\n    let url = req.url;\r\n    if (!url.startsWith('https://') && !url.startsWith('http://')) {\r\n      url = `./` + url;\r\n    }\r\n\r\n    const newReq = req.clone({ url });\r\n    return next.handle(newReq).pipe(\r\n      mergeMap((event: any) => {\r\n        // 允许统一对请求错误处理\r\n        if (event instanceof HttpResponseBase) {\r\n          return this.handleData(event);\r\n        }\r\n        // 若一切都正常，则后续操作\r\n        return of(event);\r\n      }),\r\n      catchError((err: HttpErrorResponse) => this.handleData(err)),\r\n    );\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NzModalRef, NzModalService } from 'ng-zorro-antd/modal';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MessagesService {\r\n\r\n  confirmModal: NzModalRef;\r\n\r\n  constructor(private modalSrv: NzModalService) { }\r\n\r\n  info(message: string, title: string = \"訊息\"): any {\r\n    this.modalSrv.info({\r\n        nzTitle: title,\r\n        nzContent: message\r\n    })\r\n}\r\n\r\nsuccess(message: string, title: string = \"成功訊息\"): any {\r\n    this.modalSrv.success({\r\n        nzTitle: title,\r\n        nzContent: message\r\n    })\r\n}\r\n\r\nwarn(message: string, title: string = \"警告訊息\"): any {\r\n    this.modalSrv.warning({\r\n        nzTitle: title,\r\n        nzContent: message\r\n    })\r\n}\r\n\r\nerror(message: string, title: string = \"錯誤訊息\"): any {\r\n    this.modalSrv.error({\r\n        nzTitle: title,\r\n        nzContent: message\r\n    })\r\n}\r\n\r\nconfirm(message: string, titleOrCallBack?: string | ((result: boolean) => void), callback?: (result: boolean) => void): any {\r\n    if (typeof titleOrCallBack == 'string') {\r\n        this.modalSrv.confirm({\r\n            nzTitle: titleOrCallBack,\r\n            nzContent: message,\r\n            nzOnOk() {\r\n                if (callback) callback(true);\r\n            },\r\n            nzOnCancel() {\r\n                if (callback) callback(false);\r\n            }\r\n        });\r\n    } else {\r\n        this.modalSrv.confirm({\r\n            nzTitle: \"請確認\",\r\n            nzContent: message,\r\n            nzOnOk() {\r\n                if (titleOrCallBack) titleOrCallBack(true);\r\n            },\r\n            nzOnCancel() {\r\n                if (titleOrCallBack) titleOrCallBack(false);\r\n            }\r\n        });\r\n    }\r\n}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { NzNotificationService } from 'ng-zorro-antd/notification';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NotifyService {\r\n  \r\n  constructor(\r\n    private notification: NzNotificationService\r\n  ) { }\r\n\r\n  showNotify(type: string, title: string, content: string) {\r\n    this.notification.create(type, title, content);\r\n  }\r\n\r\n  success(content: string = '', title: string = \"成功\") {\r\n    this.showNotify('success', title, content);\r\n  }\r\n\r\n  info(content: string = '', title: string = \"訊息\") {\r\n    this.showNotify('info', title, content);\r\n  }\r\n\r\n  warning(content: string = '', title: string = \"警告\") {\r\n    this.showNotify('warning', title, content);\r\n  }\r\n\r\n  error(content: string = '', title: string = \"錯誤\") {\r\n    this.showNotify('error', title, content);\r\n  }\r\n\r\n}\r\n","// Custom icon static resources\r\n\r\nimport {\r\n  BulbOutline,\r\n  ExceptionOutline,\r\n  InfoOutline,\r\n  LinkOutline,\r\n  ProfileOutline,\r\n} from '@ant-design/icons-angular/icons';\r\n\r\nexport const ICONS = [InfoOutline, BulbOutline, ProfileOutline, ExceptionOutline, LinkOutline];\r\n","/*\r\n* Automatically generated by 'ng g ng-alain:plugin icon'\r\n* @see https://ng-alain.com/cli/plugin#icon\r\n*/\r\n\r\nimport {\r\n  AlipayCircleOutline,\r\n  ApiOutline,\r\n  AppstoreOutline,\r\n  ArrowDownOutline,\r\n  BookOutline,\r\n  CloudOutline,\r\n  CopyrightOutline,\r\n  CustomerServiceOutline,\r\n  DashboardOutline,\r\n  DatabaseOutline,\r\n  DingdingOutline,\r\n  DislikeOutline,\r\n  DownloadOutline,\r\n  ForkOutline,\r\n  FrownOutline,\r\n  FullscreenExitOutline,\r\n  FullscreenOutline,\r\n  GithubOutline,\r\n  GlobalOutline,\r\n  HddOutline,\r\n  LaptopOutline,\r\n  LikeOutline,\r\n  LockOutline,\r\n  LogoutOutline,\r\n  MailOutline,\r\n  MenuFoldOutline,\r\n  MenuUnfoldOutline,\r\n  MessageOutline,\r\n  PayCircleOutline,\r\n  PieChartOutline,\r\n  PrinterOutline,\r\n  RocketOutline,\r\n  ScanOutline,\r\n  SettingOutline,\r\n  ShareAltOutline,\r\n  ShoppingCartOutline,\r\n  SoundOutline,\r\n  StarOutline,\r\n  TaobaoCircleOutline,\r\n  TaobaoOutline,\r\n  TeamOutline,\r\n  ToolOutline,\r\n  TrophyOutline,\r\n  UsbOutline,\r\n  UserOutline,\r\n  WeiboCircleOutline\r\n} from '@ant-design/icons-angular/icons';\r\n\r\nexport const ICONS_AUTO = [\r\n  AlipayCircleOutline,\r\n  ApiOutline,\r\n  AppstoreOutline,\r\n  ArrowDownOutline,\r\n  BookOutline,\r\n  CloudOutline,\r\n  CopyrightOutline,\r\n  CustomerServiceOutline,\r\n  DashboardOutline,\r\n  DatabaseOutline,\r\n  DingdingOutline,\r\n  DislikeOutline,\r\n  DownloadOutline,\r\n  ForkOutline,\r\n  FrownOutline,\r\n  FullscreenExitOutline,\r\n  FullscreenOutline,\r\n  GithubOutline,\r\n  GlobalOutline,\r\n  HddOutline,\r\n  LaptopOutline,\r\n  LikeOutline,\r\n  LockOutline,\r\n  LogoutOutline,\r\n  MailOutline,\r\n  MenuFoldOutline,\r\n  MenuUnfoldOutline,\r\n  MessageOutline,\r\n  PayCircleOutline,\r\n  PieChartOutline,\r\n  PrinterOutline,\r\n  RocketOutline,\r\n  ScanOutline,\r\n  SettingOutline,\r\n  ShareAltOutline,\r\n  ShoppingCartOutline,\r\n  SoundOutline,\r\n  StarOutline,\r\n  TaobaoCircleOutline,\r\n  TaobaoOutline,\r\n  TeamOutline,\r\n  ToolOutline,\r\n  TrophyOutline,\r\n  UsbOutline,\r\n  UserOutline,\r\n  WeiboCircleOutline\r\n];\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable } from '@angular/core';\r\nimport { ACLService } from '@delon/acl';\r\nimport { ALAIN_I18N_TOKEN, MenuService, SettingsService, TitleService } from '@delon/theme';\r\nimport { TranslateService } from '@ngx-translate/core';\r\nimport { NzIconService } from 'ng-zorro-antd/icon';\r\nimport { zip } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ICONS } from '../style-icons';\r\nimport { ICONS_AUTO } from '../style-icons-auto';\r\nimport { I18NService } from '../i18n/i18n.service';\r\n\r\n/**\r\n * 用于应用启动时\r\n * 一般用来获取应用所需要的基础数据等\r\n */\r\n@Injectable()\r\nexport class StartupService {\r\n  constructor(\r\n    iconSrv: NzIconService,\r\n    private menuService: MenuService,\r\n    private translate: TranslateService,\r\n    @Inject(ALAIN_I18N_TOKEN) private i18n: I18NService,\r\n    private settingService: SettingsService,\r\n    private aclService: ACLService,\r\n    private titleService: TitleService,\r\n    private httpClient: HttpClient,\r\n  ) {\r\n    iconSrv.addIcon(...ICONS_AUTO, ...ICONS);\r\n  }\r\n\r\n  load(): Promise<any> {\r\n    // only works with promises\r\n    // https://github.com/angular/angular/issues/15088\r\n    return new Promise((resolve) => {\r\n      zip(this.httpClient.get(`assets/tmp/i18n/${this.i18n.defaultLang}.json`), this.httpClient.get('assets/tmp/app-data.json'))\r\n        .pipe(\r\n          // 接收其他拦截器后产生的异常消息\r\n          catchError((res) => {\r\n            console.warn(`StartupService.load: Network request failed`, res);\r\n            resolve(null);\r\n            return [];\r\n          }),\r\n        )\r\n        .subscribe(\r\n          ([langData, appData]) => {\r\n            // setting language data\r\n            this.translate.setTranslation(this.i18n.defaultLang, langData);\r\n            this.translate.setDefaultLang(this.i18n.defaultLang);\r\n\r\n            // application data\r\n            const res: any = appData;\r\n            // 应用信息：包括站点名、描述、年份\r\n            this.settingService.setApp(res.app);\r\n            // 用户信息：包括姓名、头像、邮箱地址\r\n            //this.settingService.setUser(res.user);\r\n            // ACL：设置权限为全量\r\n            this.aclService.setFull(true);\r\n            // 初始化菜单\r\n            this.menuService.add(res.menu);\r\n            // 设置页面标题的后缀\r\n            this.titleService.default = '';\r\n            this.titleService.suffix = res.app.name;\r\n          },\r\n          () => {},\r\n          () => {\r\n            resolve(null);\r\n          },\r\n        );\r\n    });\r\n  }\r\n}\r\n","// https://angular.io/guide/styleguide#style-04-12\r\nexport function throwIfAlreadyLoaded(parentModule: any, moduleName: string) {\r\n  if (parentModule) {\r\n    throw new Error(`${moduleName} has already been loaded. Import Core modules in the AppModule only.`);\r\n  }\r\n}\r\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\r\nimport { throwIfAlreadyLoaded } from './module-import-guard';\r\n\r\n@NgModule({\r\n  providers: [],\r\n})\r\nexport class CoreModule {\r\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\r\n    throwIfAlreadyLoaded(parentModule, 'CoreModule');\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["zorroZhCN","dfZhCn","delonZhCn","zorroZhTW","dfZhTw","delonZhTw","zorroEnUS","dfEn","delonEnUS"],"mappings":"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"}