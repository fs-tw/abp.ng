import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { FormsModule, ReactiveFormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';
import { DelonACLModule } from '@delon/acl';
import { DelonFormModule } from '@delon/form';
import { AlainThemeModule } from '@delon/theme';
import { TranslateModule } from '@ngx-translate/core';
import { SHARED_DELON_MODULES } from './shared-delon.module';
import { SHARED_ZORRO_MODULES } from './shared-zorro.module';
// #region third libs
import { CountdownModule } from 'ngx-countdown';
import { NgxTinymceModule } from 'ngx-tinymce';
import { UEditorModule } from 'ngx-ueditor';
const THIRDMODULES = [CountdownModule, UEditorModule, NgxTinymceModule];
// #endregion
// #region your componets & directives
const COMPONENTS = [];
const DIRECTIVES = [];
// #endregion
let SharedModule = class SharedModule {
};
SharedModule = __decorate([
    NgModule({
        imports: [
            CommonModule,
            FormsModule,
            RouterModule,
            ReactiveFormsModule,
            AlainThemeModule.forChild(),
            DelonACLModule,
            DelonFormModule,
            ...SHARED_DELON_MODULES,
            ...SHARED_ZORRO_MODULES,
            // third libs
            ...THIRDMODULES,
        ],
        declarations: [
            // your components
            ...COMPONENTS,
            ...DIRECTIVES,
        ],
        exports: [
            CommonModule,
            FormsModule,
            ReactiveFormsModule,
            RouterModule,
            AlainThemeModule,
            DelonACLModule,
            DelonFormModule,
            TranslateModule,
            ...SHARED_DELON_MODULES,
            ...SHARED_ZORRO_MODULES,
            // third libs
            ...THIRDMODULES,
            // your components
            ...COMPONENTS,
            ...DIRECTIVES,
        ],
    })
], SharedModule);
export { SharedModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2hhcmVkLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uL3RoZW1lcy9uZy1hbGFpbi9zaGFyZWQvc3JjL2xpYi9zaGFyZWQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsV0FBVyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDbEUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxZQUFZLENBQUM7QUFDNUMsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUM5QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxjQUFjLENBQUM7QUFDaEQsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBRXRELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQzdELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBRTdELHFCQUFxQjtBQUNyQixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ2hELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLGFBQWEsQ0FBQztBQUMvQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBRTVDLE1BQU0sWUFBWSxHQUFHLENBQUMsZUFBZSxFQUFFLGFBQWEsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFDO0FBQ3hFLGFBQWE7QUFFYixzQ0FBc0M7QUFDdEMsTUFBTSxVQUFVLEdBQUcsRUFBRSxDQUFDO0FBQ3RCLE1BQU0sVUFBVSxHQUFHLEVBQUUsQ0FBQztBQUN0QixhQUFhO0FBdUNiLElBQWEsWUFBWSxHQUF6QixNQUFhLFlBQVk7Q0FBRyxDQUFBO0FBQWYsWUFBWTtJQXJDeEIsUUFBUSxDQUFDO1FBQ1IsT0FBTyxFQUFFO1lBQ1AsWUFBWTtZQUNaLFdBQVc7WUFDWCxZQUFZO1lBQ1osbUJBQW1CO1lBQ25CLGdCQUFnQixDQUFDLFFBQVEsRUFBRTtZQUMzQixjQUFjO1lBQ2QsZUFBZTtZQUNmLEdBQUcsb0JBQW9CO1lBQ3ZCLEdBQUcsb0JBQW9CO1lBQ3ZCLGFBQWE7WUFDYixHQUFHLFlBQVk7U0FDaEI7UUFDRCxZQUFZLEVBQUU7WUFDWixrQkFBa0I7WUFDbEIsR0FBRyxVQUFVO1lBQ2IsR0FBRyxVQUFVO1NBQ2Q7UUFDRCxPQUFPLEVBQUU7WUFDUCxZQUFZO1lBQ1osV0FBVztZQUNYLG1CQUFtQjtZQUNuQixZQUFZO1lBQ1osZ0JBQWdCO1lBQ2hCLGNBQWM7WUFDZCxlQUFlO1lBQ2YsZUFBZTtZQUNmLEdBQUcsb0JBQW9CO1lBQ3ZCLEdBQUcsb0JBQW9CO1lBQ3ZCLGFBQWE7WUFDYixHQUFHLFlBQVk7WUFDZixrQkFBa0I7WUFDbEIsR0FBRyxVQUFVO1lBQ2IsR0FBRyxVQUFVO1NBQ2Q7S0FDRixDQUFDO0dBQ1csWUFBWSxDQUFHO1NBQWYsWUFBWSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlLCBSZWFjdGl2ZUZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBSb3V0ZXJNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9yb3V0ZXInO1xyXG5pbXBvcnQgeyBEZWxvbkFDTE1vZHVsZSB9IGZyb20gJ0BkZWxvbi9hY2wnO1xyXG5pbXBvcnQgeyBEZWxvbkZvcm1Nb2R1bGUgfSBmcm9tICdAZGVsb24vZm9ybSc7XHJcbmltcG9ydCB7IEFsYWluVGhlbWVNb2R1bGUgfSBmcm9tICdAZGVsb24vdGhlbWUnO1xyXG5pbXBvcnQgeyBUcmFuc2xhdGVNb2R1bGUgfSBmcm9tICdAbmd4LXRyYW5zbGF0ZS9jb3JlJztcclxuXHJcbmltcG9ydCB7IFNIQVJFRF9ERUxPTl9NT0RVTEVTIH0gZnJvbSAnLi9zaGFyZWQtZGVsb24ubW9kdWxlJztcclxuaW1wb3J0IHsgU0hBUkVEX1pPUlJPX01PRFVMRVMgfSBmcm9tICcuL3NoYXJlZC16b3Jyby5tb2R1bGUnO1xyXG5cclxuLy8gI3JlZ2lvbiB0aGlyZCBsaWJzXHJcbmltcG9ydCB7IENvdW50ZG93bk1vZHVsZSB9IGZyb20gJ25neC1jb3VudGRvd24nO1xyXG5pbXBvcnQgeyBOZ3hUaW55bWNlTW9kdWxlIH0gZnJvbSAnbmd4LXRpbnltY2UnO1xyXG5pbXBvcnQgeyBVRWRpdG9yTW9kdWxlIH0gZnJvbSAnbmd4LXVlZGl0b3InO1xyXG5cclxuY29uc3QgVEhJUkRNT0RVTEVTID0gW0NvdW50ZG93bk1vZHVsZSwgVUVkaXRvck1vZHVsZSwgTmd4VGlueW1jZU1vZHVsZV07XHJcbi8vICNlbmRyZWdpb25cclxuXHJcbi8vICNyZWdpb24geW91ciBjb21wb25ldHMgJiBkaXJlY3RpdmVzXHJcbmNvbnN0IENPTVBPTkVOVFMgPSBbXTtcclxuY29uc3QgRElSRUNUSVZFUyA9IFtdO1xyXG4vLyAjZW5kcmVnaW9uXHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgUm91dGVyTW9kdWxlLFxyXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcclxuICAgIEFsYWluVGhlbWVNb2R1bGUuZm9yQ2hpbGQoKSxcclxuICAgIERlbG9uQUNMTW9kdWxlLFxyXG4gICAgRGVsb25Gb3JtTW9kdWxlLFxyXG4gICAgLi4uU0hBUkVEX0RFTE9OX01PRFVMRVMsXHJcbiAgICAuLi5TSEFSRURfWk9SUk9fTU9EVUxFUyxcclxuICAgIC8vIHRoaXJkIGxpYnNcclxuICAgIC4uLlRISVJETU9EVUxFUyxcclxuICBdLFxyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgLy8geW91ciBjb21wb25lbnRzXHJcbiAgICAuLi5DT01QT05FTlRTLFxyXG4gICAgLi4uRElSRUNUSVZFUyxcclxuICBdLFxyXG4gIGV4cG9ydHM6IFtcclxuICAgIENvbW1vbk1vZHVsZSxcclxuICAgIEZvcm1zTW9kdWxlLFxyXG4gICAgUmVhY3RpdmVGb3Jtc01vZHVsZSxcclxuICAgIFJvdXRlck1vZHVsZSxcclxuICAgIEFsYWluVGhlbWVNb2R1bGUsXHJcbiAgICBEZWxvbkFDTE1vZHVsZSxcclxuICAgIERlbG9uRm9ybU1vZHVsZSxcclxuICAgIFRyYW5zbGF0ZU1vZHVsZSxcclxuICAgIC4uLlNIQVJFRF9ERUxPTl9NT0RVTEVTLFxyXG4gICAgLi4uU0hBUkVEX1pPUlJPX01PRFVMRVMsXHJcbiAgICAvLyB0aGlyZCBsaWJzXHJcbiAgICAuLi5USElSRE1PRFVMRVMsXHJcbiAgICAvLyB5b3VyIGNvbXBvbmVudHNcclxuICAgIC4uLkNPTVBPTkVOVFMsXHJcbiAgICAuLi5ESVJFQ1RJVkVTLFxyXG4gIF0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTaGFyZWRNb2R1bGUge31cclxuIl19