import { __decorate, __metadata, __param } from "tslib";
import { LoginComponent } from '@abp/ng.account';
import { ToasterService } from '@abp/ng.theme.shared';
import { Component, Inject, Optional } from '@angular/core';
import { FormBuilder } from '@angular/forms';
import { Store } from '@ngxs/store';
import { OAuthService } from 'angular-oauth2-oidc';
import { AuthService } from '@abp/ng.core';
import { LoginService } from '../../service/login.service';
let UserLoginComponent = class UserLoginComponent extends LoginComponent {
    constructor(loginService, options, _fb, _oauthService, _store, _toasterService, _authService) {
        super(_fb, _oauthService, _store, _toasterService, _authService);
        this.loginService = loginService;
        this.options = options;
        this._store = _store;
        this._toasterService = _toasterService;
    }
};
UserLoginComponent = __decorate([
    Component({
        selector: 'ng-alain-login',
        template: "<ng-alain-auth-wrapper [mainContentRef]=\"mainContentRef\">\r\n  <ng-template #mainContentRef>\r\n    <form nz-form [formGroup]=\"form\" (ngSubmit)=\"onSubmit()\" role=\"form\">\r\n      <nz-tabset [nzAnimated]=\"false\" class=\"tabs\">\r\n        <nz-tab [nzTitle]=\"'AbpAccount::Login' | abpLocalization\">\r\n          <nz-form-item>\r\n            <nz-form-control [nzErrorTip]=\"'Please enter mobile number!' | abpLocalization\">\r\n              <nz-input-group nzSize=\"large\" nzPrefixIcon=\"user\">\r\n                <input nz-input formControlName=\"username\" placeholder=\"{{'AbpAccount::UserNameOrEmailAddress' | abpLocalization}}\" />\r\n              </nz-input-group>\r\n            </nz-form-control>\r\n          </nz-form-item>\r\n          <nz-form-item>\r\n            <nz-form-control [nzErrorTip]=\"'Please enter password!' | abpLocalization\">\r\n              <nz-input-group nzSize=\"large\" nzPrefixIcon=\"lock\">\r\n                <input nz-input type=\"password\" formControlName=\"password\" placeholder=\"{{ 'AbpAccount::Password' | abpLocalization }}\" />\r\n              </nz-input-group>\r\n            </nz-form-control>\r\n          </nz-form-item>\r\n        </nz-tab>\r\n      </nz-tabset>\r\n      <nz-form-item>\r\n        <nz-col [nzSpan]=\"12\">\r\n          <label nz-checkbox formControlName=\"remember\">{{ 'AbpAccount::RememberMe' | abpLocalization }}</label>\r\n        </nz-col>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <button nz-button type=\"submit\" nzType=\"primary\" nzSize=\"large\" [nzLoading]=\"inProgress\" nzBlock>\r\n          {{ 'AbpAccount::Login' | abpLocalization }}\r\n        </button>\r\n      </nz-form-item>\r\n    </form>\r\n    <div class=\"other\">\r\n      <a class=\"register\" routerLink=\"/account/register\">{{ 'AbpAccount::Register' | abpLocalization }}</a>\r\n    </div>\r\n  </ng-template>\r\n</ng-alain-auth-wrapper>\r\n\r\n",
        styles: [":host{display:block;margin:0 auto;width:368px}:host ::ng-deep .ant-tabs .ant-tabs-bar{border-bottom:0;margin-bottom:24px;text-align:center}:host ::ng-deep .ant-tabs-tab{font-size:16px;line-height:24px}:host ::ng-deep .ant-input-affix-wrapper .ant-input:not(:first-child){padding-left:34px}:host ::ng-deep .icon{color:rgba(0,0,0,.2);cursor:pointer;font-size:24px;margin-left:16px;transition:color .3s;vertical-align:middle}:host ::ng-deep .icon:hover{color:#1890ff}:host ::ng-deep .other{line-height:22px;margin-top:24px;text-align:left}:host ::ng-deep .other nz-tooltip{vertical-align:middle}:host ::ng-deep .other .register{float:right}"]
    }),
    __param(1, Optional()), __param(1, Inject('ACCOUNT_OPTIONS')),
    __metadata("design:paramtypes", [LoginService, Object, FormBuilder,
        OAuthService,
        Store,
        ToasterService,
        AuthService])
], UserLoginComponent);
export { UserLoginComponent };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9naW4uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vbGlicy9hY2NvdW50L25nLWFsYWluL3NyYy9saWIvY29tcG9uZW50cy9sb2dpbi9sb2dpbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxjQUFjLEVBQVcsTUFBTSxpQkFBaUIsQ0FBQztBQUMxRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDdEQsT0FBTyxFQUFFLFNBQVMsRUFBRSxNQUFNLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzVELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sYUFBYSxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNuRCxPQUFPLEVBQUUsV0FBVyxFQUFvQyxNQUFNLGNBQWMsQ0FBQztBQUM3RSxPQUFPLEVBQUUsWUFBWSxFQUFZLE1BQU0sNkJBQTZCLENBQUE7QUFVcEUsSUFBYSxrQkFBa0IsR0FBL0IsTUFBYSxrQkFBbUIsU0FBUSxjQUFjO0lBRWxELFlBQ2MsWUFBMEIsRUFDVyxPQUFZLEVBQzNELEdBQWdCLEVBQ2hCLGFBQTJCLEVBQ2pCLE1BQWEsRUFDYixlQUErQixFQUN6QyxZQUF5QjtRQUV6QixLQUFLLENBQUMsR0FBRyxFQUFFLGFBQWEsRUFBRSxNQUFNLEVBQUUsZUFBZSxFQUFFLFlBQVksQ0FBQyxDQUFDO1FBUnZELGlCQUFZLEdBQVosWUFBWSxDQUFjO1FBQ1csWUFBTyxHQUFQLE9BQU8sQ0FBSztRQUdqRCxXQUFNLEdBQU4sTUFBTSxDQUFPO1FBQ2Isb0JBQWUsR0FBZixlQUFlLENBQWdCO0lBSTdDLENBQUM7Q0FpQ0osQ0FBQTtBQTdDWSxrQkFBa0I7SUFMOUIsU0FBUyxDQUFDO1FBQ1AsUUFBUSxFQUFFLGdCQUFnQjtRQUMxQixtNURBQXFDOztLQUV4QyxDQUFDO0lBS08sV0FBQSxRQUFRLEVBQUUsQ0FBQSxFQUFFLFdBQUEsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUE7cUNBRGQsWUFBWSxVQUUvQixXQUFXO1FBQ0QsWUFBWTtRQUNULEtBQUs7UUFDSSxjQUFjO1FBQzNCLFdBQVc7R0FUcEIsa0JBQWtCLENBNkM5QjtTQTdDWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBMb2dpbkNvbXBvbmVudCwgT3B0aW9ucyB9IGZyb20gJ0BhYnAvbmcuYWNjb3VudCc7XHJcbmltcG9ydCB7IFRvYXN0ZXJTZXJ2aWNlIH0gZnJvbSAnQGFicC9uZy50aGVtZS5zaGFyZWQnO1xyXG5pbXBvcnQgeyBDb21wb25lbnQsIEluamVjdCwgT3B0aW9uYWwgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRm9ybUJ1aWxkZXIgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IFN0b3JlIH0gZnJvbSAnQG5neHMvc3RvcmUnO1xyXG5pbXBvcnQgeyBPQXV0aFNlcnZpY2UgfSBmcm9tICdhbmd1bGFyLW9hdXRoMi1vaWRjJztcclxuaW1wb3J0IHsgQXV0aFNlcnZpY2UsIFNldFJlbWVtYmVyLCBHZXRBcHBDb25maWd1cmF0aW9uIH0gZnJvbSAnQGFicC9uZy5jb3JlJztcclxuaW1wb3J0IHsgTG9naW5TZXJ2aWNlLCBMb2dpbkR0byB9IGZyb20gJy4uLy4uL3NlcnZpY2UvbG9naW4uc2VydmljZSdcclxuaW1wb3J0IHsgTmF2aWdhdGUsIFJvdXRlclN0YXRlIH0gZnJvbSAnQG5neHMvcm91dGVyLXBsdWdpbic7XHJcbmltcG9ydCB7IGNhdGNoRXJyb3IsIGZpbmFsaXplLCB0YXAgfSBmcm9tICdyeGpzL29wZXJhdG9ycyc7XHJcbmltcG9ydCBzbnEgZnJvbSAnc25xJztcclxuaW1wb3J0IHsgdGhyb3dFcnJvciB9IGZyb20gJ3J4anMnO1xyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnbmctYWxhaW4tbG9naW4nLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL2xvZ2luLmNvbXBvbmVudC5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL2xvZ2luLmNvbXBvbmVudC5sZXNzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIFVzZXJMb2dpbkNvbXBvbmVudCBleHRlbmRzIExvZ2luQ29tcG9uZW50IHtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcihcclxuICAgICAgICBwcm90ZWN0ZWQgbG9naW5TZXJ2aWNlOiBMb2dpblNlcnZpY2UsXHJcbiAgICAgICAgQE9wdGlvbmFsKCkgQEluamVjdCgnQUNDT1VOVF9PUFRJT05TJykgcHJpdmF0ZSBvcHRpb25zOiBhbnksXHJcbiAgICAgICAgX2ZiOiBGb3JtQnVpbGRlcixcclxuICAgICAgICBfb2F1dGhTZXJ2aWNlOiBPQXV0aFNlcnZpY2UsXHJcbiAgICAgICAgcHJvdGVjdGVkIF9zdG9yZTogU3RvcmUsXHJcbiAgICAgICAgcHJvdGVjdGVkIF90b2FzdGVyU2VydmljZTogVG9hc3RlclNlcnZpY2UsXHJcbiAgICAgICAgX2F1dGhTZXJ2aWNlOiBBdXRoU2VydmljZVxyXG4gICAgKSB7XHJcbiAgICAgICAgc3VwZXIoX2ZiLCBfb2F1dGhTZXJ2aWNlLCBfc3RvcmUsIF90b2FzdGVyU2VydmljZSwgX2F1dGhTZXJ2aWNlKTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBvdmVycmlkZVxyXG4gICAgLy8gb25TdWJtaXQoKSB7XHJcbiAgICAvLyAgICAgYWxlcnQoXCJvdmVycmlkZVwiKVxyXG4gICAgLy8gICAgIGlmICh0aGlzLmZvcm0uaW52YWxpZCkgcmV0dXJuO1xyXG5cclxuICAgIC8vICAgICBsZXQgaW5wdXQ6IExvZ2luRHRvID0ge1xyXG4gICAgLy8gICAgICAgICB1c2VyTmFtZU9yRW1haWxBZGRyZXNzOiB0aGlzLmZvcm0uZ2V0KCd1c2VybmFtZScpLnZhbHVlLFxyXG4gICAgLy8gICAgICAgICBwYXNzd29yZDogdGhpcy5mb3JtLmdldCgncGFzc3dvcmQnKS52YWx1ZSxcclxuICAgIC8vICAgICAgICAgcmVtZW1iZXJDbGllbnQ6IGZhbHNlXHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gICAgIHRoaXMuaW5Qcm9ncmVzcyA9IHRydWU7XHJcbiAgICAvLyAgICAgdGhpcy5sb2dpblNlcnZpY2UubG9naW4oaW5wdXQpLnBpcGUoXHJcbiAgICAvLyAgICAgICAgIGNhdGNoRXJyb3IoZXJyID0+IHtcclxuICAgIC8vICAgICAgICAgICAgIHRoaXMuX3RvYXN0ZXJTZXJ2aWNlLmVycm9yKFxyXG4gICAgLy8gICAgICAgICAgICAgICAgIHNucSgoKSA9PiBlcnIuZXJyb3IuZXJyb3JfZGVzY3JpcHRpb24pIHx8XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgc25xKCgpID0+IGVyci5lcnJvci5lcnJvci5tZXNzYWdlLCAnQWJwQWNjb3VudDo6RGVmYXVsdEVycm9yTWVzc2FnZScpLFxyXG4gICAgLy8gICAgICAgICAgICAgICAgICdFcnJvcicsXHJcbiAgICAvLyAgICAgICAgICAgICAgICAgeyBsaWZlOiA3MDAwIH0sXHJcbiAgICAvLyAgICAgICAgICAgICApO1xyXG4gICAgLy8gICAgICAgICAgICAgcmV0dXJuIHRocm93RXJyb3IoZXJyKTtcclxuICAgIC8vICAgICAgICAgfSksXHJcbiAgICAvLyAgICAgICAgIGZpbmFsaXplKCgpID0+ICh0aGlzLmluUHJvZ3Jlc3MgPSBmYWxzZSkpLFxyXG4gICAgLy8gICAgICkuc3Vic2NyaWJlKCh4OiBhbnkpID0+IHtcclxuICAgIC8vICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2FjY2Vzc190b2tlbicsIHgudG9rZW4uYWNjZXNzVG9rZW4pO1xyXG4gICAgLy8gICAgICAgICB0aGlzLl9zdG9yZS5kaXNwYXRjaChuZXcgU2V0UmVtZW1iZXIodGhpcy5mb3JtLmdldCgncmVtZW1iZXInKS52YWx1ZSkpO1xyXG4gICAgLy8gICAgICAgICB0aGlzLl9zdG9yZS5kaXNwYXRjaChuZXcgR2V0QXBwQ29uZmlndXJhdGlvbigpKVxyXG4gICAgLy8gICAgICAgICBjb25zdCByZWRpcmVjdFVybCA9XHJcbiAgICAvLyAgICAgICAgICAgICBzbnEoKCkgPT4gd2luZG93Lmhpc3Rvcnkuc3RhdGUucmVkaXJlY3RVcmwpIHx8ICh0aGlzLm9wdGlvbnMgfHwge30pLnJlZGlyZWN0VXJsIHx8ICcvJztcclxuICAgIC8vICAgICAgICAgdGhpcy5fc3RvcmUuZGlzcGF0Y2gobmV3IE5hdmlnYXRlKFtyZWRpcmVjdFVybF0pKTtcclxuICAgIC8vICAgICB9KVxyXG4gICAgLy8gfVxyXG59XHJcbiJdfQ==