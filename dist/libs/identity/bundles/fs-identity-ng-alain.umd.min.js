!function(n,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("@angular/core"),require("@fs/ng-alain/basic"),require("@abp/ng.identity"),require("@abp/ng.theme.shared"),require("@angular/forms"),require("@ngxs/store"),require("@abp/ng.core"),require("@fs/permission-management/ng-alain"),require("@ngx-validate/core")):"function"==typeof define&&define.amd?define("@fs/identity/ng-alain",["exports","@angular/core","@fs/ng-alain/basic","@abp/ng.identity","@abp/ng.theme.shared","@angular/forms","@ngxs/store","@abp/ng.core","@fs/permission-management/ng-alain","@ngx-validate/core"],e):e(((n="undefined"!=typeof globalThis?globalThis:n||self).fs=n.fs||{},n.fs.identity=n.fs.identity||{},n.fs.identity["ng-alain"]={}),n.ng.core,n.basic,n.ng_identity,n.ng_theme_shared,n.ng.forms,n.store,n.ng_core,n.ngAlain,n.core$1)}(this,(function(n,e,r,t,o,a,i,l,m,s){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */var p=function(n,e){return(p=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(n,e){n.__proto__=e}||function(n,e){for(var r in e)e.hasOwnProperty(r)&&(n[r]=e[r])})(n,e)};function d(n,e){function r(){this.constructor=n}p(n,e),n.prototype=null===e?Object.create(e):(r.prototype=e.prototype,new r)}var z;function c(n,e,r,t){var o,a=arguments.length,i=a<3?e:null===t?t=Object.getOwnPropertyDescriptor(e,r):t;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(n,e,r,t);else for(var l=n.length-1;l>=0;l--)(o=n[l])&&(i=(a<3?o(i):a>3?o(e,r,i):o(e,r))||i);return a>3&&i&&Object.defineProperty(e,r,i),i}function b(n,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(n,e)}n.UsersComponent=function(n){function e(e,r,t,o,a){var i=n.call(this,e,r,t,o,a)||this;return i._list=e,i._confirmationService=r,i._fb=t,i._store=o,i._identityService=a,i}return d(e,n),e}(t.UsersComponent),n.UsersComponent=c([e.Component({selector:"ng-alain-users",template:'<fs-page-bar></fs-page-bar>  \r\n<nz-card [nzBordered]="false">\r\n  \x3c!-- <form nz-form [nzLayout]="\'inline\'" class="search__form"> --\x3e\r\n    <div nz-row [nzGutter]="{ xs: 8, sm: 8, md: 8, lg: 24, xl: 48, xxl: 48 }">\r\n      <div nz-col nzMd="8" nzSm="24">\r\n        <nz-form-item>\r\n          <nz-form-label nzFor="no">{{\'AbpIdentity::PagerSearch\' | abpLocalization }}</nz-form-label>\r\n          <nz-form-control>\r\n            <input nz-input type="search" [placeholder]="\'AbpUi::PagerSearch\' | abpLocalization" [(ngModel)]="list.filter" />\r\n          </nz-form-control>\r\n        </nz-form-item>\r\n      </div>\r\n    </div>\r\n  \x3c!-- </form> --\x3e\r\n  <button nz-button [abpPermission]="\'AbpIdentity.Users.Create\'" (click)="add()" [nzType]="\'primary\'">\r\n    <i nz-icon nzType="plus"></i>\r\n    <span>{{ \'AbpIdentity::NewUser\' | abpLocalization }}</span>\r\n  </button>\r\n  <div class="my-md"></div>\r\n  <nz-table #basicTable [nzData]="data$ | async" [nzPageSize]="list.maxResultCount" [nzTotal]="totalCount$ | async"\r\n    [nzLoading]="list.isLoading$ | async" [nzFrontPagination]="false" (nzPageIndexChange)="list.page=$event-1;">\r\n    <thead>\r\n      <tr>\r\n        <th>{{ \'AbpIdentity::DisplayName:UserName\' | abpLocalization }}</th>\r\n        <th>{{ \'AbpIdentity::DisplayName:Email\' | abpLocalization }}</th>\r\n        <th>{{ \'AbpIdentity::DisplayName:PhoneNumber\' | abpLocalization }}</th>\r\n        <th>{{ \'AbpIdentity::Actions\' | abpLocalization }}</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor="let data of basicTable.data">\r\n        <td>{{ data.userName }}</td>\r\n        <td>{{ data.email }}</td>\r\n        <td>{{ data.phoneNumber }}</td>\r\n        <td>\r\n          <a class="ant-dropdown-link" nz-dropdown [nzDropdownMenu]="opMenu">\r\n            {{ \'AbpIdentity::Actions\' | abpLocalization }}\r\n            <i nz-icon nzType="down"></i>\r\n          </a>\r\n          <nz-dropdown-menu #opMenu="nzDropdownMenu">\r\n            <ul nz-menu>\r\n              <li nz-menu-item [abpPermission]="\'AbpIdentity.Users.Update\'" (click)="edit(data.id)">\r\n                {{ \'AbpIdentity::Edit\' | abpLocalization }}</li>\r\n              <li nz-menu-item [abpPermission]="\'AbpIdentity.Users.ManagePermissions\'"\r\n                (click)="openPermissionsModal(data.id)">\r\n                {{ \'AbpIdentity::Permissions\' | abpLocalization }}</li>\r\n              <li nz-menu-item [abpPermission]="\'AbpIdentity.Users.Delete\'" (click)="delete(data.id, data.userName)">\r\n                {{ \'AbpIdentity::Delete\' | abpLocalization }}</li>\r\n            </ul>\r\n          </nz-dropdown-menu>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </nz-table>\r\n</nz-card>\r\n<nz-modal [nzStyle]="{ top: \'20px\' }" [(nzVisible)]="isModalVisible" [nzTitle]="modalTitle" [nzContent]="modalContent"\r\n  [nzFooter]="modalFooter" (nzOnCancel)="isModalVisible=false">\r\n  <ng-template #modalTitle>\r\n    {{(selected?.id ? \'AbpIdentity::Edit\' : \'AbpIdentity::NewUser\') | abpLocalization}}\r\n  </ng-template>\r\n\r\n  <ng-template #modalContent>\r\n    <ng-template #loaderRef>\r\n      <div class="text-center"><i class="fa fa-pulse fa-spinner"></i></div>\r\n    </ng-template>\r\n\r\n    <form nz-form *ngIf="form; else loaderRef" [formGroup]="form" (ngSubmit)="save()">\r\n      <nz-tabset>\r\n        <nz-tab nzTitle="{{\'AbpIdentity::UserInformations\' | abpLocalization}}">\r\n          <nz-form-item>\r\n            <nz-form-label [nzSm]="6" [nzXs]="24" nzRequired nzFor="user-name">\r\n              {{ \'AbpIdentity::UserName\' | abpLocalization }}</nz-form-label>\r\n            <nz-form-control [nzSm]="14" [nzXs]="24" >\r\n              <input nz-input formControlName="userName" id="user-name" />\r\n            </nz-form-control>\r\n          </nz-form-item>\r\n          <nz-form-item>\r\n            <nz-form-label [nzSm]="6" [nzXs]="24" nzFor="name">{{ \'AbpIdentity::DisplayName:Name\' | abpLocalization }}\r\n            </nz-form-label>\r\n            <nz-form-control [nzSm]="14" [nzXs]="24">\r\n              <input nz-input formControlName="name" id="name" />\r\n            </nz-form-control>\r\n          </nz-form-item>\r\n          <nz-form-item>\r\n            <nz-form-label [nzSm]="6" [nzXs]="24" nzFor="surname">\r\n              {{ \'AbpIdentity::DisplayName:Surname\' | abpLocalization }}</nz-form-label>\r\n            <nz-form-control [nzSm]="14" [nzXs]="24">\r\n              <input nz-input formControlName="surname" id="surname" />\r\n            </nz-form-control>\r\n          </nz-form-item>\r\n          <nz-form-item>\r\n            <nz-form-label [nzSm]="6" [nzXs]="24" nzFor="password" nzRequired>\r\n              {{ \'AbpIdentity::Password\' | abpLocalization }}</nz-form-label>\r\n            <nz-form-control [nzSm]="14" [nzXs]="24">\r\n              <input nz-input type="password" id="password" formControlName="password" />\r\n            </nz-form-control>\r\n          </nz-form-item>\r\n          <nz-form-item>\r\n            <nz-form-label [nzSm]="6" [nzXs]="24" nzRequired nzFor="email">\r\n              {{ \'AbpIdentity::EmailAddress\' | abpLocalization }}</nz-form-label>\r\n            <nz-form-control [nzSm]="14" [nzXs]="24">\r\n              <input nz-input formControlName="email" id="email" />\r\n            </nz-form-control>\r\n          </nz-form-item>\r\n          <nz-form-item>\r\n            <nz-form-label [nzSm]="6" [nzXs]="24" nzFor="phoneNumber">{{ \'AbpIdentity::PhoneNumber\' | abpLocalization }}\r\n            </nz-form-label>\r\n            <nz-form-control [nzSm]="14" [nzXs]="24">\r\n              <input nz-input formControlName="phoneNumber" id="phoneNumber" />\r\n            </nz-form-control>\r\n          </nz-form-item>\r\n          <nz-form-item>\r\n            <nz-form-control>\r\n              <label nz-checkbox formControlName="lockoutEnabled">\r\n                <span>\r\n                  {{\r\n                  \'AbpIdentity::DisplayName:LockoutEnabled\' | abpLocalization\r\n                  }}\r\n                </span>\r\n              </label>\r\n            </nz-form-control>\r\n          </nz-form-item>\r\n          <nz-form-item>\r\n            <nz-form-control>\r\n              <label nz-checkbox formControlName="twoFactorEnabled">\r\n                <span>\r\n                  {{\r\n                  \'AbpIdentity::DisplayName:TwoFactorEnabled\' | abpLocalization\r\n                  }}\r\n                </span>\r\n              </label>\r\n            </nz-form-control>\r\n          </nz-form-item>\r\n        </nz-tab>\r\n        <nz-tab nzTitle="{{\'AbpIdentity::Roles\' | abpLocalization}}">\r\n          <nz-form-item>\r\n            <nz-form-control *ngFor="let roleGroup of roleGroups; let i = index; trackBy: trackByFn">\r\n              <label nz-checkbox [formControl]="roleGroup.controls[roles[i].name]">\r\n                <span>\r\n                  {{ roles[i].name }}\r\n                </span>\r\n              </label>\r\n            </nz-form-control>\r\n          </nz-form-item>\r\n        </nz-tab>\r\n      </nz-tabset>\r\n    </form>\r\n  </ng-template>\r\n\r\n  <ng-template #modalFooter>\r\n    <button nz-button nzType="default" (click)="isModalVisible=false;this.form = null;">\r\n      {{ \'AbpIdentity::Cancel\' | abpLocalization }}\r\n    </button>\r\n    <button nz-button nzType="primary" (click)="save()" [disabled]="form?.invalid">\r\n      {{\r\n      \'AbpIdentity::Save\' | abpLocalization\r\n      }}\r\n    </button>\r\n  </ng-template>\r\n</nz-modal>\r\n<ng-alain-permission-management [(visible)]="visiblePermissions" providerName="U" [providerKey]="providerKey">\r\n</ng-alain-permission-management>\r\n',providers:[l.ListService]}),b("design:paramtypes",[l.ListService,o.ConfirmationService,a.FormBuilder,i.Store,t.IdentityService])],n.UsersComponent),n.RolesComponent=function(n){function e(e,r,t,o){var a=n.call(this,e,r,t,o)||this;return a._list=e,a._confirmationService=r,a._fb=t,a._store=o,a}return d(e,n),e}(t.RolesComponent),n.RolesComponent=c([e.Component({selector:"ng-alain-roles",template:'<fs-page-bar></fs-page-bar>  \r\n<nz-card [nzBordered]="false">\r\n  <button nz-button [abpPermission]="\'AbpIdentity.Roles.Create\'" (click)="add()" [nzType]="\'primary\'">\r\n    <i nz-icon nzType="plus"></i>\r\n    <span>{{ \'AbpIdentity::NewRole\' | abpLocalization }}</span>\r\n  </button>\r\n  <div class="my-md"></div>\r\n  <nz-table #basicTable [nzData]="data$ | async" [nzPageSize]="list.maxResultCount" [nzTotal]="totalCount$ | async"\r\n    [nzLoading]="list.isLoading$ | async" [nzFrontPagination]="false" (nzPageIndexChange)="list.page=$event-1;">\r\n    <thead>\r\n      <tr>\r\n        <th>{{ \'AbpIdentity::DisplayName:RoleName\' | abpLocalization }}</th>\r\n        <th>{{ \'AbpIdentity::Actions\' | abpLocalization }}</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor="let data of basicTable.data">\r\n        <td>{{ data.name }}\r\n          <nz-tag [nzColor]="\'#17a2b8\'" *ngIf="data.isPublic">\r\n            {{ \'AbpIdentity::DisplayName:IsPublic\' | abpLocalization }}</nz-tag>\r\n          <nz-tag [nzColor]="\'#28a745\'" *ngIf="data.isDefault">\r\n            {{ \'AbpIdentity::DisplayName:IsDefault\' | abpLocalization }}</nz-tag>\r\n        </td>\r\n        <td>\r\n          <a nz-dropdown [nzDropdownMenu]="opMenu">\r\n            {{ \'AbpIdentity::Actions\' | abpLocalization }}\r\n            <i nz-icon nzType="down"></i>\r\n          </a>\r\n          <nz-dropdown-menu #opMenu="nzDropdownMenu">\r\n            <ul nz-menu>\r\n              <li nz-menu-item [abpPermission]="\'AbpIdentity.Roles.Update\'" (click)="edit(data.id)">\r\n                {{ \'AbpIdentity::Edit\' | abpLocalization }}</li>\r\n              <li nz-menu-item [abpPermission]="\'AbpIdentity.Roles.ManagePermissions\'"\r\n                (click)="openPermissionsModal(data.name)">\r\n                {{ \'AbpIdentity::Permissions\' | abpLocalization }}</li>\r\n              <li nz-menu-item [abpPermission]="\'AbpIdentity.Roles.Delete\'" (click)="delete(data.id, data.name)">\r\n                {{ \'AbpIdentity::Delete\' | abpLocalization }}</li>\r\n            </ul>\r\n          </nz-dropdown-menu>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </nz-table>\r\n</nz-card>\r\n<nz-modal [nzStyle]="{ top: \'20px\' }" [(nzVisible)]="isModalVisible" [nzTitle]="modalTitle" [nzContent]="modalContent"\r\n  [nzFooter]="modalFooter" (nzOnCancel)="isModalVisible=false">\r\n  <ng-template #modalTitle>\r\n    {{(selected?.id ? \'AbpIdentity::Edit\' : \'AbpIdentity::NewRole\') | abpLocalization}}\r\n  </ng-template>\r\n\r\n  <ng-template #modalContent>\r\n    <ng-template #loaderRef>\r\n      <div class="text-center"><i class="fa fa-pulse fa-spinner"></i></div>\r\n    </ng-template>\r\n\r\n    <form nz-form *ngIf="form; else loaderRef" [formGroup]="form" (ngSubmit)="save()">\r\n\r\n\r\n      <nz-form-item>\r\n        <nz-form-label [nzSm]="6" [nzXs]="24" nzRequired nzFor="role-name">\r\n          {{ \'AbpIdentity::RoleName\' | abpLocalization }}</nz-form-label>\r\n        <nz-form-control [nzSm]="14" [nzXs]="24">\r\n          <input nz-input formControlName="name" id="role-name" />\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n      <nz-form-item>\r\n        <nz-form-control [nzSpan]="14" [nzOffset]="6">\r\n          <label nz-checkbox formControlName="isDefault">\r\n            <span>\r\n              {{\r\n                  \'AbpIdentity::DisplayName:IsDefault\' | abpLocalization\r\n              }}\r\n            </span>\r\n          </label>\r\n          <label nz-checkbox formControlName="isPublic">\r\n            <span>\r\n              {{\r\n                  \'AbpIdentity::DisplayName:IsPublic\' | abpLocalization\r\n              }}\r\n            </span>\r\n          </label>\r\n        </nz-form-control>\r\n      </nz-form-item>\r\n    </form>\r\n  </ng-template>\r\n\r\n  <ng-template #modalFooter>\r\n    <button nz-button nzType="default" (click)="isModalVisible=false;this.form = null">\r\n      {{ \'AbpIdentity::Cancel\' | abpLocalization }}\r\n    </button>\r\n    <button nz-button nzType="primary" (click)="save()" [disabled]="form?.invalid">\r\n      {{\r\n      \'AbpIdentity::Save\' | abpLocalization\r\n      }}\r\n    </button>\r\n  </ng-template>\r\n</nz-modal>\r\n<ng-alain-permission-management [(visible)]="visiblePermissions" providerName="R" [providerKey]="providerKey">\r\n</ng-alain-permission-management>',providers:[l.ListService]}),b("design:paramtypes",[l.ListService,o.ConfirmationService,a.FormBuilder,i.Store])],n.RolesComponent),n.IdentityNgAlainModule=z=function(){function n(){}return n.forChild=function(){return{ngModule:z,providers:[]}},n.forLazy=function(){return new l.LazyModuleFactory(z.forChild())},n}(),n.IdentityNgAlainModule=z=c([e.NgModule({imports:[l.CoreModule,r.NgAlainBasicModule,m.PermissionManagementNgAlainModule,s.NgxValidateCoreModule,t.IdentityModule],declarations:[n.UsersComponent,n.RolesComponent],entryComponents:[n.UsersComponent,n.RolesComponent]})],n.IdentityNgAlainModule),Object.defineProperty(n,"__esModule",{value:!0})}));
//# sourceMappingURL=fs-identity-ng-alain.umd.min.js.map