!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@abp/ng.core"),require("@abp/ng.theme.shared"),require("@angular/core"),require("@ngxs/store"),require("rxjs"),require("@angular/router")):"function"==typeof define&&define.amd?define("@abp/ng.setting-management",["exports","@abp/ng.core","@abp/ng.theme.shared","@angular/core","@ngxs/store","rxjs","@angular/router"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).abp=e.abp||{},e.abp.ng=e.abp.ng||{},e.abp.ng["setting-management"]={}),e.ng_core,e.ng_theme_shared,e.ng.core,e.store,e.rxjs,e.ng.router)}(this,(function(e,t,n,r,a,o,i){"use strict";var c=function(e){this.payload=e};c.type="[SettingManagement] Set Selected Tab";function s(e,t,n,r){var a,o=arguments.length,i=o<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,r);else for(var c=e.length-1;c>=0;c--)(a=e[c])&&(i=(o<3?a(i):o>3?a(t,n,i):a(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}function l(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}Object.create;Object.create;e.ɵc=function(){function e(){}return e.getSelectedTab=function(e){return e.selectedTab},e.prototype.settingManagementAction=function(e,t){(0,e.patchState)({selectedTab:t.payload})},e}(),e.ɵc.decorators=[{type:r.Injectable}],s([a.Action(c),l("design:type",Function),l("design:paramtypes",[Object,c]),l("design:returntype",void 0)],e.ɵc.prototype,"settingManagementAction",null),s([a.Selector(),l("design:type",Function),l("design:paramtypes",[Object]),l("design:returntype",void 0)],e.ɵc,"getSelectedTab",null),e.ɵc=s([a.State({name:"SettingManagementState",defaults:{}})],e.ɵc);var d=function(){function t(e,t){this.store=e,this.settingTabs=t,this.subscription=new o.Subscription,this.settings=[],this.trackByFn=function(e,t){return t.name}}return Object.defineProperty(t.prototype,"selected",{get:function(){var t=this.store.selectSnapshot(e.ɵc.getSelectedTab);return(null==t?void 0:t.component)?t:this.settings[0]||{}},set:function(e){this.store.dispatch(new c(e))},enumerable:!1,configurable:!0}),t.prototype.ngOnDestroy=function(){this.subscription.unsubscribe()},t.prototype.ngOnInit=function(){var e=this;this.subscription.add(this.settingTabs.visible$.subscribe((function(t){e.settings=t,e.selected||(e.selected=e.settings[0])})))},t}();d.decorators=[{type:r.Component,args:[{selector:"abp-setting-management",template:'<div class="row entry-row">\r\n  <div class="col-auto">\r\n    <h1 class="content-header-title">{{ \'AbpSettingManagement::Settings\' | abpLocalization }}</h1>\r\n  </div>\r\n  <div id="breadcrumb" class="col-lg-auto pl-lg-0">\r\n    <abp-breadcrumb></abp-breadcrumb>\r\n  </div>\r\n  <div class="col">\r\n    <div class="text-lg-right pt-2" id="AbpContentToolbar"></div>\r\n  </div>\r\n</div>\r\n\r\n<div id="SettingManagementWrapper">\r\n  <div class="card">\r\n    <div class="card-body">\r\n      <div class="row">\r\n        <div class="col-12 col-md-3">\r\n          <ul class="nav flex-column nav-pills" id="nav-tab" role="tablist">\r\n            <li\r\n              *abpFor="let setting of settings; trackBy: trackByFn"\r\n              (click)="selected = setting"\r\n              class="nav-item pointer"\r\n              [abpPermission]="setting.requiredPolicy"\r\n            >\r\n              <a\r\n                class="nav-link"\r\n                [id]="setting.name + \'-tab\'"\r\n                role="tab"\r\n                [class.active]="setting.name === selected.name"\r\n                >{{ setting.name | abpLocalization }}</a\r\n              >\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class="col-12 col-md-9">\r\n          <div *ngIf="settings.length" class="tab-content">\r\n            <div class="tab-pane fade show active" [id]="selected.name + \'-tab\'" role="tabpanel">\r\n              <ng-container *ngComponentOutlet="selected.component"></ng-container>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n'}]}],d.ctorParameters=function(){return[{type:a.Store},{type:t.SettingTabsService}]};var u={requiredPolicy:"AbpAccount.SettingManagement",replaceableComponent:{key:"SettingManagement.SettingManagementComponent",defaultComponent:d}},p=[{path:"",component:t.DynamicLayoutComponent,canActivate:[t.AuthGuard],children:[{path:"",component:t.ReplaceableRouteContainerComponent,data:u}]}],g=function(){};g.decorators=[{type:r.NgModule,args:[{imports:[i.RouterModule.forChild(p)],exports:[i.RouterModule]}]}];var b=function(){function e(){}return e.forChild=function(){return{ngModule:e,providers:[]}},e.forLazy=function(){return new t.LazyModuleFactory(e.forChild())},e}();b.decorators=[{type:r.NgModule,args:[{declarations:[d],exports:[d],imports:[g,t.CoreModule,n.ThemeSharedModule,a.NgxsModule.forFeature([e.ɵc])]}]}],e.SettingManagementComponent=d,e.SettingManagementModule=b,e.ɵa=g,e.ɵd=c,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=abp-ng.setting-management.umd.min.js.map