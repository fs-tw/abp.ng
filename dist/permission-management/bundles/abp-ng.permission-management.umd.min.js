!function(e,n){"object"==typeof exports&&"undefined"!=typeof module?n(exports,require("@abp/ng.core"),require("@abp/ng.theme.shared"),require("@angular/core"),require("@ngxs/store"),require("rxjs"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@abp/ng.permission-management",["exports","@abp/ng.core","@abp/ng.theme.shared","@angular/core","@ngxs/store","rxjs","rxjs/operators"],n):n(((e="undefined"!=typeof globalThis?globalThis:e||self).abp=e.abp||{},e.abp.ng=e.abp.ng||{},e.abp.ng["permission-management"]={}),e.i1,e.ng_theme_shared,e.ng.core,e.i1$1,e.rxjs,e.rxjs.operators)}(this,(function(e,n,t,r,i,s,o){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */function a(e,n,t,r){var i,s=arguments.length,o=s<3?n:null===r?r=Object.getOwnPropertyDescriptor(n,t):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,n,t,r);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(o=(s<3?i(o):s>3?i(n,t,o):i(n,t))||o);return s>3&&o&&Object.defineProperty(n,t,o),o}function p(e,n){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,n)}function c(e,n){var t="function"==typeof Symbol&&e[Symbol.iterator];if(!t)return e;var r,i,s=t.call(e),o=[];try{for(;(void 0===n||n-- >0)&&!(r=s.next()).done;)o.push(r.value)}catch(e){i={error:e}}finally{try{r&&!r.done&&(t=s.return)&&t.call(s)}finally{if(i)throw i.error}}return o}function l(){for(var e=[],n=0;n<arguments.length;n++)e=e.concat(c(arguments[n]));return e}var m=function(e){this.payload=e};m.type="[PermissionManagement] Get Permissions";var d=function(e){this.payload=e};function u(e,n){var t=e.find((function(e){return e.name===n.parentName}));return t&&t.parentName?20+u(e,t):t?20:0}function b(e){return e.reduce((function(e,n){return l(e,n.permissions)}),[])}d.type="[PermissionManagement] Update Permissions",e.ɵc=function(){function e(e){this.rest=e,this.apiName="AbpPermissionManagement"}return e.prototype.getPermissions=function(e){var n={method:"GET",url:"/api/permission-management/permissions",params:e};return this.rest.request(n,{apiName:this.apiName})},e.prototype.updatePermissions=function(e){var n={method:"PUT",url:"/api/permission-management/permissions",body:{permissions:e.permissions},params:{providerKey:e.providerKey,providerName:e.providerName}};return this.rest.request(n,{apiName:this.apiName})},e}(),e.ɵc.ɵprov=r.ɵɵdefineInjectable({factory:function(){return new e.ɵc(r.ɵɵinject(n.RestService))},token:e.ɵc,providedIn:"root"}),e.ɵc=a([r.Injectable({providedIn:"root"}),p("design:paramtypes",[n.RestService])],e.ɵc),e.ɵb=function(){function e(e){this.permissionManagementService=e}return e.getPermissionGroups=function(e){return e.permissionRes.groups||[]},e.getEntityDisplayName=function(e){return e.permissionRes.entityDisplayName},e.prototype.permissionManagementGet=function(e,n){var t=e.patchState,r=n.payload;return this.permissionManagementService.getPermissions(r).pipe(o.tap((function(e){return t({permissionRes:e})})))},e.prototype.permissionManagementUpdate=function(e,n){var t=n.payload;return this.permissionManagementService.updatePermissions(t)},e}(),a([i.Action(m),p("design:type",Function),p("design:paramtypes",[Object,m]),p("design:returntype",void 0)],e.ɵb.prototype,"permissionManagementGet",null),a([i.Action(d),p("design:type",Function),p("design:paramtypes",[Object,d]),p("design:returntype",void 0)],e.ɵb.prototype,"permissionManagementUpdate",null),a([i.Selector(),p("design:type",Function),p("design:paramtypes",[Object]),p("design:returntype",void 0)],e.ɵb,"getPermissionGroups",null),a([i.Selector(),p("design:type",Function),p("design:paramtypes",[Object]),p("design:returntype",String)],e.ɵb,"getEntityDisplayName",null),e.ɵb=a([i.State({name:"PermissionManagementState",defaults:{permissionRes:{}}}),r.Injectable(),p("design:paramtypes",[e.ɵc])],e.ɵb),e.ɵa=function(){function t(e,n){this.store=e,this.renderer=n,this.hideBadges=!1,this._visible=!1,this.visibleChange=new r.EventEmitter,this.permissions=[],this.selectThisTab=!1,this.selectAllTab=!1,this.modalBusy=!1,this.trackByFn=function(e,n){return n.name}}return Object.defineProperty(t.prototype,"visible",{get:function(){return this._visible},set:function(e){var n=this;e!==this._visible&&(e?this.openModal().subscribe((function(){n._visible=!0,n.visibleChange.emit(!0)})):(this.selectedGroup=null,this._visible=!1,this.visibleChange.emit(!1)))},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"selectedGroupPermissions$",{get:function(){var e=this,n="margin-"+("rtl"===document.body.dir?"right":"left")+".px";return this.groups$.pipe(o.map((function(n){return e.selectedGroup?n.find((function(n){return n.name===e.selectedGroup.name})).permissions:[]})),o.map((function(t){return t.map((function(r){var i;return Object.assign(Object.assign({},r),{style:(i={},i[n]=u(t,r),i),isGranted:e.permissions.find((function(e){return e.name===r.name})).isGranted})}))})))},enumerable:!0,configurable:!0}),t.prototype.getChecked=function(e){return(this.permissions.find((function(n){return n.name===e}))||{isGranted:!1}).isGranted},t.prototype.isGrantedByOtherProviderName=function(e){var n=this;return!!e.length&&e.findIndex((function(e){return e.providerName!==n.providerName}))>-1},t.prototype.onClickCheckbox=function(e,n){var t=this;e.isGranted&&this.isGrantedByOtherProviderName(e.grantedProviders)||setTimeout((function(){t.permissions=t.permissions.map((function(n){return e.name===n.name?Object.assign(Object.assign({},n),{isGranted:!n.isGranted}):e.name===n.parentName&&e.isGranted?Object.assign(Object.assign({},n),{isGranted:!1}):e.parentName!==n.name||e.isGranted?n:Object.assign(Object.assign({},n),{isGranted:!0})})),t.setTabCheckboxState(),t.setGrantCheckboxState()}),0)},t.prototype.setTabCheckboxState=function(){var e=this;this.selectedGroupPermissions$.pipe(o.take(1)).subscribe((function(n){var t=n.filter((function(e){return e.isGranted})),r=document.querySelector("#select-all-in-this-tabs");t.length===n.length?(r.indeterminate=!1,e.selectThisTab=!0):0===t.length?(r.indeterminate=!1,e.selectThisTab=!1):r.indeterminate=!0}))},t.prototype.setGrantCheckboxState=function(){var e=this.permissions.filter((function(e){return e.isGranted})),n=document.querySelector("#select-all-in-all-tabs");e.length===this.permissions.length?(n.indeterminate=!1,this.selectAllTab=!0):0===e.length?(n.indeterminate=!1,this.selectAllTab=!1):n.indeterminate=!0},t.prototype.onClickSelectThisTab=function(){var e=this;this.selectedGroupPermissions$.pipe(o.take(1)).subscribe((function(n){n.forEach((function(n){if(!n.isGranted||!e.isGrantedByOtherProviderName(n.grantedProviders)){var t=e.permissions.findIndex((function(e){return e.name===n.name}));e.permissions=l(e.permissions.slice(0,t),[Object.assign(Object.assign({},e.permissions[t]),{isGranted:!e.selectThisTab})],e.permissions.slice(t+1))}}))})),this.setGrantCheckboxState()},t.prototype.onClickSelectAll=function(){var e=this;this.permissions=this.permissions.map((function(n){return Object.assign(Object.assign({},n),{isGranted:e.isGrantedByOtherProviderName(n.grantedProviders)||!e.selectAllTab})})),this.selectThisTab=!this.selectAllTab},t.prototype.onChangeGroup=function(e){this.selectedGroup=e,this.setTabCheckboxState()},t.prototype.submit=function(){var t=this,r=b(this.store.selectSnapshot(e.ɵb.getPermissionGroups)),i=this.permissions.filter((function(e){return r.find((function(n){return n.name===e.name})).isGranted!==e.isGranted})).map((function(e){return{name:e.name,isGranted:e.isGranted}}));i.length?(this.modalBusy=!0,this.store.dispatch(new d({providerKey:this.providerKey,providerName:this.providerName,permissions:i})).pipe(o.switchMap((function(){return t.shouldFetchAppConfig()?t.store.dispatch(n.GetAppConfiguration):s.of(null)})),o.finalize((function(){return t.modalBusy=!1}))).subscribe((function(){t.visible=!1}))):this.visible=!1},t.prototype.openModal=function(){var e=this;if(!this.providerKey||!this.providerName)throw new Error("Provider Key and Provider Name are required.");return this.store.dispatch(new m({providerKey:this.providerKey,providerName:this.providerName})).pipe(o.pluck("PermissionManagementState","permissionRes"),o.tap((function(n){e.selectedGroup=n.groups[0],e.permissions=b(n.groups)})))},t.prototype.initModal=function(){this.setTabCheckboxState(),this.setGrantCheckboxState()},t.prototype.getAssignedCount=function(e){return this.permissions.reduce((function(n,t){return t.name.split(".")[0]===e&&t.isGranted?n+1:n}),0)},t.prototype.shouldFetchAppConfig=function(){var e=this,t=this.store.selectSnapshot(n.ConfigState.getOne("currentUser"));return"R"===this.providerName?t.roles.some((function(n){return n===e.providerKey})):"U"===this.providerName&&t.id===this.providerKey},t}(),a([r.Input(),p("design:type",String)],e.ɵa.prototype,"providerName",void 0),a([r.Input(),p("design:type",String)],e.ɵa.prototype,"providerKey",void 0),a([r.Input(),p("design:type",Object)],e.ɵa.prototype,"hideBadges",void 0),a([r.Input(),p("design:type",Boolean),p("design:paramtypes",[Boolean])],e.ɵa.prototype,"visible",null),a([r.Output(),p("design:type",Object)],e.ɵa.prototype,"visibleChange",void 0),a([i.Select(e.ɵb.getPermissionGroups),p("design:type",s.Observable)],e.ɵa.prototype,"groups$",void 0),a([i.Select(e.ɵb.getEntityDisplayName),p("design:type",s.Observable)],e.ɵa.prototype,"entityName$",void 0),e.ɵa=a([r.Component({selector:"abp-permission-management",template:'<abp-modal [(visible)]="visible" (init)="initModal()" [busy]="modalBusy">\r\n  <ng-container *ngIf="{ entityName: entityName$ | async } as data">\r\n    <ng-template #abpHeader>\r\n      <h4>\r\n        {{ \'AbpPermissionManagement::Permissions\' | abpLocalization }} - {{ data.entityName }}\r\n      </h4>\r\n    </ng-template>\r\n    <ng-template #abpBody>\r\n      <div class="custom-checkbox custom-control mb-2">\r\n        <input\r\n          type="checkbox"\r\n          id="select-all-in-all-tabs"\r\n          name="select-all-in-all-tabs"\r\n          class="custom-control-input"\r\n          [(ngModel)]="selectAllTab"\r\n          (click)="onClickSelectAll()"\r\n        />\r\n        <label class="custom-control-label" for="select-all-in-all-tabs">{{\r\n          \'AbpPermissionManagement::SelectAllInAllTabs\' | abpLocalization\r\n        }}</label>\r\n      </div>\r\n\r\n      <hr class="mt-2 mb-2" />\r\n      <div class="row">\r\n        <div class="overflow-scroll col-md-4">\r\n          <ul class="nav nav-pills flex-column">\r\n            <li *ngFor="let group of groups$ | async; trackBy: trackByFn" class="nav-item">\r\n              <a\r\n                *ngIf="{ assignedCount: getAssignedCount(group.name) } as data"\r\n                class="nav-link pointer"\r\n                [class.active]="selectedGroup?.name === group?.name"\r\n                (click)="onChangeGroup(group)"\r\n              >\r\n                <div [class.font-weight-bold]="data.assignedCount">\r\n                  {{ group?.displayName }}\r\n                  <span>({{ data.assignedCount }})</span>\r\n                </div>\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div class="col-md-8 overflow-scroll">\r\n          <h4>{{ selectedGroup?.displayName }}</h4>\r\n          <hr class="mt-2 mb-3" />\r\n          <div class="pl-1 pt-1">\r\n            <div class="custom-checkbox custom-control mb-2">\r\n              <input\r\n                type="checkbox"\r\n                id="select-all-in-this-tabs"\r\n                name="select-all-in-this-tabs"\r\n                class="custom-control-input"\r\n                [(ngModel)]="selectThisTab"\r\n                (click)="onClickSelectThisTab()"\r\n              />\r\n              <label class="custom-control-label" for="select-all-in-this-tabs">{{\r\n                \'AbpPermissionManagement::SelectAllInThisTab\' | abpLocalization\r\n              }}</label>\r\n            </div>\r\n            <hr class="mb-3" />\r\n            <div\r\n              *ngFor="\r\n                let permission of selectedGroupPermissions$ | async;\r\n                let i = index;\r\n                trackBy: trackByFn\r\n              "\r\n              [ngStyle]="permission.style"\r\n              class="custom-checkbox custom-control mb-2"\r\n            >\r\n              <input\r\n                #permissionCheckbox\r\n                type="checkbox"\r\n                [checked]="getChecked(permission.name)"\r\n                [value]="getChecked(permission.name)"\r\n                [attr.id]="permission.name"\r\n                class="custom-control-input"\r\n                [disabled]="isGrantedByOtherProviderName(permission.grantedProviders)"\r\n              />\r\n              <label\r\n                class="custom-control-label"\r\n                [attr.for]="permission.name"\r\n                (click)="onClickCheckbox(permission, permissionCheckbox.value)"\r\n                >{{ permission.displayName }}\r\n                <ng-container *ngIf="!hideBadges">\r\n                  <span\r\n                    *ngFor="let provider of permission.grantedProviders"\r\n                    class="badge badge-light"\r\n                    >{{ provider.providerName }}: {{ provider.providerKey }}</span\r\n                  >\r\n                </ng-container>\r\n              </label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </ng-template>\r\n    <ng-template #abpFooter>\r\n      <button type="button" class="btn btn-secondary" #abpClose>\r\n        {{ \'AbpIdentity::Cancel\' | abpLocalization }}\r\n      </button>\r\n      <abp-button iconClass="fa fa-check" (click)="submit()">{{\r\n        \'AbpIdentity::Save\' | abpLocalization\r\n      }}</abp-button>\r\n    </ng-template>\r\n  </ng-container>\r\n</abp-modal>\r\n',exportAs:"abpPermissionManagement",styles:["\n      .overflow-scroll {\n        max-height: 70vh;\n        overflow-y: scroll;\n      }\n    "]}),p("design:paramtypes",[i.Store,r.Renderer2])],e.ɵa),e.PermissionManagementModule=function(){},e.PermissionManagementModule=a([r.NgModule({declarations:[e.ɵa],imports:[n.CoreModule,t.ThemeSharedModule,i.NgxsModule.forFeature([e.ɵb])],exports:[e.ɵa]})],e.PermissionManagementModule),e.PermissionManagementStateService=function(){function n(e){this.store=e}return n.prototype.getPermissionGroups=function(){return this.store.selectSnapshot(e.ɵb.getPermissionGroups)},n.prototype.getEntityDisplayName=function(){return this.store.selectSnapshot(e.ɵb.getEntityDisplayName)},n.prototype.dispatchGetPermissions=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return this.store.dispatch(new(m.bind.apply(m,l([void 0],e))))},n.prototype.dispatchUpdatePermissions=function(){for(var e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];return this.store.dispatch(new(d.bind.apply(d,l([void 0],e))))},n}(),e.PermissionManagementStateService.ɵprov=r.ɵɵdefineInjectable({factory:function(){return new e.PermissionManagementStateService(r.ɵɵinject(i.Store))},token:e.PermissionManagementStateService,providedIn:"root"}),e.PermissionManagementStateService=a([r.Injectable({providedIn:"root"}),p("design:paramtypes",[i.Store])],e.PermissionManagementStateService),e.GetPermissions=m,e.PermissionManagementComponent=e.ɵa,e.PermissionManagementService=e.ɵc,e.PermissionManagementState=e.ɵb,e.UpdatePermissions=d,e.ɵd=m,e.ɵe=d,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=abp-ng.permission-management.umd.min.js.map