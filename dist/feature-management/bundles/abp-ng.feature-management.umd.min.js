!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@abp/ng.core"),require("@abp/ng.theme.shared"),require("@angular/core"),require("@ngxs/store"),require("rxjs"),require("rxjs/operators"),require("@angular/forms")):"function"==typeof define&&define.amd?define("@abp/ng.feature-management",["exports","@abp/ng.core","@abp/ng.theme.shared","@angular/core","@ngxs/store","rxjs","rxjs/operators","@angular/forms"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).abp=e.abp||{},e.abp.ng=e.abp.ng||{},e.abp.ng["feature-management"]={}),e.i1,e.ng_theme_shared,e.ng.core,e.i2,e.rxjs,e.rxjs.operators,e.ng.forms)}(this,(function(e,t,r,a,n,o,i,s){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */function u(e,t,r,a){var n,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,r):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,a);else for(var s=e.length-1;s>=0;s--)(n=e[s])&&(i=(o<3?n(i):o>3?n(t,r,i):n(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i}function p(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}var d=function(e){this.payload=e};d.type="[FeatureManagement] Get Features";var c=function(e){this.payload=e};c.type="[FeatureManagement] Update Features",e.ɵd=function(){function e(e,t){this.rest=e,this.store=t,this.apiName="FeatureManagement"}return e.prototype.getFeatures=function(e){var t={method:"GET",url:"/api/feature-management/features",params:e};return this.rest.request(t,{apiName:this.apiName})},e.prototype.updateFeatures=function(e){var t={method:"PUT",url:"/api/feature-management/features",body:{features:e.features},params:{providerKey:e.providerKey,providerName:e.providerName}};return this.rest.request(t,{apiName:this.apiName})},e}(),e.ɵd.ɵprov=a.ɵɵdefineInjectable({factory:function(){return new e.ɵd(a.ɵɵinject(t.RestService),a.ɵɵinject(n.Store))},token:e.ɵd,providedIn:"root"}),e.ɵd=u([a.Injectable({providedIn:"root"}),p("design:paramtypes",[t.RestService,n.Store])],e.ɵd),e.ɵc=function(){function e(e){this.featureManagementService=e}return e.getFeatures=function(e){return e.features||[]},e.prototype.getFeatures=function(e,t){var r=e.patchState,a=t.payload;return this.featureManagementService.getFeatures(a).pipe(i.tap((function(e){var t=e.features;return r({features:t})})))},e.prototype.updateFeatures=function(e,t){var r=t.payload;return this.featureManagementService.updateFeatures(r)},e}(),u([n.Action(d),p("design:type",Function),p("design:paramtypes",[Object,d]),p("design:returntype",void 0)],e.ɵc.prototype,"getFeatures",null),u([n.Action(c),p("design:type",Function),p("design:paramtypes",[Object,c]),p("design:returntype",void 0)],e.ɵc.prototype,"updateFeatures",null),u([n.Selector(),p("design:type",Function),p("design:paramtypes",[Object]),p("design:returntype",void 0)],e.ɵc,"getFeatures",null),e.ɵc=u([n.State({name:"FeatureManagementState",defaults:{features:{}}}),a.Injectable(),p("design:paramtypes",[e.ɵd])],e.ɵc),e.ɵa=function(){function t(e){this.store=e,this.visibleChange=new a.EventEmitter,this.modalBusy=!1}return Object.defineProperty(t.prototype,"visible",{get:function(){return this._visible},set:function(e){this._visible=e,this.visibleChange.emit(e),e&&this.openModal()},enumerable:!0,configurable:!0}),t.prototype.openModal=function(){if(!this.providerKey||!this.providerName)throw new Error("Provider Key and Provider Name are required.");this.getFeatures()},t.prototype.getFeatures=function(){var e=this;this.store.dispatch(new d({providerKey:this.providerKey,providerName:this.providerName})).pipe(i.pluck("FeatureManagementState","features")).subscribe((function(t){e.buildForm(t)}))},t.prototype.buildForm=function(e){for(var t={},r=0;r<e.length;r++)t[r]=new s.FormControl("false"===e[r].value?null:e[r].value);this.form=new s.FormGroup(t)},t.prototype.save=function(){var t=this;if(!this.modalBusy){this.modalBusy=!0;var r=this.store.selectSnapshot(e.ɵc.getFeatures);r=r.map((function(e,r){return Object.assign(Object.assign({},e),{value:t.form.value[r]})})),this.store.dispatch(new c({providerKey:this.providerKey,providerName:this.providerName,features:r})).pipe(i.finalize((function(){return t.modalBusy=!1}))).subscribe((function(){t.visible=!1}))}},t}(),u([a.Input(),p("design:type",String)],e.ɵa.prototype,"providerKey",void 0),u([a.Input(),p("design:type",String)],e.ɵa.prototype,"providerName",void 0),u([a.Input(),p("design:type",Boolean),p("design:paramtypes",[Boolean])],e.ɵa.prototype,"visible",null),u([a.Output(),p("design:type",Object)],e.ɵa.prototype,"visibleChange",void 0),u([n.Select(e.ɵc.getFeatures),p("design:type",o.Observable)],e.ɵa.prototype,"features$",void 0),e.ɵa=u([a.Component({selector:"abp-feature-management",template:'<abp-modal size="md" [(visible)]="visible" [busy]="modalBusy">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ \'AbpFeatureManagement::Features\' | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <form *ngIf="form" (ngSubmit)="save()" [formGroup]="form" validateOnSubmit>\r\n      <div\r\n        class="row my-3"\r\n        *ngFor="let feature of features$ | async; let i = index"\r\n        [ngSwitch]="feature.valueType.name"\r\n      >\r\n        <div class="mr-2">{{ feature.displayName }}</div>\r\n        <div *ngSwitchCase="\'ToggleStringValueType\'">\r\n          <input type="checkbox" name="feature.name" [formControlName]="i" />\r\n        </div>\r\n        <div *ngSwitchCase="\'FreeTextStringValueType\'">\r\n          <input type="text" name="feature.name" [formControlName]="i" />\r\n        </div>\r\n      </div>\r\n      <div *ngIf="!(features$ | async)?.length">\r\n        {{ \'AbpFeatureManagement::NoFeatureFoundMessage\' | abpLocalization }}\r\n      </div>\r\n    </form>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <ng-container *ngIf="(features$ | async)?.length">\r\n      <button #abpClose type="button" class="btn btn-secondary">\r\n        {{ \'AbpFeatureManagement::Cancel\' | abpLocalization }}\r\n      </button>\r\n      <abp-button iconClass="fa fa-check" [disabled]="form?.invalid || modalBusy" (click)="save()">\r\n        {{ \'AbpFeatureManagement::Save\' | abpLocalization }}\r\n      </abp-button>\r\n    </ng-container>\r\n  </ng-template>\r\n</abp-modal>\r\n',exportAs:"abpFeatureManagement"}),p("design:paramtypes",[n.Store])],e.ɵa),e.FeatureManagementModule=function(){},e.FeatureManagementModule=u([a.NgModule({declarations:[e.ɵa],imports:[t.CoreModule,r.ThemeSharedModule,n.NgxsModule.forFeature([e.ɵc])],exports:[e.ɵa]})],e.FeatureManagementModule),e.FeatureManagementComponent=e.ɵa,e.ɵb=e.ɵc,e.ɵe=d,e.ɵf=c,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=abp-ng.feature-management.umd.min.js.map