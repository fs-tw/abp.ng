!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@abp/ng.core"),require("@abp/ng.theme.shared"),require("@angular/core"),require("@ngxs/store"),require("@ng-bootstrap/ng-bootstrap"),require("rxjs/operators")):"function"==typeof define&&define.amd?define("@abp/ng.feature-management",["exports","@abp/ng.core","@abp/ng.theme.shared","@angular/core","@ngxs/store","@ng-bootstrap/ng-bootstrap","rxjs/operators"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).abp=e.abp||{},e.abp.ng=e.abp.ng||{},e.abp.ng["feature-management"]={}),e.i1,e.ng_theme_shared,e.ng.core,e.i2,e.ngBootstrap,e.rxjs.operators)}(this,(function(e,t,r,n,a,o,i){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */function u(e,t,r,n){var a,o=arguments.length,i=o<3?t:null===n?n=Object.getOwnPropertyDescriptor(t,r):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,r,n);else for(var u=e.length-1;u>=0;u--)(a=e[u])&&(i=(o<3?a(i):o>3?a(t,r,i):a(t,r))||i);return o>3&&i&&Object.defineProperty(t,r,i),i}function s(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}Object.create;function p(e,t){var r="function"==typeof Symbol&&e[Symbol.iterator];if(!r)return e;var n,a,o=r.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(n=o.next()).done;)i.push(n.value)}catch(e){a={error:e}}finally{try{n&&!n.done&&(r=o.return)&&r.call(o)}finally{if(a)throw a.error}}return i}function l(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(p(arguments[t]));return e}Object.create;var c={numeric:"number",default:"text"},d=function(){function e(){}return Object.defineProperty(e.prototype,"feature",{get:function(){return this._feature},set:function(e){this._feature=e,this.setInputType()},enumerable:!1,configurable:!0}),e.prototype.setInputType=function(){var e,t,r,n,a=null===(r=null===(t=null===(e=this.feature)||void 0===e?void 0:e.valueType)||void 0===t?void 0:t.validator)||void 0===r?void 0:r.name.toLowerCase();this.type=null!==(n=c[a])&&void 0!==n?n:c.default},e}();d.decorators=[{type:n.Directive,args:[{selector:"input[abpFeatureManagementFreeText]",exportAs:"inputAbpFeatureManagementFreeText"}]}],d.propDecorators={feature:[{type:n.Input,args:["abpFeatureManagementFreeText"]}],type:[{type:n.HostBinding,args:["type"]}]};var f,g=function(e){var t=this;this.restService=e,this.apiName="AbpFeatureManagement",this.get=function(e,r){return t.restService.request({method:"GET",url:"/api/feature-management/features",params:{providerName:e,providerKey:r}},{apiName:t.apiName})},this.update=function(e,r,n){return t.restService.request({method:"PUT",url:"/api/feature-management/features",params:{providerName:e,providerKey:r},body:n},{apiName:t.apiName})}};g.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new g(n.ɵɵinject(t.RestService))},token:g,providedIn:"root"}),g.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],g.ctorParameters=function(){return[{type:t.RestService}]},function(e){e.ToggleStringValueType="ToggleStringValueType",e.FreeTextStringValueType="FreeTextStringValueType",e.SelectionStringValueType="SelectionStringValueType"}(f||(f={}));var m=function(){function e(e,t,r){this.track=e,this.service=t,this.store=r,this.groups=[],this.valueTypes=f,this.visibleChange=new n.EventEmitter,this.modalBusy=!1}return Object.defineProperty(e.prototype,"visible",{get:function(){return this._visible},set:function(e){this._visible!==e&&(this._visible=e,this.visibleChange.emit(e),e&&this.openModal())},enumerable:!1,configurable:!0}),e.prototype.openModal=function(){if(!this.providerName)throw new Error("providerName is required.");this.getFeatures()},e.prototype.getFeatures=function(){var e=this;this.service.get(this.providerName,this.providerKey).subscribe((function(t){e.groups=t.groups.map((function(e){return{name:e.name,displayName:e.displayName}})),e.selectedGroupDisplayName=e.groups[0].displayName,e.features=t.groups.reduce((function(e,t){var r,n,a,o;return Object.assign(Object.assign({},e),((r={})[t.name]=(n=t.features,a=document.body.dir,o="margin-"+("rtl"===a?"right":"left")+".px",n.map((function(e){var t,r,n=(null===(r=e.valueType)||void 0===r?void 0:r.name)===f.ToggleStringValueType?"true"===(e.value||"").toLowerCase():e.value;return Object.assign(Object.assign({},e),{value:n,initialValue:n,style:(t={},t[o]=20*e.depth,t)})}))),r))}),{})}))},e.prototype.save=function(){var e=this;if(!this.modalBusy){var r=[];Object.keys(this.features).forEach((function(t){e.features[t].forEach((function(e){e.value!==e.initialValue&&r.push({name:e.name,value:e.value})}))})),r.length?(this.modalBusy=!0,this.service.update(this.providerName,this.providerKey,{features:r}).pipe(i.finalize((function(){return e.modalBusy=!1}))).subscribe((function(){e.visible=!1,e.providerKey||e.store.dispatch(new t.GetAppConfiguration)}))):this.visible=!1}},e.prototype.onCheckboxClick=function(e,t){e?this.checkToggleAncestors(t):this.uncheckToggleDescendants(t)},e.prototype.uncheckToggleDescendants=function(e){var t=this;this.findAllDescendantsOfByType(e,f.ToggleStringValueType).forEach((function(e){return t.setFeatureValue(e,!1)}))},e.prototype.checkToggleAncestors=function(e){var t=this;this.findAllAncestorsOfByType(e,f.ToggleStringValueType).forEach((function(e){return t.setFeatureValue(e,!0)}))},e.prototype.findAllAncestorsOfByType=function(e,t){for(var r=this.findParentByType(e,t),n=[];r;)n.push(r),r=this.findParentByType(r,t);return n},e.prototype.findAllDescendantsOfByType=function(e,t){for(var r=[],n=[e];n.length;){var a=n.pop(),o=this.findChildrenByType(a,t);r.push.apply(r,l(o)),n.push.apply(n,l(o))}return r},e.prototype.findParentByType=function(e,t){return this.getCurrentGroup().find((function(r){return r.valueType.name===t&&r.name===e.parentName}))},e.prototype.findChildrenByType=function(e,t){return this.getCurrentGroup().filter((function(r){return r.valueType.name===t&&r.parentName===e.name}))},e.prototype.getCurrentGroup=function(){var e;return null!==(e=this.features[this.selectedGroupDisplayName])&&void 0!==e?e:[]},e.prototype.setFeatureValue=function(e,t){e.value=t},e}();m.decorators=[{type:n.Component,args:[{selector:"abp-feature-management",template:'<abp-modal *ngIf="visible" size="lg" [(visible)]="visible" [busy]="modalBusy">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ \'AbpFeatureManagement::Features\' | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <div class="row">\r\n      <div class="col-md-4">\r\n        <ul\r\n          ngbNav\r\n          #nav="ngbNav"\r\n          [(activeId)]="selectedGroupDisplayName"\r\n          class="nav-pills"\r\n          orientation="vertical"\r\n        >\r\n          <li\r\n            *ngFor="let group of groups; trackBy: track.by(\'name\')"\r\n            [ngbNavItem]="group.displayName"\r\n          >\r\n            <a ngbNavLink>{{ group.displayName }}</a>\r\n            <ng-template ngbNavContent>\r\n              <h4>{{ selectedGroupDisplayName }}</h4>\r\n              <hr class="mt-2 mb-3" />\r\n\r\n              <div\r\n                class="mt-2"\r\n                *ngFor="let feature of features[group.name]; let i = index; trackBy: track.by(\'id\')"\r\n                [ngStyle]="feature.style"\r\n                [ngSwitch]="feature.valueType?.name"\r\n                (keyup.enter)="save()"\r\n              >\r\n                <ng-container *ngSwitchCase="valueTypes.ToggleStringValueType">\r\n                  <div class="custom-checkbox custom-control">\r\n                    <input\r\n                      class="custom-control-input"\r\n                      type="checkbox"\r\n                      [id]="feature.name"\r\n                      [(ngModel)]="feature.value"\r\n                      (ngModelChange)="onCheckboxClick($event, feature)"\r\n                    />\r\n\r\n                    <label class="custom-control-label" [htmlFor]="feature.name">{{\r\n                      feature.displayName\r\n                    }}</label>\r\n                    <ng-container\r\n                      *ngTemplateOutlet="descTmp; context: { $implicit: feature.description }"\r\n                    ></ng-container>\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngSwitchCase="valueTypes.FreeTextStringValueType">\r\n                  <div class="form-group">\r\n                    <label [htmlFor]="feature.name">{{ feature.displayName }}</label>\r\n                    <input\r\n                      class="form-control"\r\n                      type="text"\r\n                      [id]="feature.name"\r\n                      [(ngModel)]="feature.value"\r\n                      [abpFeatureManagementFreeText]="feature"\r\n                    />\r\n\r\n                    <ng-container\r\n                      *ngTemplateOutlet="descTmp; context: { $implicit: feature.description }"\r\n                    ></ng-container>\r\n                  </div>\r\n                </ng-container>\r\n                <ng-container *ngSwitchCase="valueTypes.SelectionStringValueType">\r\n                  <ng-container *ngIf="feature.valueType.itemSource?.items?.length">\r\n                    <div class="form-group">\r\n                      <label [htmlFor]="feature.name">{{ feature.displayName }}</label>\r\n                      <select\r\n                        class="form-control custom-select"\r\n                        [id]="feature.name"\r\n                        [(ngModel)]="feature.value"\r\n                      >\r\n                        <option\r\n                          *ngFor="\r\n                            let item of feature.valueType.itemSource?.items;\r\n                            trackBy: track.by(\'value\')\r\n                          "\r\n                          [ngValue]="item.value"\r\n                        >\r\n                          {{\r\n                            item.displayText?.resourceName + \'::\' + item.displayText?.name\r\n                              | abpLocalization\r\n                          }}</option\r\n                        >\r\n                      </select>\r\n                      <ng-container\r\n                        *ngTemplateOutlet="descTmp; context: { $implicit: feature.description }"\r\n                      ></ng-container>\r\n                    </div>\r\n                  </ng-container>\r\n                </ng-container>\r\n                <ng-container *ngSwitchDefault>{{ feature.displayName }}</ng-container>\r\n              </div>\r\n            </ng-template>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <ng-template #descTmp let-description>\r\n        <small *ngIf="description" class="form-text text-muted">{{ description }}</small>\r\n      </ng-template>\r\n\r\n      <div class="col-md-8"><div [ngbNavOutlet]="nav"></div></div>\r\n\r\n      <div class="mx-3" *ngIf="!groups.length">\r\n        {{ \'AbpFeatureManagement::NoFeatureFoundMessage\' | abpLocalization }}\r\n      </div>\r\n    </div>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button #abpClose type="button" class="btn btn-secondary">\r\n      {{ \'AbpFeatureManagement::Cancel\' | abpLocalization }}\r\n    </button>\r\n    <abp-button\r\n      *ngIf="groups.length"\r\n      iconClass="fa fa-check"\r\n      [disabled]="modalBusy"\r\n      (click)="save()"\r\n    >\r\n      {{ \'AbpFeatureManagement::Save\' | abpLocalization }}\r\n    </abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n',exportAs:"abpFeatureManagement"}]}],m.ctorParameters=function(){return[{type:t.TrackByService},{type:g},{type:a.Store}]},m.propDecorators={providerKey:[{type:n.Input}],providerName:[{type:n.Input}],visible:[{type:n.Input}],visibleChange:[{type:n.Output}]};var y=function(e){this.payload=e};y.type="[FeatureManagement] Get Features";var v=function(e){this.payload=e};v.type="[FeatureManagement] Update Features";var h=function(){function e(e,t){this.rest=e,this.store=t,this.apiName="FeatureManagement"}return e.prototype.getFeatures=function(e){var t={method:"GET",url:"/api/feature-management/features",params:e};return this.rest.request(t,{apiName:this.apiName})},e.prototype.updateFeatures=function(e){var t={method:"PUT",url:"/api/feature-management/features",body:{features:e.features},params:{providerKey:e.providerKey,providerName:e.providerName}};return this.rest.request(t,{apiName:this.apiName})},e}();h.ɵprov=n.ɵɵdefineInjectable({factory:function(){return new h(n.ɵɵinject(t.RestService),n.ɵɵinject(a.Store))},token:h,providedIn:"root"}),h.decorators=[{type:n.Injectable,args:[{providedIn:"root"}]}],h.ctorParameters=function(){return[{type:t.RestService},{type:a.Store}]},e.ɵd=function(){function e(e){this.featureManagementService=e}return e.getFeatures=function(e){return e.features||[]},e.prototype.getFeatures=function(e,t){var r=e.patchState,n=t.payload;return this.featureManagementService.getFeatures(n).pipe(i.tap((function(e){var t=e.features;return r({features:void 0===t?[]:t})})))},e.prototype.updateFeatures=function(e,t){var r=t.payload;return this.featureManagementService.updateFeatures(r)},e}(),e.ɵd.decorators=[{type:n.Injectable}],e.ɵd.ctorParameters=function(){return[{type:h}]},u([a.Action(y),s("design:type",Function),s("design:paramtypes",[Object,y]),s("design:returntype",void 0)],e.ɵd.prototype,"getFeatures",null),u([a.Action(v),s("design:type",Function),s("design:paramtypes",[Object,v]),s("design:returntype",void 0)],e.ɵd.prototype,"updateFeatures",null),u([a.Selector(),s("design:type",Function),s("design:paramtypes",[Object]),s("design:returntype",void 0)],e.ɵd,"getFeatures",null),e.ɵd=u([a.State({name:"FeatureManagementState",defaults:{features:{}}}),s("design:paramtypes",[h])],e.ɵd);var b=[m,d],T=function(){};T.decorators=[{type:n.NgModule,args:[{declarations:l(b),imports:[t.CoreModule,r.ThemeSharedModule,o.NgbNavModule,a.NgxsModule.forFeature([e.ɵd])],exports:l(b)}]}],e.FeatureManagementComponent=m,e.FeatureManagementModule=T,e.FeaturesService=g,e.ɵa=m,e.ɵb=g,e.ɵc=d,e.ɵe=h,e.ɵf=y,e.ɵg=v,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=abp-ng.feature-management.umd.min.js.map