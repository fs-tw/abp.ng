{"version":3,"file":"abp-ng.feature-management.js","sources":["../../../packages/feature-management/src/lib/directives/free-text-input.directive.ts","../../../packages/feature-management/src/lib/proxy/feature-management/features.service.ts","../../../packages/feature-management/src/lib/components/feature-management/feature-management.component.ts","../../../packages/feature-management/src/lib/actions/feature-management.actions.ts","../../../packages/feature-management/src/lib/services/feature-management.service.ts","../../../packages/feature-management/src/lib/states/feature-management.state.ts","../../../packages/feature-management/src/lib/feature-management.module.ts","../../../packages/feature-management/src/abp-ng.feature-management.ts"],"sourcesContent":["import { Directive, Input, HostBinding } from '@angular/core';\r\n\r\n// TODO: improve this type\r\nexport interface FreeTextType {\r\n  valueType: {\r\n    validator: {\r\n      name: string;\r\n    };\r\n  };\r\n}\r\n\r\nexport const INPUT_TYPES = {\r\n  numeric: 'number',\r\n  default: 'text',\r\n};\r\n\r\n@Directive({\r\n  selector: 'input[abpFeatureManagementFreeText]',\r\n  exportAs: 'inputAbpFeatureManagementFreeText',\r\n})\r\nexport class FreeTextInputDirective {\r\n  _feature: FreeTextType;\r\n  @Input('abpFeatureManagementFreeText') set feature(val: FreeTextType) {\r\n    this._feature = val;\r\n    this.setInputType();\r\n  }\r\n\r\n  get feature() {\r\n    return this._feature;\r\n  }\r\n\r\n  @HostBinding('type') type: string;\r\n\r\n  private setInputType() {\r\n    const validatorType = this.feature?.valueType?.validator?.name.toLowerCase();\r\n    this.type = INPUT_TYPES[validatorType] ?? INPUT_TYPES.default;\r\n  }\r\n}\r\n","import type { GetFeatureListResultDto, UpdateFeaturesDto } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class FeaturesService {\r\n  apiName = 'AbpFeatureManagement';\r\n\r\n  get = (providerName: string, providerKey: string) =>\r\n    this.restService.request<any, GetFeatureListResultDto>({\r\n      method: 'GET',\r\n      url: '/api/feature-management/features',\r\n      params: { providerName, providerKey },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  update = (providerName: string, providerKey: string, input: UpdateFeaturesDto) =>\r\n    this.restService.request<any, void>({\r\n      method: 'PUT',\r\n      url: '/api/feature-management/features',\r\n      params: { providerName, providerKey },\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import { TrackByService, GetAppConfiguration } from '@abp/ng.core';\r\nimport { LocaleDirection } from '@abp/ng.theme.shared';\r\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { FeatureManagement } from '../../models/feature-management';\r\nimport { FeaturesService } from '../../proxy/feature-management/features.service';\r\nimport {\r\n  FeatureDto,\r\n  FeatureGroupDto,\r\n  UpdateFeatureDto,\r\n} from '../../proxy/feature-management/models';\r\n\r\nenum ValueTypes {\r\n  ToggleStringValueType = 'ToggleStringValueType',\r\n  FreeTextStringValueType = 'FreeTextStringValueType',\r\n  SelectionStringValueType = 'SelectionStringValueType',\r\n}\r\n\r\n@Component({\r\n  selector: 'abp-feature-management',\r\n  templateUrl: './feature-management.component.html',\r\n  exportAs: 'abpFeatureManagement',\r\n})\r\nexport class FeatureManagementComponent\r\n  implements\r\n    FeatureManagement.FeatureManagementComponentInputs,\r\n    FeatureManagement.FeatureManagementComponentOutputs {\r\n  @Input()\r\n  providerKey: string;\r\n\r\n  @Input()\r\n  providerName: string;\r\n\r\n  selectedGroupDisplayName: string;\r\n\r\n  groups: Pick<FeatureGroupDto, 'name' | 'displayName'>[] = [];\r\n\r\n  features: {\r\n    [group: string]: Array<FeatureDto & { style?: { [key: string]: number }; initialValue: any }>;\r\n  };\r\n\r\n  valueTypes = ValueTypes;\r\n\r\n  protected _visible;\r\n\r\n  @Input()\r\n  get visible(): boolean {\r\n    return this._visible;\r\n  }\r\n\r\n  set visible(value: boolean) {\r\n    if (this._visible === value) return;\r\n\r\n    this._visible = value;\r\n    this.visibleChange.emit(value);\r\n    if (value) this.openModal();\r\n  }\r\n\r\n  @Output() readonly visibleChange = new EventEmitter<boolean>();\r\n\r\n  modalBusy = false;\r\n\r\n  constructor(\r\n    public readonly track: TrackByService,\r\n    protected service: FeaturesService,\r\n    protected store: Store,\r\n  ) {}\r\n\r\n  openModal() {\r\n    if (!this.providerName) {\r\n      throw new Error('providerName is required.');\r\n    }\r\n\r\n    this.getFeatures();\r\n  }\r\n\r\n  getFeatures() {\r\n    this.service.get(this.providerName, this.providerKey).subscribe(res => {\r\n      this.groups = res.groups.map(({ name, displayName }) => ({ name, displayName }));\r\n      this.selectedGroupDisplayName = this.groups[0].displayName;\r\n      this.features = res.groups.reduce(\r\n        (acc, val) => ({\r\n          ...acc,\r\n          [val.name]: mapFeatures(val.features, document.body.dir as LocaleDirection),\r\n        }),\r\n        {},\r\n      );\r\n    });\r\n  }\r\n\r\n  save() {\r\n    if (this.modalBusy) return;\r\n\r\n    const changedFeatures = [] as UpdateFeatureDto[];\r\n\r\n    Object.keys(this.features).forEach(key => {\r\n      this.features[key].forEach(feature => {\r\n        if (feature.value !== feature.initialValue)\r\n          changedFeatures.push({ name: feature.name, value: feature.value });\r\n      });\r\n    });\r\n\r\n    if (!changedFeatures.length) {\r\n      this.visible = false;\r\n      return;\r\n    }\r\n\r\n    this.modalBusy = true;\r\n    this.service\r\n      .update(this.providerName, this.providerKey, { features: changedFeatures })\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.visible = false;\r\n\r\n        if (!this.providerKey) {\r\n          // to refresh host's features\r\n          this.store.dispatch(new GetAppConfiguration());\r\n        }\r\n      });\r\n  }\r\n\r\n  onCheckboxClick(val: boolean, feature: FeatureDto) {\r\n    if (val) {\r\n      this.checkToggleAncestors(feature);\r\n    } else {\r\n      this.uncheckToggleDescendants(feature);\r\n    }\r\n  }\r\n\r\n  private uncheckToggleDescendants(feature: FeatureDto) {\r\n    this.findAllDescendantsOfByType(feature, ValueTypes.ToggleStringValueType).forEach(node =>\r\n      this.setFeatureValue(node, false),\r\n    );\r\n  }\r\n\r\n  private checkToggleAncestors(feature: FeatureDto) {\r\n    this.findAllAncestorsOfByType(feature, ValueTypes.ToggleStringValueType).forEach(node =>\r\n      this.setFeatureValue(node, true),\r\n    );\r\n  }\r\n\r\n  private findAllAncestorsOfByType(feature: FeatureDto, type: ValueTypes) {\r\n    let parent = this.findParentByType(feature, type);\r\n    const ancestors = [];\r\n    while (parent) {\r\n      ancestors.push(parent);\r\n      parent = this.findParentByType(parent, type);\r\n    }\r\n    return ancestors;\r\n  }\r\n\r\n  private findAllDescendantsOfByType(feature: FeatureDto, type: ValueTypes) {\r\n    const descendants = [];\r\n    const queue = [feature];\r\n\r\n    while (queue.length) {\r\n      const node = queue.pop();\r\n      const newDescendants = this.findChildrenByType(node, type);\r\n      descendants.push(...newDescendants);\r\n      queue.push(...newDescendants);\r\n    }\r\n\r\n    return descendants;\r\n  }\r\n\r\n  private findParentByType(feature: FeatureDto, type: ValueTypes) {\r\n    return this.getCurrentGroup().find(\r\n      f => f.valueType.name === type && f.name === feature.parentName,\r\n    );\r\n  }\r\n\r\n  private findChildrenByType(feature: FeatureDto, type: ValueTypes) {\r\n    return this.getCurrentGroup().filter(\r\n      f => f.valueType.name === type && f.parentName === feature.name,\r\n    );\r\n  }\r\n\r\n  private getCurrentGroup() {\r\n    return this.features[this.selectedGroupDisplayName] ?? [];\r\n  }\r\n\r\n  private setFeatureValue(feature: FeatureDto, val: boolean) {\r\n    feature.value = val as any;\r\n  }\r\n}\r\n\r\nfunction mapFeatures(features: FeatureDto[], dir: LocaleDirection) {\r\n  const margin = `margin-${dir === 'rtl' ? 'right' : 'left'}.px`;\r\n\r\n  return features.map(feature => {\r\n    const value =\r\n      feature.valueType?.name === ValueTypes.ToggleStringValueType\r\n        ? (feature.value || '').toLowerCase() === 'true'\r\n        : feature.value;\r\n\r\n    return {\r\n      ...feature,\r\n      value,\r\n      initialValue: value,\r\n      style: { [margin]: feature.depth * 20 },\r\n    };\r\n  });\r\n}\r\n","import { FeatureManagement } from '../models';\r\n\r\n/**\r\n * @deprecated To be deleted in v4.0.\r\n */\r\nexport class GetFeatures {\r\n  static readonly type = '[FeatureManagement] Get Features';\r\n  constructor(public payload: FeatureManagement.Provider) {}\r\n}\r\n\r\n/**\r\n * @deprecated To be deleted in v4.0.\r\n */\r\nexport class UpdateFeatures {\r\n  static readonly type = '[FeatureManagement] Update Features';\r\n  constructor(public payload: FeatureManagement.Provider & FeatureManagement.Features) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { RestService, Rest } from '@abp/ng.core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { FeatureManagement } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n/**\r\n * @deprecated Use FeaturesService instead. To be deleted in v4.0.\r\n */\r\nexport class FeatureManagementService {\r\n  apiName = 'FeatureManagement';\r\n\r\n  constructor(private rest: RestService, private store: Store) {}\r\n\r\n  getFeatures(params: FeatureManagement.Provider): Observable<FeatureManagement.Features> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/feature-management/features',\r\n      params,\r\n    };\r\n    return this.rest.request<FeatureManagement.Provider, FeatureManagement.Features>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  updateFeatures({\r\n    features,\r\n    providerKey,\r\n    providerName,\r\n  }: FeatureManagement.Provider & FeatureManagement.Features): Observable<null> {\r\n    const request: Rest.Request<FeatureManagement.Features> = {\r\n      method: 'PUT',\r\n      url: '/api/feature-management/features',\r\n      body: { features },\r\n      params: { providerKey, providerName },\r\n    };\r\n    return this.rest.request<FeatureManagement.Features, null>(request, { apiName: this.apiName });\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { GetFeatures, UpdateFeatures } from '../actions/feature-management.actions';\r\nimport { FeatureManagement } from '../models/feature-management';\r\nimport { FeatureManagementService } from '../services/feature-management.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n/**\r\n * @deprecated To be deleted in v4.0.\r\n */\r\n@State<FeatureManagement.State>({\r\n  name: 'FeatureManagementState',\r\n  defaults: { features: {} } as FeatureManagement.State,\r\n})\r\n@Injectable()\r\nexport class FeatureManagementState {\r\n  @Selector()\r\n  static getFeatures({ features }: FeatureManagement.State) {\r\n    return features || [];\r\n  }\r\n\r\n  constructor(private featureManagementService: FeatureManagementService) {}\r\n\r\n  @Action(GetFeatures)\r\n  getFeatures({ patchState }: StateContext<FeatureManagement.State>, { payload }: GetFeatures) {\r\n    return this.featureManagementService.getFeatures(payload).pipe(\r\n      tap(({ features = [] }) =>\r\n        patchState({\r\n          features,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(UpdateFeatures)\r\n  updateFeatures(_, { payload }: UpdateFeatures) {\r\n    return this.featureManagementService.updateFeatures(payload);\r\n  }\r\n}\r\n","import { CoreModule } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { NgModule } from '@angular/core';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { FreeTextInputDirective } from './directives/free-text-input.directive';\r\nimport { FeatureManagementComponent } from './components/feature-management/feature-management.component';\r\nimport { FeatureManagementState } from './states/feature-management.state';\r\n\r\nconst exported = [FeatureManagementComponent, FreeTextInputDirective];\r\n\r\n@NgModule({\r\n  declarations: [...exported],\r\n  imports: [\r\n    CoreModule,\r\n    ThemeSharedModule,\r\n    NgbNavModule,\r\n    NgxsModule.forFeature([FeatureManagementState]),\r\n  ],\r\n  exports: [...exported],\r\n})\r\nexport class FeatureManagementModule {}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {GetFeatures as ɵf,UpdateFeatures as ɵg} from './lib/actions/feature-management.actions';\nexport {FeatureManagementComponent as ɵa} from './lib/components/feature-management/feature-management.component';\nexport {FreeTextInputDirective as ɵc} from './lib/directives/free-text-input.directive';\nexport {FeatureManagement as ɵh} from './lib/models';\nexport {FeaturesService as ɵb} from './lib/proxy/feature-management/features.service';\nexport {FeatureManagementService as ɵe} from './lib/services/feature-management.service';\nexport {FeatureManagementState as ɵd} from './lib/states/feature-management.state';"],"names":[],"mappings":";;;;;;;;AAWO,MAAM,WAAW,GAAG;IACzB,OAAO,EAAE,QAAQ;IACjB,OAAO,EAAE,MAAM;CAChB,CAAC;MAMW,sBAAsB;IAEjC,IAA2C,OAAO,CAAC,GAAiB;QAClE,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;QACpB,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAIO,YAAY;;QAClB,MAAM,aAAa,qBAAG,IAAI,CAAC,OAAO,0CAAE,SAAS,0CAAE,SAAS,0CAAE,IAAI,CAAC,WAAW,EAAE,CAAC;QAC7E,IAAI,CAAC,IAAI,SAAG,WAAW,CAAC,aAAa,CAAC,mCAAI,WAAW,CAAC,OAAO,CAAC;KAC/D;;;YApBF,SAAS,SAAC;gBACT,QAAQ,EAAE,qCAAqC;gBAC/C,QAAQ,EAAE,mCAAmC;aAC9C;;;sBAGE,KAAK,SAAC,8BAA8B;mBASpC,WAAW,SAAC,MAAM;;;MCxBR,eAAe;IAoB1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAnB5C,YAAO,GAAG,sBAAsB,CAAC;QAEjC,QAAG,GAAG,CAAC,YAAoB,EAAE,WAAmB,KAC9C,IAAI,CAAC,WAAW,CAAC,OAAO,CAA+B;YACrD,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,kCAAkC;YACvC,MAAM,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE;SACtC,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;QAE7B,WAAM,GAAG,CAAC,YAAoB,EAAE,WAAmB,EAAE,KAAwB,KAC3E,IAAI,CAAC,WAAW,CAAC,OAAO,CAAY;YAClC,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,kCAAkC;YACvC,MAAM,EAAE,EAAE,YAAY,EAAE,WAAW,EAAE;YACrC,IAAI,EAAE,KAAK;SACZ,EACD,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;KAEmB;;;;YAvBjD,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YALQ,WAAW;;;ACYpB,IAAK,UAIJ;AAJD,WAAK,UAAU;IACb,6DAA+C,CAAA;IAC/C,iEAAmD,CAAA;IACnD,mEAAqD,CAAA;AACvD,CAAC,EAJI,UAAU,KAAV,UAAU,QAId;MAOY,0BAA0B;IAuCrC,YACkB,KAAqB,EAC3B,OAAwB,EACxB,KAAY;QAFN,UAAK,GAAL,KAAK,CAAgB;QAC3B,YAAO,GAAP,OAAO,CAAiB;QACxB,UAAK,GAAL,KAAK,CAAO;QA9BxB,WAAM,GAAoD,EAAE,CAAC;QAM7D,eAAU,GAAG,UAAU,CAAC;QAiBL,kBAAa,GAAG,IAAI,YAAY,EAAW,CAAC;QAE/D,cAAS,GAAG,KAAK,CAAC;KAMd;IArBJ,IACI,OAAO;QACT,OAAO,IAAI,CAAC,QAAQ,CAAC;KACtB;IAED,IAAI,OAAO,CAAC,KAAc;QACxB,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK;YAAE,OAAO;QAEpC,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;QACtB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAC/B,IAAI,KAAK;YAAE,IAAI,CAAC,SAAS,EAAE,CAAC;KAC7B;IAYD,SAAS;QACP,IAAI,CAAC,IAAI,CAAC,YAAY,EAAE;YACtB,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAC9C;QAED,IAAI,CAAC,WAAW,EAAE,CAAC;KACpB;IAED,WAAW;QACT,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,GAAG;YACjE,IAAI,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC,CAAC;YACjF,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;YAC3D,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAC/B,CAAC,GAAG,EAAE,GAAG,sCACJ,GAAG,KACN,CAAC,GAAG,CAAC,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,IAAI,CAAC,GAAsB,CAAC,IAC3E,EACF,EAAE,CACH,CAAC;SACH,CAAC,CAAC;KACJ;IAED,IAAI;QACF,IAAI,IAAI,CAAC,SAAS;YAAE,OAAO;QAE3B,MAAM,eAAe,GAAG,EAAwB,CAAC;QAEjD,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,GAAG;YACpC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO;gBAChC,IAAI,OAAO,CAAC,KAAK,KAAK,OAAO,CAAC,YAAY;oBACxC,eAAe,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC;aACtE,CAAC,CAAC;SACJ,CAAC,CAAC;QAEH,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;YAC3B,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,OAAO;SACR;QAED,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,OAAO;aACT,MAAM,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,EAAE,QAAQ,EAAE,eAAe,EAAE,CAAC;aAC1E,IAAI,CAAC,QAAQ,CAAC,OAAO,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC,CAAC;aAC9C,SAAS,CAAC;YACT,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YAErB,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;;gBAErB,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,mBAAmB,EAAE,CAAC,CAAC;aAChD;SACF,CAAC,CAAC;KACN;IAED,eAAe,CAAC,GAAY,EAAE,OAAmB;QAC/C,IAAI,GAAG,EAAE;YACP,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;SACpC;aAAM;YACL,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;SACxC;KACF;IAEO,wBAAwB,CAAC,OAAmB;QAClD,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,UAAU,CAAC,qBAAqB,CAAC,CAAC,OAAO,CAAC,IAAI,IACrF,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,KAAK,CAAC,CAClC,CAAC;KACH;IAEO,oBAAoB,CAAC,OAAmB;QAC9C,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,UAAU,CAAC,qBAAqB,CAAC,CAAC,OAAO,CAAC,IAAI,IACnF,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CACjC,CAAC;KACH;IAEO,wBAAwB,CAAC,OAAmB,EAAE,IAAgB;QACpE,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAClD,MAAM,SAAS,GAAG,EAAE,CAAC;QACrB,OAAO,MAAM,EAAE;YACb,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YACvB,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;SAC9C;QACD,OAAO,SAAS,CAAC;KAClB;IAEO,0BAA0B,CAAC,OAAmB,EAAE,IAAgB;QACtE,MAAM,WAAW,GAAG,EAAE,CAAC;QACvB,MAAM,KAAK,GAAG,CAAC,OAAO,CAAC,CAAC;QAExB,OAAO,KAAK,CAAC,MAAM,EAAE;YACnB,MAAM,IAAI,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;YACzB,MAAM,cAAc,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;YAC3D,WAAW,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;YACpC,KAAK,CAAC,IAAI,CAAC,GAAG,cAAc,CAAC,CAAC;SAC/B;QAED,OAAO,WAAW,CAAC;KACpB;IAEO,gBAAgB,CAAC,OAAmB,EAAE,IAAgB;QAC5D,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,IAAI,CAChC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,UAAU,CAChE,CAAC;KACH;IAEO,kBAAkB,CAAC,OAAmB,EAAE,IAAgB;QAC9D,OAAO,IAAI,CAAC,eAAe,EAAE,CAAC,MAAM,CAClC,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,IAAI,KAAK,IAAI,IAAI,CAAC,CAAC,UAAU,KAAK,OAAO,CAAC,IAAI,CAChE,CAAC;KACH;IAEO,eAAe;;QACrB,aAAO,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,wBAAwB,CAAC,mCAAI,EAAE,CAAC;KAC3D;IAEO,eAAe,CAAC,OAAmB,EAAE,GAAY;QACvD,OAAO,CAAC,KAAK,GAAG,GAAU,CAAC;KAC5B;;;YArKF,SAAS,SAAC;gBACT,QAAQ,EAAE,wBAAwB;gBAClC,g0KAAkD;gBAClD,QAAQ,EAAE,sBAAsB;aACjC;;;YAvBQ,cAAc;YAMd,eAAe;YAHf,KAAK;;;0BAyBX,KAAK;2BAGL,KAAK;sBAeL,KAAK;4BAaL,MAAM;;AAgIT,SAAS,WAAW,CAAC,QAAsB,EAAE,GAAoB;IAC/D,MAAM,MAAM,GAAG,UAAU,GAAG,KAAK,KAAK,GAAG,OAAO,GAAG,MAAM,KAAK,CAAC;IAE/D,OAAO,QAAQ,CAAC,GAAG,CAAC,OAAO;;QACzB,MAAM,KAAK,GACT,OAAA,OAAO,CAAC,SAAS,0CAAE,IAAI,MAAK,UAAU,CAAC,qBAAqB;cACxD,CAAC,OAAO,CAAC,KAAK,IAAI,EAAE,EAAE,WAAW,EAAE,KAAK,MAAM;cAC9C,OAAO,CAAC,KAAK,CAAC;QAEpB,uCACK,OAAO,KACV,KAAK,EACL,YAAY,EAAE,KAAK,EACnB,KAAK,EAAE,EAAE,CAAC,MAAM,GAAG,OAAO,CAAC,KAAK,GAAG,EAAE,EAAE,IACvC;KACH,CAAC,CAAC;AACL;;ACzMA;;;MAGa,WAAW;IAEtB,YAAmB,OAAmC;QAAnC,YAAO,GAAP,OAAO,CAA4B;KAAI;;AAD1C,gBAAI,GAAG,kCAAkC,CAAC;AAI5D;;;MAGa,cAAc;IAEzB,YAAmB,OAAgE;QAAhE,YAAO,GAAP,OAAO,CAAyD;KAAI;;AADvE,mBAAI,GAAG,qCAAqC;;ACL9D;;;MAGa,wBAAwB;IAGnC,YAAoB,IAAiB,EAAU,KAAY;QAAvC,SAAI,GAAJ,IAAI,CAAa;QAAU,UAAK,GAAL,KAAK,CAAO;QAF3D,YAAO,GAAG,mBAAmB,CAAC;KAEiC;IAE/D,WAAW,CAAC,MAAkC;QAC5C,MAAM,OAAO,GAAuB;YAClC,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,kCAAkC;YACvC,MAAM;SACP,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAyD,OAAO,EAAE;YACxF,OAAO,EAAE,IAAI,CAAC,OAAO;SACtB,CAAC,CAAC;KACJ;IAED,cAAc,CAAC,EACb,QAAQ,EACR,WAAW,EACX,YAAY,GAC4C;QACxD,MAAM,OAAO,GAA6C;YACxD,MAAM,EAAE,KAAK;YACb,GAAG,EAAE,kCAAkC;YACvC,IAAI,EAAE,EAAE,QAAQ,EAAE;YAClB,MAAM,EAAE,EAAE,WAAW,EAAE,YAAY,EAAE;SACtC,CAAC;QACF,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAmC,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;KAChG;;;;YAlCF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;YAPQ,WAAW;YACX,KAAK;;;ACKd;;;IAQa,sBAAsB,SAAtB,sBAAsB;IAMjC,YAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;KAAI;IAJ1E,OAAO,WAAW,CAAC,EAAE,QAAQ,EAA2B;QACtD,OAAO,QAAQ,IAAI,EAAE,CAAC;KACvB;IAKD,WAAW,CAAC,EAAE,UAAU,EAAyC,EAAE,EAAE,OAAO,EAAe;QACzF,OAAO,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,IAAI,CAC5D,GAAG,CAAC,CAAC,EAAE,QAAQ,GAAG,EAAE,EAAE,KACpB,UAAU,CAAC;YACT,QAAQ;SACT,CAAC,CACH,CACF,CAAC;KACH;IAGD,cAAc,CAAC,CAAC,EAAE,EAAE,OAAO,EAAkB;QAC3C,OAAO,IAAI,CAAC,wBAAwB,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;KAC9D;EACF;;YAxBA,UAAU;;;YAVF,wBAAwB;;AAoB/B;IADC,MAAM,CAAC,WAAW,CAAC;;6CAC4D,WAAW;;yDAQ1F;AAGD;IADC,MAAM,CAAC,cAAc,CAAC;;6CACQ,cAAc;;4DAE5C;AApBD;IADC,QAAQ,EAAE;;;;+CAGV;AAJU,sBAAsB;IALlC,KAAK,CAA0B;QAC9B,IAAI,EAAE,wBAAwB;QAC9B,QAAQ,EAAE,EAAE,QAAQ,EAAE,EAAE,EAA6B;KACtD,CAAC;qCAQ8C,wBAAwB;GAN3D,sBAAsB,CAuBlC;;AC7BD,MAAM,QAAQ,GAAG,CAAC,0BAA0B,EAAE,sBAAsB,CAAC,CAAC;MAYzD,uBAAuB;;;YAVnC,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,GAAG,QAAQ,CAAC;gBAC3B,OAAO,EAAE;oBACP,UAAU;oBACV,iBAAiB;oBACjB,YAAY;oBACZ,UAAU,CAAC,UAAU,CAAC,CAAC,sBAAsB,CAAC,CAAC;iBAChD;gBACD,OAAO,EAAE,CAAC,GAAG,QAAQ,CAAC;aACvB;;;ACpBD;;;;;;"}