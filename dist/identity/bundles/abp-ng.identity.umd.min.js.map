{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../packages/identity/src/lib/actions/identity.actions.ts","../../../packages/identity/src/lib/proxy/identity/identity-role.service.ts","../../../packages/identity/src/lib/proxy/identity/identity-user.service.ts","../../../packages/identity/src/lib/states/identity.state.ts","../../../packages/identity/src/lib/components/roles/roles.component.ts","../../../packages/identity/src/lib/services/identity.service.ts","../../../packages/identity/src/lib/components/users/users.component.ts","../../../packages/identity/src/lib/identity-routing.module.ts","../../../packages/identity/src/lib/identity.module.ts","../../../packages/identity/src/lib/services/identity-state.service.ts","../../../packages/identity/src/lib/proxy/identity/identity-user-lookup.service.ts","../../../packages/identity/src/lib/proxy/identity/profile.service.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","create","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","__spread","concat","payload","this","GetRoles","type","GetRoleById","DeleteRole","CreateRole","UpdateRole","GetUsers","GetUserById","DeleteUser","CreateUser","UpdateUser","GetUserRoles","restService","_this","apiName","input","request","method","url","body","delete","id","get","getAllList","getList","params","sorting","skipCount","maxResultCount","update","Injectable","args","providedIn","RestService","findByEmail","email","findByUsername","username","getAssignableRoles","filter","getRoles","updateRoles","IdentityState","identityUserService","identityRoleService","_a","roles","items","getRolesTotalCount","totalCount","getUsers","users","getUsersTotalCount","prototype","_b","patchState","pipe","tap","getRole","selectedRole","deleteRole","_","addRole","updateRole","getState","assign","getUser","selectedUser","deleteUser","addUser","updateUser","getUserRoles","pluck","selectedUserRoles","IdentityUserService","IdentityRoleService","Action","Selector","State","name","defaults","RolesComponent","list","confirmationService","fb","store","visiblePermissions","modalBusy","permissionManagementKey","onVisiblePermissionChange","event","ngOnInit","hookToQuery","buildForm","form","group","FormControl","selected","disabled","isStatic","Validators","required","maxLength","isDefault","isPublic","openModal","isModalVisible","add","edit","dispatch","subscribe","save","valid","finalize","warn","messageLocalizationParams","status","Confirmation","Status","confirm","query","onClickSaveButton","formRef","nativeElement","dispatchEvent","Event","bubbles","cancelable","openPermissionsModal","providerKey","setTimeout","sort","data","sorts","prop","dir","sortKey","sortOrder","Component","selector","template","providers","ListService","ConfirmationService","FormBuilder","Store","ViewChild","static","read","ElementRef","Select","Observable","IdentityService","rest","getAllRoles","getRoleById","createRole","getUserById","getUserAssingableRoles","createUser","UsersComponent","identityService","trackByFn","index","item","keys","snq","controls","userName","surname","phoneNumber","lockoutEnabled","roleNames","array","map","role","find","userRole","passwordValidators","getPasswordValidators","addControl","setValidators","updateValueAndValidity","switchMap","take","state","mappedRoleNames","requiredPolicy","replaceableComponent","defaultComponent","ɵ1","routes","path","redirectTo","pathMatch","component","DynamicLayoutComponent","canActivate","AuthGuard","PermissionGuard","children","ReplaceableRouteContainerComponent","ɵ0","NgModule","imports","RouterModule","forChild","exports","IdentityModule","ngModule","forLazy","LazyModuleFactory","declarations","NgxsModule","forFeature","CoreModule","IdentityRoutingModule","NgbNavModule","ThemeSharedModule","NgbDropdownModule","PermissionManagementModule","NgxValidateCoreModule","IdentityStateService","selectSnapshot","dispatchGetRoles","_i","bind","apply","dispatchGetRoleById","dispatchDeleteRole","dispatchCreateRole","dispatchUpdateRole","dispatchGetUsers","dispatchGetUserById","dispatchDeleteUser","dispatchCreateUser","dispatchUpdateUser","dispatchGetUserRoles","findById","findByUserName","getCount","search","changePassword"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Identity } from '../models/identity';\r\nimport { ABP, PagedAndSortedResultRequestDto } from '@abp/ng.core';\r\nimport {\r\n  GetIdentityUsersInput,\r\n  IdentityRoleCreateDto,\r\n  IdentityRoleUpdateDto,\r\n  IdentityUserCreateDto,\r\n  IdentityUserUpdateDto,\r\n} from '../proxy/identity/models';\r\n\r\nexport class GetRoles {\r\n  static readonly type = '[Identity] Get Roles';\r\n  constructor(public payload?: PagedAndSortedResultRequestDto) {}\r\n}\r\n\r\nexport class GetRoleById {\r\n  static readonly type = '[Identity] Get Role By Id';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class DeleteRole {\r\n  static readonly type = '[Identity] Delete Role';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class CreateRole {\r\n  static readonly type = '[Identity] Create Role';\r\n  constructor(public payload: IdentityRoleCreateDto) {}\r\n}\r\n\r\nexport class UpdateRole {\r\n  static readonly type = '[Identity] Update Role';\r\n  constructor(public payload: IdentityRoleUpdateDto & { id: string }) {}\r\n}\r\n\r\nexport class GetUsers {\r\n  static readonly type = '[Identity] Get Users';\r\n  constructor(public payload?: GetIdentityUsersInput) {}\r\n}\r\n\r\nexport class GetUserById {\r\n  static readonly type = '[Identity] Get User By Id';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class DeleteUser {\r\n  static readonly type = '[Identity] Delete User';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class CreateUser {\r\n  static readonly type = '[Identity] Create User';\r\n  constructor(public payload: IdentityUserCreateDto) {}\r\n}\r\n\r\nexport class UpdateUser {\r\n  static readonly type = '[Identity] Update User';\r\n  constructor(public payload: IdentityUserUpdateDto & { id: string }) {}\r\n}\r\n\r\nexport class GetUserRoles {\r\n  static readonly type = '[Identity] Get User Roles';\r\n  constructor(public payload: string) {}\r\n}\r\n","import type { ListResultDto, PagedAndSortedResultRequestDto, PagedResultDto } from '@abp/ng.core';\r\nimport { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport type { IdentityRoleCreateDto, IdentityRoleDto, IdentityRoleUpdateDto } from './models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IdentityRoleService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  create = (input: IdentityRoleCreateDto) =>\r\n    this.restService.request<any, IdentityRoleDto>({\r\n      method: 'POST',\r\n      url: '/api/identity/roles',\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  delete = (id: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'DELETE',\r\n      url: `/api/identity/roles/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  get = (id: string) =>\r\n    this.restService.request<any, IdentityRoleDto>({\r\n      method: 'GET',\r\n      url: `/api/identity/roles/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getAllList = () =>\r\n    this.restService.request<any, ListResultDto<IdentityRoleDto>>({\r\n      method: 'GET',\r\n      url: '/api/identity/roles/all',\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getList = (input: PagedAndSortedResultRequestDto) =>\r\n    this.restService.request<any, PagedResultDto<IdentityRoleDto>>({\r\n      method: 'GET',\r\n      url: '/api/identity/roles',\r\n      params: { sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  update = (id: string, input: IdentityRoleUpdateDto) =>\r\n    this.restService.request<any, IdentityRoleDto>({\r\n      method: 'PUT',\r\n      url: `/api/identity/roles/${id}`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import type {\r\n  GetIdentityUsersInput,\r\n  IdentityRoleDto,\r\n  IdentityUserCreateDto,\r\n  IdentityUserDto,\r\n  IdentityUserUpdateDto,\r\n  IdentityUserUpdateRolesDto } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport type { ListResultDto, PagedResultDto } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IdentityUserService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  create = (input: IdentityUserCreateDto) =>\r\n    this.restService.request<any, IdentityUserDto>({\r\n      method: 'POST',\r\n      url: '/api/identity/users',\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  delete = (id: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'DELETE',\r\n      url: `/api/identity/users/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  findByEmail = (email: string) =>\r\n    this.restService.request<any, IdentityUserDto>({\r\n      method: 'GET',\r\n      url: `/api/identity/users/by-email/${email}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  findByUsername = (username: string) =>\r\n    this.restService.request<any, IdentityUserDto>({\r\n      method: 'GET',\r\n      url: '/api/identity/users/by-username/{userName}',\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  get = (id: string) =>\r\n    this.restService.request<any, IdentityUserDto>({\r\n      method: 'GET',\r\n      url: `/api/identity/users/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getAssignableRoles = () =>\r\n    this.restService.request<any, ListResultDto<IdentityRoleDto>>({\r\n      method: 'GET',\r\n      url: '/api/identity/users/assignable-roles',\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getList = (input: GetIdentityUsersInput) =>\r\n    this.restService.request<any, PagedResultDto<IdentityUserDto>>({\r\n      method: 'GET',\r\n      url: '/api/identity/users',\r\n      params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getRoles = (id: string) =>\r\n    this.restService.request<any, ListResultDto<IdentityRoleDto>>({\r\n      method: 'GET',\r\n      url: `/api/identity/users/${id}/roles`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  update = (id: string, input: IdentityUserUpdateDto) =>\r\n    this.restService.request<any, IdentityUserDto>({\r\n      method: 'PUT',\r\n      url: `/api/identity/users/${id}`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  updateRoles = (id: string, input: IdentityUserUpdateRolesDto) =>\r\n    this.restService.request<any, void>({\r\n      method: 'PUT',\r\n      url: `/api/identity/users/${id}/roles`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { pluck, tap } from 'rxjs/operators';\r\nimport {\r\n  CreateRole,\r\n  CreateUser,\r\n  DeleteRole,\r\n  DeleteUser,\r\n  GetRoleById,\r\n  GetRoles,\r\n  GetUserById,\r\n  GetUserRoles,\r\n  GetUsers,\r\n  UpdateRole,\r\n  UpdateUser,\r\n} from '../actions/identity.actions';\r\nimport { Identity } from '../models/identity';\r\nimport { IdentityRoleService } from '../proxy/identity/identity-role.service';\r\nimport { IdentityUserService } from '../proxy/identity/identity-user.service';\r\nimport { IdentityUserDto } from '../proxy/identity/models';\r\n\r\n@State<Identity.State>({\r\n  name: 'IdentityState',\r\n  defaults: { roles: {}, selectedRole: {}, users: {}, selectedUser: {} } as Identity.State,\r\n})\r\n@Injectable()\r\nexport class IdentityState {\r\n  @Selector()\r\n  static getRoles({ roles }: Identity.State): Identity.RoleItem[] {\r\n    return roles.items || [];\r\n  }\r\n\r\n  @Selector()\r\n  static getRolesTotalCount({ roles }: Identity.State): number {\r\n    return roles.totalCount || 0;\r\n  }\r\n\r\n  @Selector()\r\n  static getUsers({ users }: Identity.State): IdentityUserDto[] {\r\n    return users.items || [];\r\n  }\r\n\r\n  @Selector()\r\n  static getUsersTotalCount({ users }: Identity.State): number {\r\n    return users.totalCount || 0;\r\n  }\r\n\r\n  constructor(\r\n    private identityUserService: IdentityUserService,\r\n    private identityRoleService: IdentityRoleService,\r\n  ) {}\r\n\r\n  @Action(GetRoles)\r\n  getRoles({ patchState }: StateContext<Identity.State>, { payload }: GetRoles) {\r\n    return this.identityRoleService.getList(payload).pipe(\r\n      tap(roles =>\r\n        patchState({\r\n          roles,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(GetRoleById)\r\n  getRole({ patchState }: StateContext<Identity.State>, { payload }: GetRoleById) {\r\n    return this.identityRoleService.get(payload).pipe(\r\n      tap(selectedRole =>\r\n        patchState({\r\n          selectedRole,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(DeleteRole)\r\n  deleteRole(_, { payload }: GetRoleById) {\r\n    return this.identityRoleService.delete(payload);\r\n  }\r\n\r\n  @Action(CreateRole)\r\n  addRole(_, { payload }: CreateRole) {\r\n    return this.identityRoleService.create(payload);\r\n  }\r\n\r\n  @Action(UpdateRole)\r\n  updateRole({ getState }: StateContext<Identity.State>, { payload }: UpdateRole) {\r\n    return this.identityRoleService.update(payload.id, { ...getState().selectedRole, ...payload });\r\n  }\r\n\r\n  @Action(GetUsers)\r\n  getUsers({ patchState }: StateContext<Identity.State>, { payload }: GetUsers) {\r\n    return this.identityUserService.getList(payload).pipe(\r\n      tap(users =>\r\n        patchState({\r\n          users,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(GetUserById)\r\n  getUser({ patchState }: StateContext<Identity.State>, { payload }: GetUserById) {\r\n    return this.identityUserService.get(payload).pipe(\r\n      tap(selectedUser =>\r\n        patchState({\r\n          selectedUser,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(DeleteUser)\r\n  deleteUser(_, { payload }: GetUserById) {\r\n    return this.identityUserService.delete(payload);\r\n  }\r\n\r\n  @Action(CreateUser)\r\n  addUser(_, { payload }: CreateUser) {\r\n    return this.identityUserService.create(payload);\r\n  }\r\n\r\n  @Action(UpdateUser)\r\n  updateUser({ getState }: StateContext<Identity.State>, { payload }: UpdateUser) {\r\n    return this.identityUserService.update(payload.id, { ...getState().selectedUser, ...payload });\r\n  }\r\n\r\n  @Action(GetUserRoles)\r\n  getUserRoles({ patchState }: StateContext<Identity.State>, { payload }: GetUserRoles) {\r\n    return this.identityUserService.getRoles(payload).pipe(\r\n      pluck('items'),\r\n      tap(selectedUserRoles =>\r\n        patchState({\r\n          selectedUserRoles,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n}\r\n","import { ListService, PagedAndSortedResultRequestDto } from '@abp/ng.core';\r\nimport { ePermissionManagementComponents } from '@abp/ng.permission-management';\r\nimport { Confirmation, ConfirmationService } from '@abp/ng.theme.shared';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, pluck } from 'rxjs/operators';\r\nimport {\r\n  CreateRole,\r\n  DeleteRole,\r\n  GetRoleById,\r\n  GetRoles,\r\n  UpdateRole,\r\n} from '../../actions/identity.actions';\r\nimport { IdentityRoleDto } from '../../proxy/identity/models';\r\nimport { IdentityState } from '../../states/identity.state';\r\n\r\n@Component({\r\n  selector: 'abp-roles',\r\n  templateUrl: './roles.component.html',\r\n  providers: [ListService],\r\n})\r\nexport class RolesComponent implements OnInit {\r\n  @Select(IdentityState.getRoles)\r\n  data$: Observable<IdentityRoleDto[]>;\r\n\r\n  @Select(IdentityState.getRolesTotalCount)\r\n  totalCount$: Observable<number>;\r\n\r\n  form: FormGroup;\r\n\r\n  selected: IdentityRoleDto;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  visiblePermissions = false;\r\n\r\n  providerKey: string;\r\n\r\n  modalBusy = false;\r\n\r\n  permissionManagementKey = ePermissionManagementComponents.PermissionManagement;\r\n\r\n  @ViewChild('formRef', { static: false, read: ElementRef })\r\n  formRef: ElementRef<HTMLFormElement>;\r\n\r\n  onVisiblePermissionChange = event => {\r\n    this.visiblePermissions = event;\r\n  };\r\n\r\n  constructor(\r\n    public readonly list: ListService<PagedAndSortedResultRequestDto>,\r\n    private confirmationService: ConfirmationService,\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.hookToQuery();\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.fb.group({\r\n      name: new FormControl({ value: this.selected.name || '', disabled: this.selected.isStatic }, [\r\n        Validators.required,\r\n        Validators.maxLength(256),\r\n      ]),\r\n      isDefault: [this.selected.isDefault || false],\r\n      isPublic: [this.selected.isPublic || false],\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    this.buildForm();\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  add() {\r\n    this.selected = {} as IdentityRoleDto;\r\n    this.openModal();\r\n  }\r\n\r\n  edit(id: string) {\r\n    this.store\r\n      .dispatch(new GetRoleById(id))\r\n      .pipe(pluck('IdentityState', 'selectedRole'))\r\n      .subscribe(selectedRole => {\r\n        this.selected = selectedRole;\r\n        this.openModal();\r\n      });\r\n  }\r\n\r\n  save() {\r\n    if (!this.form.valid) return;\r\n    this.modalBusy = true;\r\n\r\n    this.store\r\n      .dispatch(\r\n        this.selected.id\r\n          ? new UpdateRole({ ...this.selected, ...this.form.value, id: this.selected.id })\r\n          : new CreateRole(this.form.value),\r\n      )\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.isModalVisible = false;\r\n        this.list.get();\r\n      });\r\n  }\r\n\r\n  delete(id: string, name: string) {\r\n    this.confirmationService\r\n      .warn('AbpIdentity::RoleDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\r\n        messageLocalizationParams: [name],\r\n      })\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.store.dispatch(new DeleteRole(id)).subscribe(() => this.list.get());\r\n        }\r\n      });\r\n  }\r\n\r\n  private hookToQuery() {\r\n    this.list.hookToQuery(query => this.store.dispatch(new GetRoles(query))).subscribe();\r\n  }\r\n\r\n  onClickSaveButton() {\r\n    this.formRef.nativeElement.dispatchEvent(\r\n      new Event('submit', { bubbles: true, cancelable: true }),\r\n    );\r\n  }\r\n\r\n  openPermissionsModal(providerKey: string) {\r\n    this.providerKey = providerKey;\r\n    setTimeout(() => {\r\n      this.visiblePermissions = true;\r\n    }, 0);\r\n  }\r\n\r\n  sort(data) {\r\n    const { prop, dir } = data.sorts[0];\r\n    this.list.sortKey = prop;\r\n    this.list.sortOrder = dir;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService, Rest, ABP } from '@abp/ng.core';\r\nimport { Identity } from '../models/identity';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IdentityService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  constructor(private rest: RestService) {}\r\n\r\n  getRoles(params = {} as ABP.PageQueryParams): Observable<Identity.RoleResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/roles',\r\n      params,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleResponse>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  getAllRoles(): Observable<Identity.RoleResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/roles/all',\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleResponse>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  getRoleById(id: string): Observable<Identity.RoleItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/identity/roles/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleItem>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  deleteRole(id: string): Observable<Identity.RoleItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'DELETE',\r\n      url: `/api/identity/roles/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleItem>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  createRole(body: Identity.RoleSaveRequest): Observable<Identity.RoleItem> {\r\n    const request: Rest.Request<Identity.RoleSaveRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/roles',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.RoleSaveRequest, Identity.RoleItem>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  updateRole(body: Identity.RoleItem): Observable<Identity.RoleItem> {\r\n    const url = `/api/identity/roles/${body.id}`;\r\n    delete body.id;\r\n\r\n    const request: Rest.Request<Identity.RoleItem> = {\r\n      method: 'PUT',\r\n      url,\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.RoleItem, Identity.RoleItem>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  getUsers(params = {} as ABP.PageQueryParams): Observable<Identity.UserResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/users',\r\n      params,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.UserResponse>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  getUserById(id: string): Observable<Identity.UserItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/identity/users/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.UserItem>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  getUserRoles(id: string): Observable<Identity.RoleResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/identity/users/${id}/roles`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleResponse>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  getUserAssingableRoles(): Observable<Identity.RoleResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/users/assignable-roles',\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleResponse>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  deleteUser(id: string): Observable<null> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'DELETE',\r\n      url: `/api/identity/users/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, null>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  createUser(body: Identity.UserSaveRequest): Observable<Identity.UserItem> {\r\n    const request: Rest.Request<Identity.UserSaveRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/users',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.UserSaveRequest, Identity.UserItem>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  updateUser(body: Identity.UserItem): Observable<Identity.UserItem> {\r\n    const url = `/api/identity/users/${body.id}`;\r\n    delete body.id;\r\n\r\n    const request: Rest.Request<Identity.UserItem> = {\r\n      method: 'PUT',\r\n      url,\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.UserItem, Identity.UserItem>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { ListService } from '@abp/ng.core';\r\nimport { ePermissionManagementComponents } from '@abp/ng.permission-management';\r\nimport { Confirmation, ConfirmationService, getPasswordValidators } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit, TemplateRef, TrackByFunction, ViewChild } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport {\r\n  CreateUser,\r\n  DeleteUser,\r\n  GetUserById,\r\n  GetUserRoles,\r\n  GetUsers,\r\n  UpdateUser,\r\n} from '../../actions/identity.actions';\r\nimport { Identity } from '../../models/identity';\r\nimport { IdentityRoleService } from '../../proxy/identity/identity-role.service';\r\nimport { IdentityUserService } from '../../proxy/identity/identity-user.service';\r\nimport {\r\n  GetIdentityUsersInput,\r\n  IdentityRoleDto,\r\n  IdentityUserDto,\r\n} from '../../proxy/identity/models';\r\nimport { IdentityService } from '../../services/identity.service';\r\nimport { IdentityState } from '../../states/identity.state';\r\n\r\n@Component({\r\n  selector: 'abp-users',\r\n  templateUrl: './users.component.html',\r\n  providers: [ListService],\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  @Select(IdentityState.getUsers)\r\n  data$: Observable<IdentityUserDto[]>;\r\n\r\n  @Select(IdentityState.getUsersTotalCount)\r\n  totalCount$: Observable<number>;\r\n\r\n  @ViewChild('modalContent', { static: false })\r\n  modalContent: TemplateRef<any>;\r\n\r\n  form: FormGroup;\r\n\r\n  selected: IdentityUserDto;\r\n\r\n  selectedUserRoles: IdentityRoleDto[];\r\n\r\n  roles: IdentityRoleDto[];\r\n\r\n  visiblePermissions = false;\r\n\r\n  providerKey: string;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  modalBusy = false;\r\n\r\n  permissionManagementKey = ePermissionManagementComponents.PermissionManagement;\r\n\r\n  trackByFn: TrackByFunction<AbstractControl> = (index, item) => Object.keys(item)[0] || index;\r\n\r\n  onVisiblePermissionChange = event => {\r\n    this.visiblePermissions = event;\r\n  };\r\n\r\n  get roleGroups(): FormGroup[] {\r\n    return snq(() => (this.form.get('roleNames') as FormArray).controls as FormGroup[], []);\r\n  }\r\n\r\n  constructor(\r\n    public readonly list: ListService<GetIdentityUsersInput>,\r\n    private confirmationService: ConfirmationService,\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n    private identityService: IdentityService,\r\n    private identityUserService: IdentityUserService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.hookToQuery();\r\n  }\r\n\r\n  buildForm() {\r\n    this.identityUserService.getAssignableRoles().subscribe(({ items }) => {\r\n      this.roles = items;\r\n      this.form = this.fb.group({\r\n        userName: [this.selected.userName || '', [Validators.required, Validators.maxLength(256)]],\r\n        email: [\r\n          this.selected.email || '',\r\n          [Validators.required, Validators.email, Validators.maxLength(256)],\r\n        ],\r\n        name: [this.selected.name || '', [Validators.maxLength(64)]],\r\n        surname: [this.selected.surname || '', [Validators.maxLength(64)]],\r\n        phoneNumber: [this.selected.phoneNumber || '', [Validators.maxLength(16)]],\r\n        lockoutEnabled: [this.selected.id ? this.selected.lockoutEnabled : true],\r\n        roleNames: this.fb.array(\r\n          this.roles.map(role =>\r\n            this.fb.group({\r\n              [role.name]: [\r\n                this.selected.id\r\n                  ? !!snq(() => this.selectedUserRoles.find(userRole => userRole.id === role.id))\r\n                  : role.isDefault,\r\n              ],\r\n            }),\r\n          ),\r\n        ),\r\n      });\r\n\r\n      const passwordValidators = getPasswordValidators(this.store);\r\n\r\n      this.form.addControl('password', new FormControl('', [...passwordValidators]));\r\n\r\n      if (!this.selected.userName) {\r\n        this.form.get('password').setValidators([...passwordValidators, Validators.required]);\r\n        this.form.get('password').updateValueAndValidity();\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    this.buildForm();\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  add() {\r\n    this.selected = {} as IdentityUserDto;\r\n    this.selectedUserRoles = [] as IdentityRoleDto[];\r\n    this.openModal();\r\n  }\r\n\r\n  edit(id: string) {\r\n    this.store\r\n      .dispatch(new GetUserById(id))\r\n      .pipe(\r\n        switchMap(() => this.store.dispatch(new GetUserRoles(id))),\r\n        pluck('IdentityState'),\r\n        take(1),\r\n      )\r\n      .subscribe((state: Identity.State) => {\r\n        this.selected = state.selectedUser;\r\n        this.selectedUserRoles = state.selectedUserRoles || [];\r\n        this.openModal();\r\n      });\r\n  }\r\n\r\n  save() {\r\n    if (!this.form.valid || this.modalBusy) return;\r\n    this.modalBusy = true;\r\n\r\n    const { roleNames } = this.form.value;\r\n    const mappedRoleNames = snq(\r\n      () =>\r\n        roleNames.filter(role => !!role[Object.keys(role)[0]]).map(role => Object.keys(role)[0]),\r\n      [],\r\n    );\r\n\r\n    this.store\r\n      .dispatch(\r\n        this.selected.id\r\n          ? new UpdateUser({\r\n              ...this.selected,\r\n              ...this.form.value,\r\n              id: this.selected.id,\r\n              roleNames: mappedRoleNames,\r\n            })\r\n          : new CreateUser({\r\n              ...this.form.value,\r\n              roleNames: mappedRoleNames,\r\n            }),\r\n      )\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.isModalVisible = false;\r\n        this.list.get();\r\n      });\r\n  }\r\n\r\n  delete(id: string, userName: string) {\r\n    this.confirmationService\r\n      .warn('AbpIdentity::UserDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\r\n        messageLocalizationParams: [userName],\r\n      })\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.store.dispatch(new DeleteUser(id)).subscribe(() => this.list.get());\r\n        }\r\n      });\r\n  }\r\n\r\n  sort(data) {\r\n    const { prop, dir } = data.sorts[0];\r\n    this.list.sortKey = prop;\r\n    this.list.sortOrder = dir;\r\n  }\r\n\r\n  private hookToQuery() {\r\n    this.list.hookToQuery(query => this.store.dispatch(new GetUsers(query))).subscribe();\r\n  }\r\n\r\n  openPermissionsModal(providerKey: string) {\r\n    this.providerKey = providerKey;\r\n    setTimeout(() => {\r\n      this.visiblePermissions = true;\r\n    }, 0);\r\n  }\r\n}\r\n","import {\r\n  AuthGuard,\r\n  DynamicLayoutComponent,\r\n  PermissionGuard,\r\n  ReplaceableComponents,\r\n  ReplaceableRouteContainerComponent,\r\n} from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RolesComponent } from './components/roles/roles.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { eIdentityComponents } from './enums/components';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'roles', pathMatch: 'full' },\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n    children: [\r\n      {\r\n        path: 'roles',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          requiredPolicy: 'AbpIdentity.Roles',\r\n          replaceableComponent: {\r\n            key: eIdentityComponents.Roles,\r\n            defaultComponent: RolesComponent,\r\n          } as ReplaceableComponents.RouteData<RolesComponent>,\r\n        },\r\n      },\r\n      {\r\n        path: 'users',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          requiredPolicy: 'AbpIdentity.Users',\r\n          replaceableComponent: {\r\n            key: eIdentityComponents.Users,\r\n            defaultComponent: UsersComponent,\r\n          } as ReplaceableComponents.RouteData<UsersComponent>,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class IdentityRoutingModule {}\r\n","import { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { PermissionManagementModule } from '@abp/ng.permission-management';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\r\nimport { NgbDropdownModule, NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { RolesComponent } from './components/roles/roles.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { IdentityRoutingModule } from './identity-routing.module';\r\nimport { IdentityState } from './states/identity.state';\r\n\r\n@NgModule({\r\n  declarations: [RolesComponent, UsersComponent],\r\n  exports: [RolesComponent, UsersComponent],\r\n  imports: [\r\n    NgxsModule.forFeature([IdentityState]),\r\n    CoreModule,\r\n    IdentityRoutingModule,\r\n    NgbNavModule,\r\n    ThemeSharedModule,\r\n    NgbDropdownModule,\r\n    PermissionManagementModule,\r\n    NgxValidateCoreModule,\r\n  ],\r\n})\r\nexport class IdentityModule {\r\n  static forChild(): ModuleWithProviders<IdentityModule> {\r\n    return {\r\n      ngModule: IdentityModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<IdentityModule> {\r\n    return new LazyModuleFactory(IdentityModule.forChild());\r\n  }\r\n}\r\n","import { ABP } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  CreateRole,\r\n  CreateUser,\r\n  DeleteRole,\r\n  DeleteUser,\r\n  GetRoleById,\r\n  GetRoles,\r\n  GetUserById,\r\n  GetUsers,\r\n  UpdateRole,\r\n  UpdateUser,\r\n  GetUserRoles,\r\n} from '../actions/identity.actions';\r\nimport { Identity } from '../models/identity';\r\nimport { IdentityState } from '../states/identity.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IdentityStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getRoles() {\r\n    return this.store.selectSnapshot(IdentityState.getRoles);\r\n  }\r\n  getRolesTotalCount() {\r\n    return this.store.selectSnapshot(IdentityState.getRolesTotalCount);\r\n  }\r\n  getUsers() {\r\n    return this.store.selectSnapshot(IdentityState.getUsers);\r\n  }\r\n  getUsersTotalCount() {\r\n    return this.store.selectSnapshot(IdentityState.getUsersTotalCount);\r\n  }\r\n\r\n  dispatchGetRoles(...args: ConstructorParameters<typeof GetRoles>) {\r\n    return this.store.dispatch(new GetRoles(...args));\r\n  }\r\n\r\n  dispatchGetRoleById(...args: ConstructorParameters<typeof GetRoleById>) {\r\n    return this.store.dispatch(new GetRoleById(...args));\r\n  }\r\n\r\n  dispatchDeleteRole(...args: ConstructorParameters<typeof DeleteRole>) {\r\n    return this.store.dispatch(new DeleteRole(...args));\r\n  }\r\n\r\n  dispatchCreateRole(...args: ConstructorParameters<typeof CreateRole>) {\r\n    return this.store.dispatch(new CreateRole(...args));\r\n  }\r\n\r\n  dispatchUpdateRole(...args: ConstructorParameters<typeof UpdateRole>) {\r\n    return this.store.dispatch(new UpdateRole(...args));\r\n  }\r\n\r\n  dispatchGetUsers(...args: ConstructorParameters<typeof GetUsers>) {\r\n    return this.store.dispatch(new GetUsers(...args));\r\n  }\r\n\r\n  dispatchGetUserById(...args: ConstructorParameters<typeof GetUserById>) {\r\n    return this.store.dispatch(new GetUserById(...args));\r\n  }\r\n\r\n  dispatchDeleteUser(...args: ConstructorParameters<typeof DeleteUser>) {\r\n    return this.store.dispatch(new DeleteUser(...args));\r\n  }\r\n\r\n  dispatchCreateUser(...args: ConstructorParameters<typeof CreateUser>) {\r\n    return this.store.dispatch(new CreateUser(...args));\r\n  }\r\n\r\n  dispatchUpdateUser(...args: ConstructorParameters<typeof UpdateUser>) {\r\n    return this.store.dispatch(new UpdateUser(...args));\r\n  }\r\n\r\n  dispatchGetUserRoles(...args: ConstructorParameters<typeof GetUserRoles>) {\r\n    return this.store.dispatch(new GetUserRoles(...args));\r\n  }\r\n}\r\n","import type { UserLookupCountInputDto, UserLookupSearchInputDto } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport type { ListResultDto } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport type { UserData } from '../users/models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IdentityUserLookupService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  findById = (id: string) =>\r\n    this.restService.request<any, UserData>({\r\n      method: 'GET',\r\n      url: `/api/identity/users/lookup/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  findByUserName = (userName: string) =>\r\n    this.restService.request<any, UserData>({\r\n      method: 'GET',\r\n      url: `/api/identity/users/lookup/by-username/${userName}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getCount = (input: UserLookupCountInputDto) =>\r\n    this.restService.request<any, number>({\r\n      method: 'GET',\r\n      url: '/api/identity/users/lookup/count',\r\n      params: { filter: input.filter },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  search = (input: UserLookupSearchInputDto) =>\r\n    this.restService.request<any, ListResultDto<UserData>>({\r\n      method: 'GET',\r\n      url: '/api/identity/users/lookup/search',\r\n      params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import type { ChangePasswordInput, ProfileDto, UpdateProfileDto } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  changePassword = (input: ChangePasswordInput) =>\r\n    this.restService.request<any, void>({\r\n      method: 'POST',\r\n      url: '/api/identity/my-profile/change-password',\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  get = () =>\r\n    this.restService.request<any, ProfileDto>({\r\n      method: 'GET',\r\n      url: '/api/identity/my-profile',\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  update = (input: UpdateProfileDto) =>\r\n    this.restService.request<any, ProfileDto>({\r\n      method: 'PUT',\r\n      url: '/api/identity/my-profile',\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n"]}