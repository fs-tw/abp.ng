{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../packages/identity/src/lib/actions/identity.actions.ts","../../../packages/identity/src/lib/services/identity.service.ts","../../../packages/identity/src/lib/states/identity.state.ts","../../../packages/identity/src/lib/components/roles/roles.component.ts","../../../packages/identity/src/lib/components/users/users.component.ts","../../../packages/identity/src/lib/identity-routing.module.ts","../../../packages/identity/src/lib/identity.module.ts","../../../packages/identity/src/lib/services/identity-state.service.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","__spread","concat","payload","this","GetRoles","type","GetRoleById","DeleteRole","CreateRole","UpdateRole","GetUsers","GetUserById","DeleteUser","CreateUser","UpdateUser","GetUserRoles","IdentityService","rest","apiName","prototype","getRoles","params","request","method","url","getAllRoles","getRoleById","id","deleteRole","createRole","body","updateRole","getUsers","getUserById","getUserRoles","getUserAssingableRoles","deleteUser","createUser","updateUser","Injectable","providedIn","RestService","IdentityState","identityService","_a","roles","items","getRolesTotalCount","totalCount","users","getUsersTotalCount","_b","patchState","pipe","tap","getRole","selectedRole","_","addRole","getState","assign","getUser","selectedUser","addUser","pluck","selectedUserRoles","Action","Selector","State","name","defaults","RolesComponent","list","confirmationService","fb","store","_this","visiblePermissions","modalBusy","permissionManagementKey","onVisiblePermissionChange","event","ngOnInit","hookToQuery","buildForm","form","group","FormControl","selected","disabled","isStatic","Validators","required","maxLength","isDefault","isPublic","openModal","isModalVisible","add","edit","dispatch","subscribe","save","valid","finalize","get","delete","warn","messageLocalizationParams","status","Confirmation","Status","confirm","query","onClickSaveButton","formRef","nativeElement","dispatchEvent","Event","bubbles","cancelable","openPermissionsModal","providerKey","setTimeout","sort","data","sorts","prop","dir","sortKey","sortOrder","Select","Observable","ViewChild","static","read","ElementRef","Component","selector","template","providers","ListService","ConfirmationService","FormBuilder","Store","UsersComponent","trackByFn","index","item","keys","snq","controls","userName","email","surname","phoneNumber","lockoutEnabled","twoFactorEnabled","roleNames","array","map","role","find","userRole","passwordValidators","getPasswordValidators","addControl","setValidators","updateValueAndValidity","switchMap","take","state","mappedRoleNames","filter","TemplateRef","requiredPolicy","replaceableComponent","defaultComponent","ɵ1","routes","path","redirectTo","pathMatch","component","DynamicLayoutComponent","canActivate","AuthGuard","PermissionGuard","children","ReplaceableRouteContainerComponent","ɵ0","IdentityRoutingModule","NgModule","imports","RouterModule","forChild","exports","IdentityModule","IdentityModule_1","ngModule","forLazy","LazyModuleFactory","declarations","NgxsModule","forFeature","CoreModule","NgbNavModule","ThemeSharedModule","NgbDropdownModule","PermissionManagementModule","NgxValidateCoreModule","IdentityStateService","selectSnapshot","dispatchGetRoles","args","_i","bind","apply","dispatchGetRoleById","dispatchDeleteRole","dispatchCreateRole","dispatchUpdateRole","dispatchGetUsers","dispatchGetUserById","dispatchDeleteUser","dispatchCreateUser","dispatchUpdateUser","dispatchGetUserRoles"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Identity } from '../models/identity';\r\nimport { ABP } from '@abp/ng.core';\r\n\r\nexport class GetRoles {\r\n  static readonly type = '[Identity] Get Roles';\r\n  constructor(public payload?: ABP.PageQueryParams) {}\r\n}\r\n\r\nexport class GetRoleById {\r\n  static readonly type = '[Identity] Get Role By Id';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class DeleteRole {\r\n  static readonly type = '[Identity] Delete Role';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class CreateRole {\r\n  static readonly type = '[Identity] Create Role';\r\n  constructor(public payload: Identity.RoleSaveRequest) {}\r\n}\r\n\r\nexport class UpdateRole {\r\n  static readonly type = '[Identity] Update Role';\r\n  constructor(public payload: Identity.RoleItem) {}\r\n}\r\n\r\nexport class GetUsers {\r\n  static readonly type = '[Identity] Get Users';\r\n  constructor(public payload?: ABP.PageQueryParams) {}\r\n}\r\n\r\nexport class GetUserById {\r\n  static readonly type = '[Identity] Get User By Id';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class DeleteUser {\r\n  static readonly type = '[Identity] Delete User';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class CreateUser {\r\n  static readonly type = '[Identity] Create User';\r\n  constructor(public payload: Identity.UserSaveRequest) {}\r\n}\r\n\r\nexport class UpdateUser {\r\n  static readonly type = '[Identity] Update User';\r\n  constructor(public payload: Identity.UserSaveRequest & { id: string }) {}\r\n}\r\n\r\nexport class GetUserRoles {\r\n  static readonly type = '[Identity] Get User Roles';\r\n  constructor(public payload: string) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService, Rest, ABP } from '@abp/ng.core';\r\nimport { Identity } from '../models/identity';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IdentityService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  constructor(private rest: RestService) {}\r\n\r\n  getRoles(params = {} as ABP.PageQueryParams): Observable<Identity.RoleResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/roles',\r\n      params,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleResponse>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  getAllRoles(): Observable<Identity.RoleResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/roles/all',\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleResponse>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  getRoleById(id: string): Observable<Identity.RoleItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/identity/roles/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleItem>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  deleteRole(id: string): Observable<Identity.RoleItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'DELETE',\r\n      url: `/api/identity/roles/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleItem>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  createRole(body: Identity.RoleSaveRequest): Observable<Identity.RoleItem> {\r\n    const request: Rest.Request<Identity.RoleSaveRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/roles',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.RoleSaveRequest, Identity.RoleItem>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  updateRole(body: Identity.RoleItem): Observable<Identity.RoleItem> {\r\n    const url = `/api/identity/roles/${body.id}`;\r\n    delete body.id;\r\n\r\n    const request: Rest.Request<Identity.RoleItem> = {\r\n      method: 'PUT',\r\n      url,\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.RoleItem, Identity.RoleItem>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  getUsers(params = {} as ABP.PageQueryParams): Observable<Identity.UserResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/users',\r\n      params,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.UserResponse>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  getUserById(id: string): Observable<Identity.UserItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/identity/users/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.UserItem>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  getUserRoles(id: string): Observable<Identity.RoleResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/identity/users/${id}/roles`,\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleResponse>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  getUserAssingableRoles(): Observable<Identity.RoleResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/users/assignable-roles',\r\n    };\r\n\r\n    return this.rest.request<null, Identity.RoleResponse>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  deleteUser(id: string): Observable<null> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'DELETE',\r\n      url: `/api/identity/users/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, null>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  createUser(body: Identity.UserSaveRequest): Observable<Identity.UserItem> {\r\n    const request: Rest.Request<Identity.UserSaveRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/users',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.UserSaveRequest, Identity.UserItem>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  updateUser(body: Identity.UserItem): Observable<Identity.UserItem> {\r\n    const url = `/api/identity/users/${body.id}`;\r\n    delete body.id;\r\n\r\n    const request: Rest.Request<Identity.UserItem> = {\r\n      method: 'PUT',\r\n      url,\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Identity.UserItem, Identity.UserItem>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { switchMap, tap, pluck } from 'rxjs/operators';\r\nimport {\r\n  CreateRole,\r\n  CreateUser,\r\n  DeleteRole,\r\n  DeleteUser,\r\n  GetRoleById,\r\n  GetRoles,\r\n  GetUserById,\r\n  GetUsers,\r\n  UpdateRole,\r\n  UpdateUser,\r\n  GetUserRoles,\r\n} from '../actions/identity.actions';\r\nimport { Identity } from '../models/identity';\r\nimport { IdentityService } from '../services/identity.service';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@State<Identity.State>({\r\n  name: 'IdentityState',\r\n  defaults: { roles: {}, selectedRole: {}, users: {}, selectedUser: {} } as Identity.State,\r\n})\r\n@Injectable()\r\nexport class IdentityState {\r\n  @Selector()\r\n  static getRoles({ roles }: Identity.State): Identity.RoleItem[] {\r\n    return roles.items || [];\r\n  }\r\n\r\n  @Selector()\r\n  static getRolesTotalCount({ roles }: Identity.State): number {\r\n    return roles.totalCount || 0;\r\n  }\r\n\r\n  @Selector()\r\n  static getUsers({ users }: Identity.State): Identity.UserItem[] {\r\n    return users.items || [];\r\n  }\r\n\r\n  @Selector()\r\n  static getUsersTotalCount({ users }: Identity.State): number {\r\n    return users.totalCount || 0;\r\n  }\r\n\r\n  constructor(private identityService: IdentityService) {}\r\n\r\n  @Action(GetRoles)\r\n  getRoles({ patchState }: StateContext<Identity.State>, { payload }: GetRoles) {\r\n    return this.identityService.getRoles(payload).pipe(\r\n      tap(roles =>\r\n        patchState({\r\n          roles,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(GetRoleById)\r\n  getRole({ patchState }: StateContext<Identity.State>, { payload }: GetRoleById) {\r\n    return this.identityService.getRoleById(payload).pipe(\r\n      tap(selectedRole =>\r\n        patchState({\r\n          selectedRole,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(DeleteRole)\r\n  deleteRole(_, { payload }: GetRoleById) {\r\n    return this.identityService.deleteRole(payload);\r\n  }\r\n\r\n  @Action(CreateRole)\r\n  addRole(_, { payload }: CreateRole) {\r\n    return this.identityService.createRole(payload);\r\n  }\r\n\r\n  @Action(UpdateRole)\r\n  updateRole({ getState }: StateContext<Identity.State>, { payload }: UpdateRole) {\r\n    return this.identityService.updateRole({ ...getState().selectedRole, ...payload });\r\n  }\r\n\r\n  @Action(GetUsers)\r\n  getUsers({ patchState }: StateContext<Identity.State>, { payload }: GetUsers) {\r\n    return this.identityService.getUsers(payload).pipe(\r\n      tap(users =>\r\n        patchState({\r\n          users,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(GetUserById)\r\n  getUser({ patchState }: StateContext<Identity.State>, { payload }: GetUserById) {\r\n    return this.identityService.getUserById(payload).pipe(\r\n      tap(selectedUser =>\r\n        patchState({\r\n          selectedUser,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(DeleteUser)\r\n  deleteUser(_, { payload }: GetUserById) {\r\n    return this.identityService.deleteUser(payload);\r\n  }\r\n\r\n  @Action(CreateUser)\r\n  addUser(_, { payload }: CreateUser) {\r\n    return this.identityService.createUser(payload);\r\n  }\r\n\r\n  @Action(UpdateUser)\r\n  updateUser({ getState }: StateContext<Identity.State>, { payload }: UpdateUser) {\r\n    return this.identityService.updateUser({ ...getState().selectedUser, ...payload });\r\n  }\r\n\r\n  @Action(GetUserRoles)\r\n  getUserRoles({ patchState }: StateContext<Identity.State>, { payload }: GetUserRoles) {\r\n    return this.identityService.getUserRoles(payload).pipe(\r\n      pluck('items'),\r\n      tap(selectedUserRoles =>\r\n        patchState({\r\n          selectedUserRoles,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n}\r\n","import { ListService } from '@abp/ng.core';\r\nimport { ePermissionManagementComponents } from '@abp/ng.permission-management';\r\nimport { Confirmation, ConfirmationService } from '@abp/ng.theme.shared';\r\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, pluck } from 'rxjs/operators';\r\nimport {\r\n  CreateRole,\r\n  DeleteRole,\r\n  GetRoleById,\r\n  GetRoles,\r\n  UpdateRole,\r\n} from '../../actions/identity.actions';\r\nimport { Identity } from '../../models/identity';\r\nimport { IdentityState } from '../../states/identity.state';\r\n\r\n@Component({\r\n  selector: 'abp-roles',\r\n  templateUrl: './roles.component.html',\r\n  providers: [ListService],\r\n})\r\nexport class RolesComponent implements OnInit {\r\n  @Select(IdentityState.getRoles)\r\n  data$: Observable<Identity.RoleItem[]>;\r\n\r\n  @Select(IdentityState.getRolesTotalCount)\r\n  totalCount$: Observable<number>;\r\n\r\n  form: FormGroup;\r\n\r\n  selected: Identity.RoleItem;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  visiblePermissions = false;\r\n\r\n  providerKey: string;\r\n\r\n  modalBusy = false;\r\n\r\n  permissionManagementKey = ePermissionManagementComponents.PermissionManagement;\r\n\r\n  @ViewChild('formRef', { static: false, read: ElementRef })\r\n  formRef: ElementRef<HTMLFormElement>;\r\n\r\n  onVisiblePermissionChange = event => {\r\n    this.visiblePermissions = event;\r\n  };\r\n\r\n  constructor(\r\n    public readonly list: ListService,\r\n    private confirmationService: ConfirmationService,\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.hookToQuery();\r\n  }\r\n\r\n  buildForm() {\r\n    this.form = this.fb.group({\r\n      name: new FormControl({ value: this.selected.name || '', disabled: this.selected.isStatic }, [\r\n        Validators.required,\r\n        Validators.maxLength(256),\r\n      ]),\r\n      isDefault: [this.selected.isDefault || false],\r\n      isPublic: [this.selected.isPublic || false],\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    this.buildForm();\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  add() {\r\n    this.selected = {} as Identity.RoleItem;\r\n    this.openModal();\r\n  }\r\n\r\n  edit(id: string) {\r\n    this.store\r\n      .dispatch(new GetRoleById(id))\r\n      .pipe(pluck('IdentityState', 'selectedRole'))\r\n      .subscribe(selectedRole => {\r\n        this.selected = selectedRole;\r\n        this.openModal();\r\n      });\r\n  }\r\n\r\n  save() {\r\n    if (!this.form.valid) return;\r\n    this.modalBusy = true;\r\n\r\n    this.store\r\n      .dispatch(\r\n        this.selected.id\r\n          ? new UpdateRole({ ...this.selected, ...this.form.value, id: this.selected.id })\r\n          : new CreateRole(this.form.value),\r\n      )\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.isModalVisible = false;\r\n        this.list.get();\r\n      });\r\n  }\r\n\r\n  delete(id: string, name: string) {\r\n    this.confirmationService\r\n      .warn('AbpIdentity::RoleDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\r\n        messageLocalizationParams: [name],\r\n      })\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.store.dispatch(new DeleteRole(id)).subscribe(() => this.list.get());\r\n        }\r\n      });\r\n  }\r\n\r\n  private hookToQuery() {\r\n    this.list.hookToQuery(query => this.store.dispatch(new GetRoles(query))).subscribe();\r\n  }\r\n\r\n  onClickSaveButton() {\r\n    this.formRef.nativeElement.dispatchEvent(\r\n      new Event('submit', { bubbles: true, cancelable: true }),\r\n    );\r\n  }\r\n\r\n  openPermissionsModal(providerKey: string) {\r\n    this.providerKey = providerKey;\r\n    setTimeout(() => {\r\n      this.visiblePermissions = true;\r\n    }, 0);\r\n  }\r\n\r\n  sort(data) {\r\n    const { prop, dir } = data.sorts[0];\r\n    this.list.sortKey = prop;\r\n    this.list.sortOrder = dir;\r\n  }\r\n}\r\n","import { ListService } from '@abp/ng.core';\r\nimport { ePermissionManagementComponents } from '@abp/ng.permission-management';\r\nimport { Confirmation, ConfirmationService, getPasswordValidators } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit, TemplateRef, TrackByFunction, ViewChild } from '@angular/core';\r\nimport {\r\n  AbstractControl,\r\n  FormArray,\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport {\r\n  CreateUser,\r\n  DeleteUser,\r\n  GetUserById,\r\n  GetUserRoles,\r\n  GetUsers,\r\n  UpdateUser,\r\n} from '../../actions/identity.actions';\r\nimport { Identity } from '../../models/identity';\r\nimport { IdentityService } from '../../services/identity.service';\r\nimport { IdentityState } from '../../states/identity.state';\r\n\r\n@Component({\r\n  selector: 'abp-users',\r\n  templateUrl: './users.component.html',\r\n  providers: [ListService],\r\n})\r\nexport class UsersComponent implements OnInit {\r\n  @Select(IdentityState.getUsers)\r\n  data$: Observable<Identity.UserItem[]>;\r\n\r\n  @Select(IdentityState.getUsersTotalCount)\r\n  totalCount$: Observable<number>;\r\n\r\n  @ViewChild('modalContent', { static: false })\r\n  modalContent: TemplateRef<any>;\r\n\r\n  form: FormGroup;\r\n\r\n  selected: Identity.UserItem;\r\n\r\n  selectedUserRoles: Identity.RoleItem[];\r\n\r\n  roles: Identity.RoleItem[];\r\n\r\n  visiblePermissions = false;\r\n\r\n  providerKey: string;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  modalBusy = false;\r\n\r\n  permissionManagementKey = ePermissionManagementComponents.PermissionManagement;\r\n\r\n  trackByFn: TrackByFunction<AbstractControl> = (index, item) => Object.keys(item)[0] || index;\r\n\r\n  onVisiblePermissionChange = event => {\r\n    this.visiblePermissions = event;\r\n  };\r\n\r\n  get roleGroups(): FormGroup[] {\r\n    return snq(() => (this.form.get('roleNames') as FormArray).controls as FormGroup[], []);\r\n  }\r\n\r\n  constructor(\r\n    public readonly list: ListService,\r\n    private confirmationService: ConfirmationService,\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n    private identityService: IdentityService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.hookToQuery();\r\n  }\r\n\r\n  buildForm() {\r\n    this.identityService.getUserAssingableRoles().subscribe(({ items }) => {\r\n      this.roles = items;\r\n      this.form = this.fb.group({\r\n        userName: [this.selected.userName || '', [Validators.required, Validators.maxLength(256)]],\r\n        email: [\r\n          this.selected.email || '',\r\n          [Validators.required, Validators.email, Validators.maxLength(256)],\r\n        ],\r\n        name: [this.selected.name || '', [Validators.maxLength(64)]],\r\n        surname: [this.selected.surname || '', [Validators.maxLength(64)]],\r\n        phoneNumber: [this.selected.phoneNumber || '', [Validators.maxLength(16)]],\r\n        lockoutEnabled: [this.selected.lockoutEnabled || (this.selected.id ? false : true)],\r\n        twoFactorEnabled: [this.selected.twoFactorEnabled || (this.selected.id ? false : true)],\r\n        roleNames: this.fb.array(\r\n          this.roles.map(role =>\r\n            this.fb.group({\r\n              [role.name]: [\r\n                this.selected.id\r\n                  ? !!snq(() => this.selectedUserRoles.find(userRole => userRole.id === role.id))\r\n                  : role.isDefault,\r\n              ],\r\n            }),\r\n          ),\r\n        ),\r\n      });\r\n\r\n      const passwordValidators = getPasswordValidators(this.store);\r\n\r\n      this.form.addControl('password', new FormControl('', [...passwordValidators]));\r\n\r\n      if (!this.selected.userName) {\r\n        this.form.get('password').setValidators([...passwordValidators, Validators.required]);\r\n        this.form.get('password').updateValueAndValidity();\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    this.buildForm();\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  add() {\r\n    this.selected = {} as Identity.UserItem;\r\n    this.selectedUserRoles = [] as Identity.RoleItem[];\r\n    this.openModal();\r\n  }\r\n\r\n  edit(id: string) {\r\n    this.store\r\n      .dispatch(new GetUserById(id))\r\n      .pipe(\r\n        switchMap(() => this.store.dispatch(new GetUserRoles(id))),\r\n        pluck('IdentityState'),\r\n        take(1),\r\n      )\r\n      .subscribe((state: Identity.State) => {\r\n        this.selected = state.selectedUser;\r\n        this.selectedUserRoles = state.selectedUserRoles || [];\r\n        this.openModal();\r\n      });\r\n  }\r\n\r\n  save() {\r\n    if (!this.form.valid || this.modalBusy) return;\r\n    this.modalBusy = true;\r\n\r\n    const { roleNames } = this.form.value;\r\n    const mappedRoleNames = snq(\r\n      () =>\r\n        roleNames.filter(role => !!role[Object.keys(role)[0]]).map(role => Object.keys(role)[0]),\r\n      [],\r\n    );\r\n\r\n    this.store\r\n      .dispatch(\r\n        this.selected.id\r\n          ? new UpdateUser({\r\n              ...this.selected,\r\n              ...this.form.value,\r\n              id: this.selected.id,\r\n              roleNames: mappedRoleNames,\r\n            })\r\n          : new CreateUser({\r\n              ...this.form.value,\r\n              roleNames: mappedRoleNames,\r\n            }),\r\n      )\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.isModalVisible = false;\r\n        this.list.get();\r\n      });\r\n  }\r\n\r\n  delete(id: string, userName: string) {\r\n    this.confirmationService\r\n      .warn('AbpIdentity::UserDeletionConfirmationMessage', 'AbpIdentity::AreYouSure', {\r\n        messageLocalizationParams: [userName],\r\n      })\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.store.dispatch(new DeleteUser(id)).subscribe(() => this.list.get());\r\n        }\r\n      });\r\n  }\r\n\r\n  sort(data) {\r\n    const { prop, dir } = data.sorts[0];\r\n    this.list.sortKey = prop;\r\n    this.list.sortOrder = dir;\r\n  }\r\n\r\n  private hookToQuery() {\r\n    this.list.hookToQuery(query => this.store.dispatch(new GetUsers(query))).subscribe();\r\n  }\r\n\r\n  openPermissionsModal(providerKey: string) {\r\n    this.providerKey = providerKey;\r\n    setTimeout(() => {\r\n      this.visiblePermissions = true;\r\n    }, 0);\r\n  }\r\n}\r\n","import {\r\n  AuthGuard,\r\n  DynamicLayoutComponent,\r\n  PermissionGuard,\r\n  ReplaceableComponents,\r\n  ReplaceableRouteContainerComponent,\r\n} from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { RolesComponent } from './components/roles/roles.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { eIdentityComponents } from './enums/components';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'roles', pathMatch: 'full' },\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n    children: [\r\n      {\r\n        path: 'roles',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          requiredPolicy: 'AbpIdentity.Roles',\r\n          replaceableComponent: {\r\n            key: eIdentityComponents.Roles,\r\n            defaultComponent: RolesComponent,\r\n          } as ReplaceableComponents.RouteData<RolesComponent>,\r\n        },\r\n      },\r\n      {\r\n        path: 'users',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          requiredPolicy: 'AbpIdentity.Users',\r\n          replaceableComponent: {\r\n            key: eIdentityComponents.Users,\r\n            defaultComponent: UsersComponent,\r\n          } as ReplaceableComponents.RouteData<UsersComponent>,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class IdentityRoutingModule {}\r\n","import { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { PermissionManagementModule } from '@abp/ng.permission-management';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\r\nimport { NgbDropdownModule, NgbNavModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { RolesComponent } from './components/roles/roles.component';\r\nimport { UsersComponent } from './components/users/users.component';\r\nimport { IdentityRoutingModule } from './identity-routing.module';\r\nimport { IdentityState } from './states/identity.state';\r\n\r\n@NgModule({\r\n  declarations: [RolesComponent, UsersComponent],\r\n  exports: [RolesComponent, UsersComponent],\r\n  imports: [\r\n    NgxsModule.forFeature([IdentityState]),\r\n    CoreModule,\r\n    IdentityRoutingModule,\r\n    NgbNavModule,\r\n    ThemeSharedModule,\r\n    NgbDropdownModule,\r\n    PermissionManagementModule,\r\n    NgxValidateCoreModule,\r\n  ],\r\n})\r\nexport class IdentityModule {\r\n  static forChild(): ModuleWithProviders<IdentityModule> {\r\n    return {\r\n      ngModule: IdentityModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<IdentityModule> {\r\n    return new LazyModuleFactory(IdentityModule.forChild());\r\n  }\r\n}\r\n","import { ABP } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  CreateRole,\r\n  CreateUser,\r\n  DeleteRole,\r\n  DeleteUser,\r\n  GetRoleById,\r\n  GetRoles,\r\n  GetUserById,\r\n  GetUsers,\r\n  UpdateRole,\r\n  UpdateUser,\r\n  GetUserRoles,\r\n} from '../actions/identity.actions';\r\nimport { Identity } from '../models/identity';\r\nimport { IdentityState } from '../states/identity.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class IdentityStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getRoles() {\r\n    return this.store.selectSnapshot(IdentityState.getRoles);\r\n  }\r\n  getRolesTotalCount() {\r\n    return this.store.selectSnapshot(IdentityState.getRolesTotalCount);\r\n  }\r\n  getUsers() {\r\n    return this.store.selectSnapshot(IdentityState.getUsers);\r\n  }\r\n  getUsersTotalCount() {\r\n    return this.store.selectSnapshot(IdentityState.getUsersTotalCount);\r\n  }\r\n\r\n  dispatchGetRoles(...args: ConstructorParameters<typeof GetRoles>) {\r\n    return this.store.dispatch(new GetRoles(...args));\r\n  }\r\n\r\n  dispatchGetRoleById(...args: ConstructorParameters<typeof GetRoleById>) {\r\n    return this.store.dispatch(new GetRoleById(...args));\r\n  }\r\n\r\n  dispatchDeleteRole(...args: ConstructorParameters<typeof DeleteRole>) {\r\n    return this.store.dispatch(new DeleteRole(...args));\r\n  }\r\n\r\n  dispatchCreateRole(...args: ConstructorParameters<typeof CreateRole>) {\r\n    return this.store.dispatch(new CreateRole(...args));\r\n  }\r\n\r\n  dispatchUpdateRole(...args: ConstructorParameters<typeof UpdateRole>) {\r\n    return this.store.dispatch(new UpdateRole(...args));\r\n  }\r\n\r\n  dispatchGetUsers(...args: ConstructorParameters<typeof GetUsers>) {\r\n    return this.store.dispatch(new GetUsers(...args));\r\n  }\r\n\r\n  dispatchGetUserById(...args: ConstructorParameters<typeof GetUserById>) {\r\n    return this.store.dispatch(new GetUserById(...args));\r\n  }\r\n\r\n  dispatchDeleteUser(...args: ConstructorParameters<typeof DeleteUser>) {\r\n    return this.store.dispatch(new DeleteUser(...args));\r\n  }\r\n\r\n  dispatchCreateUser(...args: ConstructorParameters<typeof CreateUser>) {\r\n    return this.store.dispatch(new CreateUser(...args));\r\n  }\r\n\r\n  dispatchUpdateUser(...args: ConstructorParameters<typeof UpdateUser>) {\r\n    return this.store.dispatch(new UpdateUser(...args));\r\n  }\r\n\r\n  dispatchGetUserRoles(...args: ConstructorParameters<typeof GetUserRoles>) {\r\n    return this.store.dispatch(new GetUserRoles(...args));\r\n  }\r\n}\r\n"]}