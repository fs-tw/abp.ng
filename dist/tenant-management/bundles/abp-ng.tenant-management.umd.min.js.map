{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../packages/tenant-management/src/lib/actions/tenant-management.actions.ts","../../../packages/tenant-management/src/lib/services/tenant-management.service.ts","../../../packages/tenant-management/src/lib/proxy/tenant.service.ts","../../../packages/tenant-management/src/lib/states/tenant-management.state.ts","../../../packages/tenant-management/src/lib/components/tenants/tenants.component.ts","../../../packages/tenant-management/src/lib/tenant-management-routing.module.ts","../../../packages/tenant-management/src/lib/tenant-management.module.ts","../../../packages/tenant-management/src/lib/services/tenant-management-state.service.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","create","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","__spread","concat","payload","this","GetTenants","type","GetTenantById","CreateTenant","UpdateTenant","DeleteTenant","TenantManagementService","rest","apiName","prototype","getTenant","params","request","method","url","getTenantById","id","deleteTenant","createTenant","body","updateTenant","getDefaultConnectionString","responseType","updateDefaultConnectionString","defaultConnectionString","deleteDefaultConnectionString","Injectable","args","providedIn","RestService","restService","_this","input","delete","get","getList","filter","sorting","skipCount","maxResultCount","update","TenantManagementState","service","_a","result","items","getTenantsTotalCount","totalCount","_b","patchState","pipe","tap","getById","selectedItem","_","add","getState","assign","TenantService","Action","Selector","State","name","defaults","TenantsComponent","list","confirmationService","tenantService","fb","store","selectedModalContent","visibleFeatures","modalBusy","featureManagementKey","onVisibleFeaturesChange","Boolean","selected","defaultConnectionStringForm","invalid","tenantForm","ngOnInit","hookToQuery","createTenantForm","group","Validators","required","maxLength","adminEmailAddress","email","adminPassword","getPasswordValidators","hasSelectedTenant","removeControl","createDefaultConnectionStringForm","useSharedDatabase","_useSharedDatabase","openModal","title","template","isModalVisible","onEditConnectionString","dispatch","pluck","switchMap","subscribe","fetchedConnectionString","connectionStringModalTemplate","addTenant","tenantModalTemplate","editTenant","save","saveTenant","saveConnectionString","connectionString","take","finalize","valid","warn","messageLocalizationParams","status","Confirmation","Status","confirm","query","onSharedDatabaseChange","setTimeout","document","getElementById","focus","openFeaturesModal","providerKey","sort","data","sorts","prop","dir","sortKey","sortOrder","Component","selector","providers","ListService","ConfirmationService","FormBuilder","Store","ViewChild","Select","Observable","requiredPolicy","replaceableComponent","defaultComponent","routes","path","redirectTo","pathMatch","component","DynamicLayoutComponent","canActivate","AuthGuard","PermissionGuard","children","ReplaceableRouteContainerComponent","Éµ0","NgModule","imports","RouterModule","forChild","exports","TenantManagementModule","ngModule","forLazy","LazyModuleFactory","declarations","TenantManagementRoutingModule","NgxsModule","forFeature","NgxValidateCoreModule","CoreModule","ThemeSharedModule","NgbDropdownModule","FeatureManagementModule","TenantManagementStateService","selectSnapshot","dispatchGetTenants","_i","bind","apply","dispatchGetTenantById","dispatchCreateTenant","dispatchUpdateTenant","dispatchDeleteTenant"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { GetTenantsInput, TenantCreateDto, TenantUpdateDto } from '../proxy/models';\r\n\r\nexport class GetTenants {\r\n  static readonly type = '[TenantManagement] Get Tenant';\r\n  constructor(public payload?: GetTenantsInput) {}\r\n}\r\n\r\nexport class GetTenantById {\r\n  static readonly type = '[TenantManagement] Get Tenant By Id';\r\n  constructor(public payload: string) {}\r\n}\r\n\r\nexport class CreateTenant {\r\n  static readonly type = '[TenantManagement] Create Tenant';\r\n  constructor(public payload: TenantCreateDto) {}\r\n}\r\n\r\nexport class UpdateTenant {\r\n  static readonly type = '[TenantManagement] Update Tenant';\r\n  constructor(public payload: TenantUpdateDto & { id: string }) {}\r\n}\r\n\r\nexport class DeleteTenant {\r\n  static readonly type = '[TenantManagement] Delete Tenant';\r\n  constructor(public payload: string) {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService, Rest, ABP } from '@abp/ng.core';\r\nimport { TenantManagement } from '../models/tenant-management';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\n/**\r\n * @deprecated Use TenantService instead. To be deleted in v4.0.\r\n */\r\nexport class TenantManagementService {\r\n  apiName = 'AbpTenantManagement';\r\n\r\n  constructor(private rest: RestService) {}\r\n\r\n  getTenant(params = {} as ABP.PageQueryParams): Observable<TenantManagement.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/multi-tenancy/tenants',\r\n      params,\r\n    };\r\n\r\n    return this.rest.request<null, TenantManagement.Response>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  getTenantById(id: string): Observable<ABP.BasicItem> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/multi-tenancy/tenants/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, ABP.BasicItem>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  deleteTenant(id: string): Observable<null> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'DELETE',\r\n      url: `/api/multi-tenancy/tenants/${id}`,\r\n    };\r\n\r\n    return this.rest.request<null, null>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  createTenant(body: TenantManagement.AddRequest): Observable<ABP.BasicItem> {\r\n    const request: Rest.Request<TenantManagement.AddRequest> = {\r\n      method: 'POST',\r\n      url: '/api/multi-tenancy/tenants',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<TenantManagement.AddRequest, ABP.BasicItem>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  updateTenant(body: TenantManagement.UpdateRequest): Observable<ABP.BasicItem> {\r\n    const url = `/api/multi-tenancy/tenants/${body.id}`;\r\n    delete body.id;\r\n\r\n    const request: Rest.Request<TenantManagement.UpdateRequest> = {\r\n      method: 'PUT',\r\n      url,\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<TenantManagement.UpdateRequest, ABP.BasicItem>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  getDefaultConnectionString(id: string): Observable<string> {\r\n    const url = `/api/multi-tenancy/tenants/${id}/default-connection-string`;\r\n\r\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\r\n      method: 'GET',\r\n      responseType: Rest.ResponseType.Text,\r\n      url,\r\n    };\r\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, string>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  updateDefaultConnectionString(\r\n    payload: TenantManagement.DefaultConnectionStringRequest,\r\n  ): Observable<any> {\r\n    const url = `/api/multi-tenancy/tenants/${payload.id}/default-connection-string`;\r\n\r\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\r\n      method: 'PUT',\r\n      url,\r\n      params: { defaultConnectionString: payload.defaultConnectionString },\r\n    };\r\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, any>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  deleteDefaultConnectionString(id: string): Observable<string> {\r\n    const url = `/api/multi-tenancy/tenants/${id}/default-connection-string`;\r\n\r\n    const request: Rest.Request<TenantManagement.DefaultConnectionStringRequest> = {\r\n      method: 'DELETE',\r\n      url,\r\n    };\r\n    return this.rest.request<TenantManagement.DefaultConnectionStringRequest, any>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import type { GetTenantsInput, TenantCreateDto, TenantDto, TenantUpdateDto } from './models';\r\nimport { RestService } from '@abp/ng.core';\r\nimport type { PagedResultDto } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TenantService {\r\n  apiName = 'AbpTenantManagement';\r\n\r\n  create = (input: TenantCreateDto) =>\r\n    this.restService.request<any, TenantDto>({\r\n      method: 'POST',\r\n      url: '/api/multi-tenancy/tenants',\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  delete = (id: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'DELETE',\r\n      url: `/api/multi-tenancy/tenants/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  deleteDefaultConnectionString = (id: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'DELETE',\r\n      url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  get = (id: string) =>\r\n    this.restService.request<any, TenantDto>({\r\n      method: 'GET',\r\n      url: `/api/multi-tenancy/tenants/${id}`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getDefaultConnectionString = (id: string) =>\r\n    this.restService.request<any, string>({\r\n      method: 'GET',\r\n      responseType: 'text',\r\n      url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  getList = (input: GetTenantsInput) =>\r\n    this.restService.request<any, PagedResultDto<TenantDto>>({\r\n      method: 'GET',\r\n      url: '/api/multi-tenancy/tenants',\r\n      params: { filter: input.filter, sorting: input.sorting, skipCount: input.skipCount, maxResultCount: input.maxResultCount },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  update = (id: string, input: TenantUpdateDto) =>\r\n    this.restService.request<any, TenantDto>({\r\n      method: 'PUT',\r\n      url: `/api/multi-tenancy/tenants/${id}`,\r\n      body: input,\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  updateDefaultConnectionString = (id: string, defaultConnectionString: string) =>\r\n    this.restService.request<any, void>({\r\n      method: 'PUT',\r\n      url: `/api/multi-tenancy/tenants/${id}/default-connection-string`,\r\n      params: { defaultConnectionString },\r\n    },\r\n    { apiName: this.apiName });\r\n\r\n  constructor(private restService: RestService) {}\r\n}\r\n","import { ABP, PagedResultDto } from '@abp/ng.core';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport {\r\n  CreateTenant,\r\n  DeleteTenant,\r\n  GetTenantById,\r\n  GetTenants,\r\n  UpdateTenant,\r\n} from '../actions/tenant-management.actions';\r\nimport { TenantManagement } from '../models/tenant-management';\r\nimport { Injectable } from '@angular/core';\r\nimport { TenantService } from '../proxy/tenant.service';\r\nimport { TenantDto } from '../proxy/models';\r\n\r\n@State<TenantManagement.State>({\r\n  name: 'TenantManagementState',\r\n  defaults: { result: {}, selectedItem: {} } as TenantManagement.State,\r\n})\r\n@Injectable()\r\nexport class TenantManagementState {\r\n  @Selector()\r\n  static get({ result }: TenantManagement.State): TenantDto[] {\r\n    return result.items || [];\r\n  }\r\n\r\n  @Selector()\r\n  static getTenantsTotalCount({ result }: TenantManagement.State): number {\r\n    return result.totalCount;\r\n  }\r\n\r\n  constructor(private service: TenantService) {}\r\n\r\n  @Action(GetTenants)\r\n  get({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenants) {\r\n    return this.service.getList(payload).pipe(\r\n      tap(result =>\r\n        patchState({\r\n          result,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(GetTenantById)\r\n  getById({ patchState }: StateContext<TenantManagement.State>, { payload }: GetTenantById) {\r\n    return this.service.get(payload).pipe(\r\n      tap(selectedItem =>\r\n        patchState({\r\n          selectedItem,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(DeleteTenant)\r\n  delete(_, { payload }: DeleteTenant) {\r\n    return this.service.delete(payload);\r\n  }\r\n\r\n  @Action(CreateTenant)\r\n  add(_, { payload }: CreateTenant) {\r\n    return this.service.create(payload);\r\n  }\r\n\r\n  @Action(UpdateTenant)\r\n  update({ getState }: StateContext<TenantManagement.State>, { payload }: UpdateTenant) {\r\n    return this.service.update(payload.id, { ...getState().selectedItem, ...payload });\r\n  }\r\n}\r\n","import { ABP, ListService, PagedResultDto } from '@abp/ng.core';\r\nimport { eFeatureManagementComponents } from '@abp/ng.feature-management';\r\nimport { Confirmation, ConfirmationService, getPasswordValidators } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit, TemplateRef, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, pluck, switchMap, take } from 'rxjs/operators';\r\nimport {\r\n  CreateTenant,\r\n  DeleteTenant,\r\n  GetTenantById,\r\n  GetTenants,\r\n  UpdateTenant,\r\n} from '../../actions/tenant-management.actions';\r\nimport { GetTenantsInput, TenantDto } from '../../proxy/models';\r\nimport { TenantManagementService } from '../../services/tenant-management.service';\r\nimport { TenantManagementState } from '../../states/tenant-management.state';\r\n\r\ninterface SelectedModalContent {\r\n  type: 'saveConnStr' | 'saveTenant';\r\n  title: string;\r\n  template: TemplateRef<any>;\r\n}\r\n\r\n@Component({\r\n  selector: 'abp-tenants',\r\n  templateUrl: './tenants.component.html',\r\n  providers: [ListService],\r\n})\r\nexport class TenantsComponent implements OnInit {\r\n  @Select(TenantManagementState.get)\r\n  data$: Observable<PagedResultDto<TenantDto>>;\r\n\r\n  @Select(TenantManagementState.getTenantsTotalCount)\r\n  totalCount$: Observable<number>;\r\n\r\n  selected: TenantDto;\r\n\r\n  tenantForm: FormGroup;\r\n\r\n  defaultConnectionStringForm: FormGroup;\r\n\r\n  defaultConnectionString: string;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  selectedModalContent = {} as SelectedModalContent;\r\n\r\n  visibleFeatures = false;\r\n\r\n  providerKey: string;\r\n\r\n  _useSharedDatabase: boolean;\r\n\r\n  modalBusy = false;\r\n\r\n  featureManagementKey = eFeatureManagementComponents.FeatureManagement;\r\n\r\n  get hasSelectedTenant(): boolean {\r\n    return Boolean(this.selected.id);\r\n  }\r\n\r\n  get useSharedDatabase(): boolean {\r\n    return this.defaultConnectionStringForm.get('useSharedDatabase').value;\r\n  }\r\n\r\n  get connectionString(): string {\r\n    return this.defaultConnectionStringForm.get('defaultConnectionString').value;\r\n  }\r\n\r\n  @ViewChild('tenantModalTemplate')\r\n  tenantModalTemplate: TemplateRef<any>;\r\n\r\n  @ViewChild('connectionStringModalTemplate')\r\n  connectionStringModalTemplate: TemplateRef<any>;\r\n\r\n  get isDisabledSaveButton(): boolean {\r\n    if (!this.selectedModalContent) return false;\r\n\r\n    if (\r\n      this.selectedModalContent.type === 'saveConnStr' &&\r\n      this.defaultConnectionStringForm &&\r\n      this.defaultConnectionStringForm.invalid\r\n    ) {\r\n      return true;\r\n    } else if (\r\n      this.selectedModalContent.type === 'saveTenant' &&\r\n      this.tenantForm &&\r\n      this.tenantForm.invalid\r\n    ) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  onVisibleFeaturesChange = (value: boolean) => {\r\n    this.visibleFeatures = value;\r\n  };\r\n\r\n  constructor(\r\n    public readonly list: ListService<GetTenantsInput>,\r\n    private confirmationService: ConfirmationService,\r\n    private tenantService: TenantManagementService,\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.hookToQuery();\r\n  }\r\n\r\n  private createTenantForm() {\r\n    const tenantForm = this.fb.group({\r\n      name: [this.selected.name || '', [Validators.required, Validators.maxLength(256)]],\r\n      adminEmailAddress: [null, [Validators.required, Validators.maxLength(256), Validators.email]],\r\n      adminPassword: [null, [Validators.required, ...getPasswordValidators(this.store)]],\r\n    });\r\n\r\n    if (this.hasSelectedTenant) {\r\n      tenantForm.removeControl('adminEmailAddress');\r\n      tenantForm.removeControl('adminPassword');\r\n    }\r\n\r\n    this.tenantForm = tenantForm;\r\n  }\r\n\r\n  private createDefaultConnectionStringForm() {\r\n    this.defaultConnectionStringForm = this.fb.group({\r\n      useSharedDatabase: this._useSharedDatabase,\r\n      defaultConnectionString: [this.defaultConnectionString || ''],\r\n    });\r\n  }\r\n\r\n  openModal(title: string, template: TemplateRef<any>, type: 'saveConnStr' | 'saveTenant') {\r\n    this.selectedModalContent = {\r\n      title,\r\n      template,\r\n      type,\r\n    };\r\n\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  onEditConnectionString(id: string) {\r\n    this.store\r\n      .dispatch(new GetTenantById(id))\r\n      .pipe(\r\n        pluck('TenantManagementState', 'selectedItem'),\r\n        switchMap(selected => {\r\n          this.selected = selected;\r\n          return this.tenantService.getDefaultConnectionString(id);\r\n        }),\r\n      )\r\n      .subscribe(fetchedConnectionString => {\r\n        this._useSharedDatabase = fetchedConnectionString ? false : true;\r\n        this.defaultConnectionString = fetchedConnectionString ? fetchedConnectionString : '';\r\n        this.createDefaultConnectionStringForm();\r\n        this.openModal(\r\n          'AbpTenantManagement::ConnectionStrings',\r\n          this.connectionStringModalTemplate,\r\n          'saveConnStr',\r\n        );\r\n      });\r\n  }\r\n\r\n  addTenant() {\r\n    this.selected = {} as TenantDto;\r\n    this.createTenantForm();\r\n    this.openModal('AbpTenantManagement::NewTenant', this.tenantModalTemplate, 'saveTenant');\r\n  }\r\n\r\n  editTenant(id: string) {\r\n    this.store\r\n      .dispatch(new GetTenantById(id))\r\n      .pipe(pluck('TenantManagementState', 'selectedItem'))\r\n      .subscribe(selected => {\r\n        this.selected = selected;\r\n        this.createTenantForm();\r\n        this.openModal('AbpTenantManagement::Edit', this.tenantModalTemplate, 'saveTenant');\r\n      });\r\n  }\r\n\r\n  save() {\r\n    const { type } = this.selectedModalContent;\r\n    if (!type) return;\r\n    if (type === 'saveTenant') this.saveTenant();\r\n    else if (type === 'saveConnStr') this.saveConnectionString();\r\n  }\r\n\r\n  saveConnectionString() {\r\n    if (this.modalBusy) return;\r\n\r\n    this.modalBusy = true;\r\n    if (this.useSharedDatabase || (!this.useSharedDatabase && !this.connectionString)) {\r\n      this.tenantService\r\n        .deleteDefaultConnectionString(this.selected.id)\r\n        .pipe(\r\n          take(1),\r\n          finalize(() => (this.modalBusy = false)),\r\n        )\r\n        .subscribe(() => {\r\n          this.isModalVisible = false;\r\n        });\r\n    } else {\r\n      this.tenantService\r\n        .updateDefaultConnectionString({\r\n          id: this.selected.id,\r\n          defaultConnectionString: this.connectionString,\r\n        })\r\n        .pipe(\r\n          take(1),\r\n          finalize(() => (this.modalBusy = false)),\r\n        )\r\n        .subscribe(() => {\r\n          this.isModalVisible = false;\r\n        });\r\n    }\r\n  }\r\n\r\n  saveTenant() {\r\n    if (!this.tenantForm.valid || this.modalBusy) return;\r\n    this.modalBusy = true;\r\n\r\n    this.store\r\n      .dispatch(\r\n        this.selected.id\r\n          ? new UpdateTenant({ ...this.selected, ...this.tenantForm.value, id: this.selected.id })\r\n          : new CreateTenant(this.tenantForm.value),\r\n      )\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(() => {\r\n        this.isModalVisible = false;\r\n        this.list.get();\r\n      });\r\n  }\r\n\r\n  delete(id: string, name: string) {\r\n    this.confirmationService\r\n      .warn(\r\n        'AbpTenantManagement::TenantDeletionConfirmationMessage',\r\n        'AbpTenantManagement::AreYouSure',\r\n        {\r\n          messageLocalizationParams: [name],\r\n        },\r\n      )\r\n      .subscribe((status: Confirmation.Status) => {\r\n        if (status === Confirmation.Status.confirm) {\r\n          this.store.dispatch(new DeleteTenant(id)).subscribe(() => this.list.get());\r\n        }\r\n      });\r\n  }\r\n\r\n  hookToQuery() {\r\n    this.list.hookToQuery(query => this.store.dispatch(new GetTenants(query))).subscribe();\r\n  }\r\n\r\n  onSharedDatabaseChange(value: boolean) {\r\n    if (!value) {\r\n      setTimeout(() => {\r\n        const defaultConnectionString = document.getElementById(\r\n          'defaultConnectionString',\r\n        ) as HTMLInputElement;\r\n        if (defaultConnectionString) {\r\n          defaultConnectionString.focus();\r\n        }\r\n      }, 0);\r\n    }\r\n  }\r\n\r\n  openFeaturesModal(providerKey: string) {\r\n    this.providerKey = providerKey;\r\n    setTimeout(() => {\r\n      this.visibleFeatures = true;\r\n    }, 0);\r\n  }\r\n\r\n  sort(data) {\r\n    const { prop, dir } = data.sorts[0];\r\n    this.list.sortKey = prop;\r\n    this.list.sortOrder = dir;\r\n  }\r\n}\r\n","import {\r\n  AuthGuard,\r\n  DynamicLayoutComponent,\r\n  PermissionGuard,\r\n  ReplaceableComponents,\r\n  ReplaceableRouteContainerComponent,\r\n} from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TenantsComponent } from './components/tenants/tenants.component';\r\nimport { eTenantManagementComponents } from './enums/components';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: 'tenants', pathMatch: 'full' },\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    canActivate: [AuthGuard, PermissionGuard],\r\n    children: [\r\n      {\r\n        path: 'tenants',\r\n        component: ReplaceableRouteContainerComponent,\r\n        data: {\r\n          requiredPolicy: 'AbpTenantManagement.Tenants',\r\n          replaceableComponent: {\r\n            key: eTenantManagementComponents.Tenants,\r\n            defaultComponent: TenantsComponent,\r\n          } as ReplaceableComponents.RouteData<TenantsComponent>,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TenantManagementRoutingModule {}\r\n","import { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { FeatureManagementModule } from '@abp/ng.feature-management';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { TenantsComponent } from './components/tenants/tenants.component';\r\nimport { TenantManagementState } from './states/tenant-management.state';\r\nimport { TenantManagementRoutingModule } from './tenant-management-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [TenantsComponent],\r\n  exports: [TenantsComponent],\r\n  imports: [\r\n    TenantManagementRoutingModule,\r\n    NgxsModule.forFeature([TenantManagementState]),\r\n    NgxValidateCoreModule,\r\n    CoreModule,\r\n    ThemeSharedModule,\r\n    NgbDropdownModule,\r\n    FeatureManagementModule,\r\n  ],\r\n})\r\nexport class TenantManagementModule {\r\n  static forChild(): ModuleWithProviders<TenantManagementModule> {\r\n    return {\r\n      ngModule: TenantManagementModule,\r\n      providers: [],\r\n    };\r\n  }\r\n\r\n  static forLazy(): NgModuleFactory<TenantManagementModule> {\r\n    return new LazyModuleFactory(TenantManagementModule.forChild());\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { TenantManagementState } from '../states/tenant-management.state';\r\nimport { ABP } from '@abp/ng.core';\r\nimport { GetTenants, GetTenantById, CreateTenant, UpdateTenant, DeleteTenant } from '../actions';\r\nimport { TenantManagement } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TenantManagementStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  get() {\r\n    return this.store.selectSnapshot(TenantManagementState.get);\r\n  }\r\n\r\n  getTenantsTotalCount() {\r\n    return this.store.selectSnapshot(TenantManagementState.getTenantsTotalCount);\r\n  }\r\n\r\n  dispatchGetTenants(...args: ConstructorParameters<typeof GetTenants>) {\r\n    return this.store.dispatch(new GetTenants(...args));\r\n  }\r\n\r\n  dispatchGetTenantById(...args: ConstructorParameters<typeof GetTenantById>) {\r\n    return this.store.dispatch(new GetTenantById(...args));\r\n  }\r\n\r\n  dispatchCreateTenant(...args: ConstructorParameters<typeof CreateTenant>) {\r\n    return this.store.dispatch(new CreateTenant(...args));\r\n  }\r\n\r\n  dispatchUpdateTenant(...args: ConstructorParameters<typeof UpdateTenant>) {\r\n    return this.store.dispatch(new UpdateTenant(...args));\r\n  }\r\n\r\n  dispatchDeleteTenant(...args: ConstructorParameters<typeof DeleteTenant>) {\r\n    return this.store.dispatch(new DeleteTenant(...args));\r\n  }\r\n}\r\n"]}