!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@abp/ng.core"),require("@abp/ng.feature-management"),require("@abp/ng.theme.shared"),require("@angular/core"),require("@ng-bootstrap/ng-bootstrap"),require("@ngx-validate/core"),require("@ngxs/store"),require("@angular/forms"),require("rxjs"),require("rxjs/operators"),require("@angular/router")):"function"==typeof define&&define.amd?define("@abp/ng.tenant-management",["exports","@abp/ng.core","@abp/ng.feature-management","@abp/ng.theme.shared","@angular/core","@ng-bootstrap/ng-bootstrap","@ngx-validate/core","@ngxs/store","@angular/forms","rxjs","rxjs/operators","@angular/router"],t):t(((e="undefined"!=typeof globalThis?globalThis:e||self).abp=e.abp||{},e.abp.ng=e.abp.ng||{},e.abp.ng["tenant-management"]={}),e.i1,e.ng_featureManagement,e.ng_theme_shared,e.ng.core,e.ngBootstrap,e.core,e.i1$1,e.ng.forms,e.rxjs,e.rxjs.operators,e.ng.router)}(this,(function(e,t,n,a,r,o,i,s,l,p,d,c){"use strict";
/*! *****************************************************************************
    Copyright (c) Microsoft Corporation.

    Permission to use, copy, modify, and/or distribute this software for any
    purpose with or without fee is hereby granted.

    THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
    REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
    AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
    INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
    LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
    OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
    PERFORMANCE OF THIS SOFTWARE.
    ***************************************************************************** */function u(e,t,n,a){var r,o=arguments.length,i=o<3?t:null===a?a=Object.getOwnPropertyDescriptor(t,n):a;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)i=Reflect.decorate(e,t,n,a);else for(var s=e.length-1;s>=0;s--)(r=e[s])&&(i=(o<3?r(i):o>3?r(t,n,i):r(t,n))||i);return o>3&&i&&Object.defineProperty(t,n,i),i}function m(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)}function g(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var a,r,o=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(a=o.next()).done;)i.push(a.value)}catch(e){r={error:e}}finally{try{a&&!a.done&&(n=o.return)&&n.call(o)}finally{if(r)throw r.error}}return i}function b(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(g(arguments[t]));return e}var f=function(e){this.payload=e};f.type="[TenantManagement] Get Tenant";var h=function(e){this.payload=e};h.type="[TenantManagement] Get Tenant By Id";var y=function(e){this.payload=e};y.type="[TenantManagement] Create Tenant";var v=function(e){this.payload=e};v.type="[TenantManagement] Update Tenant";var T=function(e){this.payload=e};T.type="[TenantManagement] Delete Tenant",e.ɵc=function(){function e(e){this.rest=e,this.apiName="AbpTenantManagement"}return e.prototype.getTenant=function(e){void 0===e&&(e={});var t={method:"GET",url:"/api/multi-tenancy/tenants",params:e};return this.rest.request(t,{apiName:this.apiName})},e.prototype.getTenantById=function(e){var t={method:"GET",url:"/api/multi-tenancy/tenants/"+e};return this.rest.request(t,{apiName:this.apiName})},e.prototype.deleteTenant=function(e){var t={method:"DELETE",url:"/api/multi-tenancy/tenants/"+e};return this.rest.request(t,{apiName:this.apiName})},e.prototype.createTenant=function(e){var t={method:"POST",url:"/api/multi-tenancy/tenants",body:e};return this.rest.request(t,{apiName:this.apiName})},e.prototype.updateTenant=function(e){var t="/api/multi-tenancy/tenants/"+e.id;delete e.id;var n={method:"PUT",url:t,body:e};return this.rest.request(n,{apiName:this.apiName})},e.prototype.getDefaultConnectionString=function(e){var t={method:"GET",responseType:"text",url:"/api/multi-tenancy/tenants/"+e+"/default-connection-string"};return this.rest.request(t,{apiName:this.apiName})},e.prototype.updateDefaultConnectionString=function(e){var t={method:"PUT",url:"/api/multi-tenancy/tenants/"+e.id+"/default-connection-string",params:{defaultConnectionString:e.defaultConnectionString}};return this.rest.request(t,{apiName:this.apiName})},e.prototype.deleteDefaultConnectionString=function(e){var t={method:"DELETE",url:"/api/multi-tenancy/tenants/"+e+"/default-connection-string"};return this.rest.request(t,{apiName:this.apiName})},e}(),e.ɵc.ɵprov=r.ɵɵdefineInjectable({factory:function(){return new e.ɵc(r.ɵɵinject(t.RestService))},token:e.ɵc,providedIn:"root"}),e.ɵc=u([r.Injectable({providedIn:"root"}),m("design:paramtypes",[t.RestService])],e.ɵc),e.ɵb=function(){function e(e){this.tenantManagementService=e}return e.get=function(e){return e.result.items||[]},e.getTenantsTotalCount=function(e){return e.result.totalCount},e.prototype.get=function(e,t){var n=e.patchState,a=t.payload;return this.tenantManagementService.getTenant(a).pipe(d.tap((function(e){return n({result:e})})))},e.prototype.getById=function(e,t){var n=e.patchState,a=t.payload;return this.tenantManagementService.getTenantById(a).pipe(d.tap((function(e){return n({selectedItem:e})})))},e.prototype.delete=function(e,t){var n=t.payload;return this.tenantManagementService.deleteTenant(n)},e.prototype.add=function(e,t){var n=t.payload;return this.tenantManagementService.createTenant(n)},e.prototype.update=function(e,t){var n=e.getState,a=t.payload;return this.tenantManagementService.updateTenant(Object.assign(Object.assign({},n().selectedItem),a))},e}(),u([s.Action(f),m("design:type",Function),m("design:paramtypes",[Object,f]),m("design:returntype",void 0)],e.ɵb.prototype,"get",null),u([s.Action(h),m("design:type",Function),m("design:paramtypes",[Object,h]),m("design:returntype",void 0)],e.ɵb.prototype,"getById",null),u([s.Action(T),m("design:type",Function),m("design:paramtypes",[Object,T]),m("design:returntype",void 0)],e.ɵb.prototype,"delete",null),u([s.Action(y),m("design:type",Function),m("design:paramtypes",[Object,y]),m("design:returntype",void 0)],e.ɵb.prototype,"add",null),u([s.Action(v),m("design:type",Function),m("design:paramtypes",[Object,v]),m("design:returntype",void 0)],e.ɵb.prototype,"update",null),u([s.Selector(),m("design:type",Function),m("design:paramtypes",[Object]),m("design:returntype",Array)],e.ɵb,"get",null),u([s.Selector(),m("design:type",Function),m("design:paramtypes",[Object]),m("design:returntype",Number)],e.ɵb,"getTenantsTotalCount",null),e.ɵb=u([s.State({name:"TenantManagementState",defaults:{result:{},selectedItem:{}}}),r.Injectable(),m("design:paramtypes",[e.ɵc])],e.ɵb),e.ɵa=function(){function e(e,t,n,a,r){var o=this;this.list=e,this.confirmationService=t,this.tenantService=n,this.fb=a,this.store=r,this.selectedModalContent={},this.visibleFeatures=!1,this.modalBusy=!1,this.featureManagementKey="FeatureManagement.FeatureManagementComponent",this.onVisibleFeaturesChange=function(e){o.visibleFeatures=e}}return Object.defineProperty(e.prototype,"hasSelectedTenant",{get:function(){return Boolean(this.selected.id)},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"useSharedDatabase",{get:function(){return this.defaultConnectionStringForm.get("useSharedDatabase").value},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"connectionString",{get:function(){return this.defaultConnectionStringForm.get("defaultConnectionString").value},enumerable:!0,configurable:!0}),Object.defineProperty(e.prototype,"isDisabledSaveButton",{get:function(){return!!this.selectedModalContent&&(!("saveConnStr"!==this.selectedModalContent.type||!this.defaultConnectionStringForm||!this.defaultConnectionStringForm.invalid)||!("saveTenant"!==this.selectedModalContent.type||!this.tenantForm||!this.tenantForm.invalid))},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){this.hookToQuery()},e.prototype.createTenantForm=function(){var e=this.fb.group({name:[this.selected.name||"",[l.Validators.required,l.Validators.maxLength(256)]],adminEmailAddress:[null,[l.Validators.required,l.Validators.maxLength(256),l.Validators.email]],adminPassword:[null,b([l.Validators.required],a.getPasswordValidators(this.store))]});this.hasSelectedTenant&&(e.removeControl("adminEmailAddress"),e.removeControl("adminPassword")),this.tenantForm=e},e.prototype.createDefaultConnectionStringForm=function(){this.defaultConnectionStringForm=this.fb.group({useSharedDatabase:this._useSharedDatabase,defaultConnectionString:[this.defaultConnectionString||""]})},e.prototype.openModal=function(e,t,n){this.selectedModalContent={title:e,template:t,type:n},this.isModalVisible=!0},e.prototype.onEditConnectionString=function(e){var t=this;this.store.dispatch(new h(e)).pipe(d.pluck("TenantManagementState","selectedItem"),d.switchMap((function(n){return t.selected=n,t.tenantService.getDefaultConnectionString(e)}))).subscribe((function(e){t._useSharedDatabase=!e,t.defaultConnectionString=e||"",t.createDefaultConnectionStringForm(),t.openModal("AbpTenantManagement::ConnectionStrings",t.connectionStringModalTemplate,"saveConnStr")}))},e.prototype.addTenant=function(){this.selected={},this.createTenantForm(),this.openModal("AbpTenantManagement::NewTenant",this.tenantModalTemplate,"saveTenant")},e.prototype.editTenant=function(e){var t=this;this.store.dispatch(new h(e)).pipe(d.pluck("TenantManagementState","selectedItem")).subscribe((function(e){t.selected=e,t.createTenantForm(),t.openModal("AbpTenantManagement::Edit",t.tenantModalTemplate,"saveTenant")}))},e.prototype.save=function(){var e=this.selectedModalContent.type;e&&("saveTenant"===e?this.saveTenant():"saveConnStr"===e&&this.saveConnectionString())},e.prototype.saveConnectionString=function(){var e=this;this.modalBusy||(this.modalBusy=!0,this.useSharedDatabase||!this.useSharedDatabase&&!this.connectionString?this.tenantService.deleteDefaultConnectionString(this.selected.id).pipe(d.take(1),d.finalize((function(){return e.modalBusy=!1}))).subscribe((function(){e.isModalVisible=!1})):this.tenantService.updateDefaultConnectionString({id:this.selected.id,defaultConnectionString:this.connectionString}).pipe(d.take(1),d.finalize((function(){return e.modalBusy=!1}))).subscribe((function(){e.isModalVisible=!1})))},e.prototype.saveTenant=function(){var e=this;this.tenantForm.valid&&!this.modalBusy&&(this.modalBusy=!0,this.store.dispatch(this.selected.id?new v(Object.assign(Object.assign(Object.assign({},this.selected),this.tenantForm.value),{id:this.selected.id})):new y(this.tenantForm.value)).pipe(d.finalize((function(){return e.modalBusy=!1}))).subscribe((function(){e.isModalVisible=!1,e.list.get()})))},e.prototype.delete=function(e,t){var n=this;this.confirmationService.warn("AbpTenantManagement::TenantDeletionConfirmationMessage","AbpTenantManagement::AreYouSure",{messageLocalizationParams:[t]}).subscribe((function(t){t===a.Confirmation.Status.confirm&&n.store.dispatch(new T(e)).subscribe((function(){return n.list.get()}))}))},e.prototype.hookToQuery=function(){var e=this;this.list.hookToQuery((function(t){return e.store.dispatch(new f(t))})).subscribe()},e.prototype.onSharedDatabaseChange=function(e){e||setTimeout((function(){var e=document.getElementById("defaultConnectionString");e&&e.focus()}),0)},e.prototype.openFeaturesModal=function(e){var t=this;this.providerKey=e,setTimeout((function(){t.visibleFeatures=!0}),0)},e.prototype.sort=function(e){var t=e.sorts[0],n=t.prop,a=t.dir;this.list.sortKey=n,this.list.sortOrder=a},e}(),u([s.Select(e.ɵb.get),m("design:type",p.Observable)],e.ɵa.prototype,"data$",void 0),u([s.Select(e.ɵb.getTenantsTotalCount),m("design:type",p.Observable)],e.ɵa.prototype,"totalCount$",void 0),u([r.ViewChild("tenantModalTemplate"),m("design:type",r.TemplateRef)],e.ɵa.prototype,"tenantModalTemplate",void 0),u([r.ViewChild("connectionStringModalTemplate"),m("design:type",r.TemplateRef)],e.ɵa.prototype,"connectionStringModalTemplate",void 0),e.ɵa=u([r.Component({selector:"abp-tenants",template:'<div id="wrapper" class="card">\r\n  <div class="card-header">\r\n    <div class="row">\r\n      <div class="col col-md-6">\r\n        <h5 class="card-title">{{ \'AbpTenantManagement::Tenants\' | abpLocalization }}</h5>\r\n      </div>\r\n      <div class="text-right col col-md-6">\r\n        <button\r\n          *abpPermission="\'AbpTenantManagement.Tenants.Create\'"\r\n          id="create-tenants"\r\n          class="btn btn-primary"\r\n          type="button"\r\n          (click)="addTenant()"\r\n        >\r\n          <i class="fa fa-plus mr-1"></i>\r\n          <span>{{ \'AbpTenantManagement::NewTenant\' | abpLocalization }}</span>\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class="card-body">\r\n    <div id="data-tables-table-filter" class="data-tables-filter">\r\n      <div class="input-group">\r\n        <input\r\n          type="search"\r\n          class="form-control"\r\n          [placeholder]="\'AbpUi::PagerSearch\' | abpLocalization"\r\n          [(ngModel)]="list.filter"\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    <ngx-datatable [rows]="data$ | async" [count]="totalCount$ | async" [list]="list" default>\r\n      <ngx-datatable-column\r\n        [name]="\'AbpTenantManagement::Actions\' | abpLocalization"\r\n        [maxWidth]="150"\r\n        [sortable]="false"\r\n      >\r\n        <ng-template let-row="row" ngx-datatable-cell-template>\r\n          <div ngbDropdown container="body" class="d-inline-block">\r\n            <button\r\n              class="btn btn-primary btn-sm dropdown-toggle"\r\n              data-toggle="dropdown"\r\n              aria-haspopup="true"\r\n              ngbDropdownToggle\r\n            >\r\n              <i class="fa fa-cog mr-1"></i>{{ \'AbpTenantManagement::Actions\' | abpLocalization }}\r\n            </button>\r\n            <div ngbDropdownMenu>\r\n              <button\r\n                *abpPermission="\'AbpTenantManagement.Tenants.Update\'"\r\n                ngbDropdownItem\r\n                (click)="editTenant(row.id)"\r\n              >\r\n                {{ \'AbpTenantManagement::Edit\' | abpLocalization }}\r\n              </button>\r\n              <button\r\n                *abpPermission="\'AbpTenantManagement.Tenants.ManageConnectionStrings\'"\r\n                ngbDropdownItem\r\n                (click)="onEditConnectionString(row.id)"\r\n              >\r\n                {{ \'AbpTenantManagement::Permission:ManageConnectionStrings\' | abpLocalization }}\r\n              </button>\r\n              <button\r\n                *abpPermission="\'AbpTenantManagement.Tenants.ManageFeatures\'"\r\n                ngbDropdownItem\r\n                (click)="openFeaturesModal(row.id)"\r\n              >\r\n                {{ \'AbpTenantManagement::Permission:ManageFeatures\' | abpLocalization }}\r\n              </button>\r\n              <button\r\n                *abpPermission="\'AbpTenantManagement.Tenants.Delete\'"\r\n                ngbDropdownItem\r\n                (click)="delete(row.id, row.name)"\r\n              >\r\n                {{ \'AbpTenantManagement::Delete\' | abpLocalization }}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </ng-template>\r\n      </ngx-datatable-column>\r\n      <ngx-datatable-column\r\n        [name]="\'AbpTenantManagement::TenantName\' | abpLocalization"\r\n        prop="name"\r\n      ></ngx-datatable-column>\r\n    </ngx-datatable>\r\n  </div>\r\n</div>\r\n\r\n<abp-modal size="md" [(visible)]="isModalVisible" [busy]="modalBusy">\r\n  <ng-template #abpHeader>\r\n    <h3>{{ selectedModalContent.title | abpLocalization }}</h3>\r\n  </ng-template>\r\n\r\n  <ng-template #abpBody>\r\n    <ng-container *ngTemplateOutlet="selectedModalContent?.template"></ng-container>\r\n  </ng-template>\r\n\r\n  <ng-template #abpFooter>\r\n    <button #abpClose type="button" class="btn btn-secondary">\r\n      {{ \'AbpTenantManagement::Cancel\' | abpLocalization }}\r\n    </button>\r\n    <abp-button iconClass="fa fa-check" (click)="save()" [disabled]="isDisabledSaveButton">{{\r\n      \'AbpTenantManagement::Save\' | abpLocalization\r\n    }}</abp-button>\r\n  </ng-template>\r\n</abp-modal>\r\n\r\n<ng-template #tenantModalTemplate>\r\n  <form [formGroup]="tenantForm" (ngSubmit)="save()" validateOnSubmit>\r\n    <div class="mt-2">\r\n      <div class="form-group">\r\n        <label for="name">{{ \'AbpTenantManagement::TenantName\' | abpLocalization }}</label>\r\n        <input type="text" id="name" class="form-control" formControlName="name" autofocus />\r\n      </div>\r\n      <div class="form-group" *ngIf="tenantForm.controls.adminEmailAddress">\r\n        <label for="name">{{\r\n          \'AbpTenantManagement::DisplayName:AdminEmailAddress\' | abpLocalization\r\n        }}</label>\r\n        <input\r\n          autocomplete="email"\r\n          type="email"\r\n          id="admin-email-address"\r\n          class="form-control"\r\n          formControlName="adminEmailAddress"\r\n        />\r\n      </div>\r\n      <div class="form-group" *ngIf="tenantForm.controls.adminPassword">\r\n        <label for="name">{{\r\n          \'AbpTenantManagement::DisplayName:AdminPassword\' | abpLocalization\r\n        }}</label>\r\n        <input\r\n          autocomplete="new-password"\r\n          type="password"\r\n          id="admin-password"\r\n          class="form-control"\r\n          formControlName="adminPassword"\r\n        />\r\n      </div>\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n\r\n<ng-template #connectionStringModalTemplate>\r\n  <form [formGroup]="defaultConnectionStringForm" (ngSubmit)="save()" validateOnSubmit>\r\n    <div class="form-group">\r\n      <div class="custom-checkbox custom-control mb-2">\r\n        <input\r\n          id="useSharedDatabase"\r\n          type="checkbox"\r\n          class="custom-control-input"\r\n          formControlName="useSharedDatabase"\r\n          autofocus\r\n          (ngModelChange)="onSharedDatabaseChange($event)"\r\n        />\r\n        <label for="useSharedDatabase" class="custom-control-label">{{\r\n          \'AbpTenantManagement::DisplayName:UseSharedDatabase\' | abpLocalization\r\n        }}</label>\r\n      </div>\r\n    </div>\r\n    <div class="form-group" *ngIf="!useSharedDatabase">\r\n      <label for="defaultConnectionString">{{\r\n        \'AbpTenantManagement::DisplayName:DefaultConnectionString\' | abpLocalization\r\n      }}</label>\r\n      <input\r\n        type="text"\r\n        id="defaultConnectionString"\r\n        class="form-control"\r\n        formControlName="defaultConnectionString"\r\n      />\r\n    </div>\r\n  </form>\r\n</ng-template>\r\n\r\n<abp-feature-management\r\n  *abpReplaceableTemplate="{\r\n    inputs: {\r\n      providerName: { value: \'T\' },\r\n      providerKey: { value: providerKey },\r\n      visible: { value: visibleFeatures, twoWay: true }\r\n    },\r\n    outputs: { visibleChange: onVisibleFeaturesChange },\r\n    componentKey: featureManagementKey\r\n  }"\r\n  [(visible)]="visibleFeatures"\r\n  providerName="T"\r\n  [providerKey]="providerKey"\r\n>\r\n</abp-feature-management>\r\n',providers:[t.ListService]}),m("design:paramtypes",[t.ListService,a.ConfirmationService,e.ɵc,l.FormBuilder,s.Store])],e.ɵa);var S,M={requiredPolicy:"AbpTenantManagement.Tenants",replaceableComponent:{key:"TenantManagement.TenantsComponent",defaultComponent:e.ɵa}},C=[{path:"",redirectTo:"tenants",pathMatch:"full"},{path:"",component:t.DynamicLayoutComponent,canActivate:[t.AuthGuard,t.PermissionGuard],children:[{path:"tenants",component:t.ReplaceableRouteContainerComponent,data:M}]}];e.ɵj=function(){},e.ɵj=u([r.NgModule({imports:[c.RouterModule.forChild(C)],exports:[c.RouterModule]})],e.ɵj),e.TenantManagementModule=S=function(){function e(){}return e.forChild=function(){return{ngModule:S,providers:[]}},e.forLazy=function(){return new t.LazyModuleFactory(S.forChild())},e}(),e.TenantManagementModule=S=u([r.NgModule({declarations:[e.ɵa],exports:[e.ɵa],imports:[e.ɵj,s.NgxsModule.forFeature([e.ɵb]),i.NgxValidateCoreModule,t.CoreModule,a.ThemeSharedModule,o.NgbDropdownModule,n.FeatureManagementModule]})],e.TenantManagementModule),e.TenantManagementStateService=function(){function t(e){this.store=e}return t.prototype.get=function(){return this.store.selectSnapshot(e.ɵb.get)},t.prototype.getTenantsTotalCount=function(){return this.store.selectSnapshot(e.ɵb.getTenantsTotalCount)},t.prototype.dispatchGetTenants=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(f.bind.apply(f,b([void 0],e))))},t.prototype.dispatchGetTenantById=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(h.bind.apply(h,b([void 0],e))))},t.prototype.dispatchCreateTenant=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(y.bind.apply(y,b([void 0],e))))},t.prototype.dispatchUpdateTenant=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(v.bind.apply(v,b([void 0],e))))},t.prototype.dispatchDeleteTenant=function(){for(var e=[],t=0;t<arguments.length;t++)e[t]=arguments[t];return this.store.dispatch(new(T.bind.apply(T,b([void 0],e))))},t}(),e.TenantManagementStateService.ɵprov=r.ɵɵdefineInjectable({factory:function(){return new e.TenantManagementStateService(r.ɵɵinject(s.Store))},token:e.TenantManagementStateService,providedIn:"root"}),e.TenantManagementStateService=u([r.Injectable({providedIn:"root"}),m("design:paramtypes",[s.Store])],e.TenantManagementStateService),e.CreateTenant=y,e.DeleteTenant=T,e.GetTenantById=h,e.GetTenants=f,e.TenantManagementService=e.ɵc,e.TenantManagementState=e.ɵb,e.TenantsComponent=e.ɵa,e.UpdateTenant=v,e.ɵd=f,e.ɵe=h,e.ɵf=y,e.ɵg=v,e.ɵh=T,Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=abp-ng.tenant-management.umd.min.js.map