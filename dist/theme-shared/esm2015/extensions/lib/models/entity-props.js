import { of } from 'rxjs';
import { Prop, PropList, Props, PropsFactory, } from './props';
export class EntityPropList extends PropList {
}
export class EntityProps extends Props {
    constructor() {
        super(...arguments);
        this._ctor = EntityPropList;
    }
}
export class EntityPropsFactory extends PropsFactory {
    constructor() {
        super(...arguments);
        this._ctor = EntityProps;
    }
}
export class EntityProp extends Prop {
    constructor(options) {
        super(options.type, options.name, options.displayName, options.permission, options.visible, options.isExtra);
        this.columnWidth = options.columnWidth;
        this.sortable = options.sortable || false;
        this.valueResolver = options.valueResolver || (data => of(data.record[this.name]));
        this.action = options.action || (_ => { });
    }
    static create(options) {
        return new EntityProp(options);
    }
    static createMany(arrayOfOptions) {
        return arrayOfOptions.map(EntityProp.create);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW50aXR5LXByb3BzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvdGhlbWUtc2hhcmVkL2V4dGVuc2lvbnMvc3JjL2xpYi9tb2RlbHMvZW50aXR5LXByb3BzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLE9BQU8sRUFBYyxFQUFFLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFFdEMsT0FBTyxFQUNMLElBQUksRUFJSixRQUFRLEVBQ1IsS0FBSyxFQUNMLFlBQVksR0FDYixNQUFNLFNBQVMsQ0FBQztBQUdqQixNQUFNLE9BQU8sY0FBd0IsU0FBUSxRQUEwQjtDQUFHO0FBRTFFLE1BQU0sT0FBTyxXQUFxQixTQUFRLEtBQXdCO0lBQWxFOztRQUNZLFVBQUssR0FBNEIsY0FBYyxDQUFDO0lBQzVELENBQUM7Q0FBQTtBQUVELE1BQU0sT0FBTyxrQkFBNEIsU0FBUSxZQUE0QjtJQUE3RTs7UUFDWSxVQUFLLEdBQXlCLFdBQVcsQ0FBQztJQUN0RCxDQUFDO0NBQUE7QUFFRCxNQUFNLE9BQU8sVUFBb0IsU0FBUSxJQUFPO0lBTTlDLFlBQVksT0FBNkI7UUFDdkMsS0FBSyxDQUNILE9BQU8sQ0FBQyxJQUFJLEVBQ1osT0FBTyxDQUFDLElBQUksRUFDWixPQUFPLENBQUMsV0FBVyxFQUNuQixPQUFPLENBQUMsVUFBVSxFQUNsQixPQUFPLENBQUMsT0FBTyxFQUNmLE9BQU8sQ0FBQyxPQUFPLENBQ2hCLENBQUM7UUFFRixJQUFJLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxXQUFXLENBQUM7UUFDdkMsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUMsUUFBUSxJQUFJLEtBQUssQ0FBQztRQUMxQyxJQUFJLENBQUMsYUFBYSxHQUFHLE9BQU8sQ0FBQyxhQUFhLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDbkYsSUFBSSxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUMsTUFBTSxJQUFJLENBQUMsQ0FBQyxDQUFDLEVBQUUsR0FBRSxDQUFDLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQsTUFBTSxDQUFDLE1BQU0sQ0FBVSxPQUE2QjtRQUNsRCxPQUFPLElBQUksVUFBVSxDQUFJLE9BQU8sQ0FBQyxDQUFDO0lBQ3BDLENBQUM7SUFFRCxNQUFNLENBQUMsVUFBVSxDQUFVLGNBQXNDO1FBQy9ELE9BQU8sY0FBYyxDQUFDLEdBQUcsQ0FBQyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDL0MsQ0FBQztDQUNGIiwic291cmNlc0NvbnRlbnQiOlsiLyogdHNsaW50OmRpc2FibGU6dmFyaWFibGUtbmFtZSAqL1xyXG5pbXBvcnQgeyBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE9ic2VydmFibGUsIG9mIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IE8gfSBmcm9tICd0cy10b29sYmVsdCc7XHJcbmltcG9ydCB7XHJcbiAgUHJvcCxcclxuICBQcm9wQ2FsbGJhY2ssXHJcbiAgUHJvcENvbnRyaWJ1dG9yQ2FsbGJhY2ssXHJcbiAgUHJvcENvbnRyaWJ1dG9yQ2FsbGJhY2tzLFxyXG4gIFByb3BMaXN0LFxyXG4gIFByb3BzLFxyXG4gIFByb3BzRmFjdG9yeSxcclxufSBmcm9tICcuL3Byb3BzJztcclxuaW1wb3J0IHsgQWN0aW9uQ2FsbGJhY2sgfSBmcm9tICcuL2FjdGlvbnMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIEVudGl0eVByb3BMaXN0PFIgPSBhbnk+IGV4dGVuZHMgUHJvcExpc3Q8UiwgRW50aXR5UHJvcDxSPj4ge31cclxuXHJcbmV4cG9ydCBjbGFzcyBFbnRpdHlQcm9wczxSID0gYW55PiBleHRlbmRzIFByb3BzPEVudGl0eVByb3BMaXN0PFI+PiB7XHJcbiAgcHJvdGVjdGVkIF9jdG9yOiBUeXBlPEVudGl0eVByb3BMaXN0PFI+PiA9IEVudGl0eVByb3BMaXN0O1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRW50aXR5UHJvcHNGYWN0b3J5PFIgPSBhbnk+IGV4dGVuZHMgUHJvcHNGYWN0b3J5PEVudGl0eVByb3BzPFI+PiB7XHJcbiAgcHJvdGVjdGVkIF9jdG9yOiBUeXBlPEVudGl0eVByb3BzPFI+PiA9IEVudGl0eVByb3BzO1xyXG59XHJcblxyXG5leHBvcnQgY2xhc3MgRW50aXR5UHJvcDxSID0gYW55PiBleHRlbmRzIFByb3A8Uj4ge1xyXG4gIHJlYWRvbmx5IGNvbHVtbldpZHRoOiBudW1iZXIgfCB1bmRlZmluZWQ7XHJcbiAgcmVhZG9ubHkgc29ydGFibGU6IGJvb2xlYW47XHJcbiAgcmVhZG9ubHkgdmFsdWVSZXNvbHZlcjogUHJvcENhbGxiYWNrPFIsIE9ic2VydmFibGU8YW55Pj47XHJcbiAgcmVhZG9ubHkgYWN0aW9uOiBBY3Rpb25DYWxsYmFjazxSPjtcclxuXHJcbiAgY29uc3RydWN0b3Iob3B0aW9uczogRW50aXR5UHJvcE9wdGlvbnM8Uj4pIHtcclxuICAgIHN1cGVyKFxyXG4gICAgICBvcHRpb25zLnR5cGUsXHJcbiAgICAgIG9wdGlvbnMubmFtZSxcclxuICAgICAgb3B0aW9ucy5kaXNwbGF5TmFtZSxcclxuICAgICAgb3B0aW9ucy5wZXJtaXNzaW9uLFxyXG4gICAgICBvcHRpb25zLnZpc2libGUsXHJcbiAgICAgIG9wdGlvbnMuaXNFeHRyYSxcclxuICAgICk7XHJcblxyXG4gICAgdGhpcy5jb2x1bW5XaWR0aCA9IG9wdGlvbnMuY29sdW1uV2lkdGg7XHJcbiAgICB0aGlzLnNvcnRhYmxlID0gb3B0aW9ucy5zb3J0YWJsZSB8fCBmYWxzZTtcclxuICAgIHRoaXMudmFsdWVSZXNvbHZlciA9IG9wdGlvbnMudmFsdWVSZXNvbHZlciB8fCAoZGF0YSA9PiBvZihkYXRhLnJlY29yZFt0aGlzLm5hbWVdKSk7XHJcbiAgICB0aGlzLmFjdGlvbiA9IG9wdGlvbnMuYWN0aW9uIHx8IChfID0+IHt9KTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBjcmVhdGU8UiA9IGFueT4ob3B0aW9uczogRW50aXR5UHJvcE9wdGlvbnM8Uj4pIHtcclxuICAgIHJldHVybiBuZXcgRW50aXR5UHJvcDxSPihvcHRpb25zKTtcclxuICB9XHJcblxyXG4gIHN0YXRpYyBjcmVhdGVNYW55PFIgPSBhbnk+KGFycmF5T2ZPcHRpb25zOiBFbnRpdHlQcm9wT3B0aW9uczxSPltdKSB7XHJcbiAgICByZXR1cm4gYXJyYXlPZk9wdGlvbnMubWFwKEVudGl0eVByb3AuY3JlYXRlKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCB0eXBlIEVudGl0eVByb3BPcHRpb25zPFIgPSBhbnk+ID0gTy5PcHRpb25hbDxcclxuICBPLldyaXRhYmxlPEVudGl0eVByb3A8Uj4+LFxyXG4gIHwgJ3Blcm1pc3Npb24nXHJcbiAgfCAndmlzaWJsZSdcclxuICB8ICdkaXNwbGF5TmFtZSdcclxuICB8ICdpc0V4dHJhJ1xyXG4gIHwgJ2NvbHVtbldpZHRoJ1xyXG4gIHwgJ3NvcnRhYmxlJ1xyXG4gIHwgJ3ZhbHVlUmVzb2x2ZXInXHJcbiAgfCAnYWN0aW9uJ1xyXG4+O1xyXG5cclxuZXhwb3J0IHR5cGUgRW50aXR5UHJvcERlZmF1bHRzPFIgPSBhbnk+ID0gUmVjb3JkPHN0cmluZywgRW50aXR5UHJvcDxSPltdPjtcclxuZXhwb3J0IHR5cGUgRW50aXR5UHJvcENvbnRyaWJ1dG9yQ2FsbGJhY2s8UiA9IGFueT4gPSBQcm9wQ29udHJpYnV0b3JDYWxsYmFjazxFbnRpdHlQcm9wTGlzdDxSPj47XHJcbmV4cG9ydCB0eXBlIEVudGl0eVByb3BDb250cmlidXRvckNhbGxiYWNrczxSID0gYW55PiA9IFByb3BDb250cmlidXRvckNhbGxiYWNrczxFbnRpdHlQcm9wTGlzdDxSPj47XHJcbiJdfQ==