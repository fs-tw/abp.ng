import { __decorate } from "tslib";
import { Injectable } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { NavItem } from '../models/nav-item';
import * as i0 from "@angular/core";
let NavItemsService = class NavItemsService {
    constructor() {
        this._items$ = new BehaviorSubject([]);
    }
    get items() {
        return this._items$.value;
    }
    get items$() {
        return this._items$.asObservable();
    }
    addItems(newItems) {
        const items = [...this.items];
        newItems.forEach(item => items.push(new NavItem(item)));
        items.sort(sortItems);
        this._items$.next(items);
    }
    removeItem(id) {
        const index = this.items.findIndex(item => item.id === id);
        if (index < 0)
            return;
        const items = [...this.items.slice(0, index), ...this.items.slice(index + 1)];
        this._items$.next(items);
    }
    patchItem(id, item) {
        const index = this.items.findIndex(i => i.id === id);
        if (index < 0)
            return;
        const items = [...this.items];
        items[index] = new NavItem(Object.assign(Object.assign({}, items[index]), item));
        items.sort(sortItems);
        this._items$.next(items);
    }
};
NavItemsService.ɵprov = i0.ɵɵdefineInjectable({ factory: function NavItemsService_Factory() { return new NavItemsService(); }, token: NavItemsService, providedIn: "root" });
NavItemsService = __decorate([
    Injectable({ providedIn: 'root' })
], NavItemsService);
export { NavItemsService };
function sortItems(a, b) {
    if (!a.order)
        return 1;
    if (!b.order)
        return -1;
    return a.order - b.order;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmF2LWl0ZW1zLnNlcnZpY2UuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy90aGVtZS1zaGFyZWQvc3JjL2xpYi9zZXJ2aWNlcy9uYXYtaXRlbXMuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsZUFBZSxFQUFjLE1BQU0sTUFBTSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQzs7QUFHN0MsSUFBYSxlQUFlLEdBQTVCLE1BQWEsZUFBZTtJQUE1QjtRQUNVLFlBQU8sR0FBRyxJQUFJLGVBQWUsQ0FBWSxFQUFFLENBQUMsQ0FBQztLQW9DdEQ7SUFsQ0MsSUFBSSxLQUFLO1FBQ1AsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQztJQUM1QixDQUFDO0lBRUQsSUFBSSxNQUFNO1FBQ1IsT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDLFlBQVksRUFBRSxDQUFDO0lBQ3JDLENBQUM7SUFFRCxRQUFRLENBQUMsUUFBbUI7UUFDMUIsTUFBTSxLQUFLLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUM5QixRQUFRLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxJQUFJLE9BQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEQsS0FBSyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztRQUN0QixJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMzQixDQUFDO0lBRUQsVUFBVSxDQUFDLEVBQW1CO1FBQzVCLE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUUzRCxJQUFJLEtBQUssR0FBRyxDQUFDO1lBQUUsT0FBTztRQUV0QixNQUFNLEtBQUssR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxFQUFFLEtBQUssQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDOUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQztJQUVELFNBQVMsQ0FBQyxFQUFtQixFQUFFLElBQWtDO1FBQy9ELE1BQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUVyRCxJQUFJLEtBQUssR0FBRyxDQUFDO1lBQUUsT0FBTztRQUV0QixNQUFNLEtBQUssR0FBRyxDQUFDLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzlCLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxJQUFJLE9BQU8saUNBQU0sS0FBSyxDQUFDLEtBQUssQ0FBQyxHQUFLLElBQUksRUFBRyxDQUFDO1FBQ3pELEtBQUssQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7UUFDdEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDM0IsQ0FBQztDQUNGLENBQUE7O0FBckNZLGVBQWU7SUFEM0IsVUFBVSxDQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxDQUFDO0dBQ3RCLGVBQWUsQ0FxQzNCO1NBckNZLGVBQWU7QUF1QzVCLFNBQVMsU0FBUyxDQUFDLENBQVUsRUFBRSxDQUFVO0lBQ3ZDLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSztRQUFFLE9BQU8sQ0FBQyxDQUFDO0lBQ3ZCLElBQUksQ0FBQyxDQUFDLENBQUMsS0FBSztRQUFFLE9BQU8sQ0FBQyxDQUFDLENBQUM7SUFFeEIsT0FBTyxDQUFDLENBQUMsS0FBSyxHQUFHLENBQUMsQ0FBQyxLQUFLLENBQUM7QUFDM0IsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQmVoYXZpb3JTdWJqZWN0LCBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IE5hdkl0ZW0gfSBmcm9tICcuLi9tb2RlbHMvbmF2LWl0ZW0nO1xyXG5cclxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcclxuZXhwb3J0IGNsYXNzIE5hdkl0ZW1zU2VydmljZSB7XHJcbiAgcHJpdmF0ZSBfaXRlbXMkID0gbmV3IEJlaGF2aW9yU3ViamVjdDxOYXZJdGVtW10+KFtdKTtcclxuXHJcbiAgZ2V0IGl0ZW1zKCk6IE5hdkl0ZW1bXSB7XHJcbiAgICByZXR1cm4gdGhpcy5faXRlbXMkLnZhbHVlO1xyXG4gIH1cclxuXHJcbiAgZ2V0IGl0ZW1zJCgpOiBPYnNlcnZhYmxlPE5hdkl0ZW1bXT4ge1xyXG4gICAgcmV0dXJuIHRoaXMuX2l0ZW1zJC5hc09ic2VydmFibGUoKTtcclxuICB9XHJcblxyXG4gIGFkZEl0ZW1zKG5ld0l0ZW1zOiBOYXZJdGVtW10pIHtcclxuICAgIGNvbnN0IGl0ZW1zID0gWy4uLnRoaXMuaXRlbXNdO1xyXG4gICAgbmV3SXRlbXMuZm9yRWFjaChpdGVtID0+IGl0ZW1zLnB1c2gobmV3IE5hdkl0ZW0oaXRlbSkpKTtcclxuICAgIGl0ZW1zLnNvcnQoc29ydEl0ZW1zKTtcclxuICAgIHRoaXMuX2l0ZW1zJC5uZXh0KGl0ZW1zKTtcclxuICB9XHJcblxyXG4gIHJlbW92ZUl0ZW0oaWQ6IHN0cmluZyB8IG51bWJlcikge1xyXG4gICAgY29uc3QgaW5kZXggPSB0aGlzLml0ZW1zLmZpbmRJbmRleChpdGVtID0+IGl0ZW0uaWQgPT09IGlkKTtcclxuXHJcbiAgICBpZiAoaW5kZXggPCAwKSByZXR1cm47XHJcblxyXG4gICAgY29uc3QgaXRlbXMgPSBbLi4udGhpcy5pdGVtcy5zbGljZSgwLCBpbmRleCksIC4uLnRoaXMuaXRlbXMuc2xpY2UoaW5kZXggKyAxKV07XHJcbiAgICB0aGlzLl9pdGVtcyQubmV4dChpdGVtcyk7XHJcbiAgfVxyXG5cclxuICBwYXRjaEl0ZW0oaWQ6IHN0cmluZyB8IG51bWJlciwgaXRlbTogUGFydGlhbDxPbWl0PE5hdkl0ZW0sICdpZCc+Pikge1xyXG4gICAgY29uc3QgaW5kZXggPSB0aGlzLml0ZW1zLmZpbmRJbmRleChpID0+IGkuaWQgPT09IGlkKTtcclxuXHJcbiAgICBpZiAoaW5kZXggPCAwKSByZXR1cm47XHJcblxyXG4gICAgY29uc3QgaXRlbXMgPSBbLi4udGhpcy5pdGVtc107XHJcbiAgICBpdGVtc1tpbmRleF0gPSBuZXcgTmF2SXRlbSh7IC4uLml0ZW1zW2luZGV4XSwgLi4uaXRlbSB9KTtcclxuICAgIGl0ZW1zLnNvcnQoc29ydEl0ZW1zKTtcclxuICAgIHRoaXMuX2l0ZW1zJC5uZXh0KGl0ZW1zKTtcclxuICB9XHJcbn1cclxuXHJcbmZ1bmN0aW9uIHNvcnRJdGVtcyhhOiBOYXZJdGVtLCBiOiBOYXZJdGVtKSB7XHJcbiAgaWYgKCFhLm9yZGVyKSByZXR1cm4gMTtcclxuICBpZiAoIWIub3JkZXIpIHJldHVybiAtMTtcclxuXHJcbiAgcmV0dXJuIGEub3JkZXIgLSBiLm9yZGVyO1xyXG59XHJcbiJdfQ==