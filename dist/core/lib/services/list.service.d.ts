import { OnDestroy } from '@angular/core';
import { Observable } from 'rxjs';
import { ABP } from '../models/common';
import { PagedResultDto } from '../models/dtos';
export declare class ListService<QueryParamsType = ABP.PageQueryParams> implements OnDestroy {
    private delay;
    private _filter;
    set filter(value: string);
    get filter(): string;
    private _maxResultCount;
    set maxResultCount(value: number);
    get maxResultCount(): number;
    private _page;
    set page(value: number);
    get page(): number;
    private _sortKey;
    set sortKey(value: string);
    get sortKey(): string;
    private _sortOrder;
    set sortOrder(value: string);
    get sortOrder(): string;
    private _query$;
    get query$(): Observable<QueryParamsType>;
    private _isLoading$;
    private destroy$;
    get isLoading$(): Observable<boolean>;
    get: () => void;
    constructor(delay: number);
    hookToQuery<T extends any>(streamCreatorCallback: QueryStreamCreatorCallback<T, QueryParamsType>): Observable<PagedResultDto<T>>;
    ngOnDestroy(): void;
}
export declare type QueryStreamCreatorCallback<T, QueryParamsType = ABP.PageQueryParams> = (query: QueryParamsType) => Observable<PagedResultDto<T>>;
