{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","../../../packages/core/src/lib/abstracts/ng-model.component.ts","../../../packages/core/src/lib/actions/config.actions.ts","../../../packages/core/src/lib/actions/loader.actions.ts","../../../packages/core/src/lib/actions/profile.actions.ts","../../../packages/core/src/lib/actions/replaceable-components.actions.ts","../../../packages/core/src/lib/actions/rest.actions.ts","../../../packages/core/src/lib/actions/session.actions.ts","../../../packages/core/src/lib/utils/string-utils.ts","../../../packages/core/src/lib/utils/common-utils.ts","../../../packages/core/src/lib/states/session.state.ts","../../../packages/core/src/lib/states/config.state.ts","../../../packages/core/src/lib/constants/different-locales.ts","../../../packages/core/src/lib/tokens/options.token.ts","../../../packages/core/src/lib/services/rest.service.ts","../../../packages/core/src/lib/strategies/auth-flow.strategy.ts","../../../packages/core/src/lib/utils/object-utils.ts","../../../packages/core/src/lib/utils/environment-utils.ts","../../../packages/core/src/lib/services/auth.service.ts","../../../packages/core/src/lib/services/multi-tenancy.service.ts","../../../packages/core/src/lib/utils/multi-tenancy-utils.ts","../../../packages/core/src/lib/utils/initial-utils.ts","../../../packages/core/src/lib/utils/localization-utils.ts","../../../packages/core/src/lib/utils/array-utils.ts","../../../packages/core/src/lib/services/localization.service.ts","../../../packages/core/src/lib/utils/tree-utils.ts","../../../packages/core/src/lib/services/routes.service.ts","../../../packages/core/src/lib/utils/route-utils.ts","../../../packages/core/src/lib/services/subscription.service.ts","../../../packages/core/src/lib/states/replaceable-components.state.ts","../../../packages/core/src/lib/components/dynamic-layout.component.ts","../../../packages/core/src/lib/components/replaceable-route-container.component.ts","../../../packages/core/src/lib/components/router-outlet.component.ts","../../../packages/core/src/lib/directives/autofocus.directive.ts","../../../packages/core/src/lib/directives/debounce.directive.ts","../../../packages/core/src/lib/directives/ellipsis.directive.ts","../../../packages/core/src/lib/directives/for.directive.ts","../../../packages/core/src/lib/directives/form-submit.directive.ts","../../../packages/core/src/lib/directives/init.directive.ts","../../../packages/core/src/lib/services/profile.service.ts","../../../packages/core/src/lib/states/profile.state.ts","../../../packages/core/src/lib/directives/permission.directive.ts","../../../packages/core/src/lib/directives/replaceable-template.directive.ts","../../../packages/core/src/lib/directives/stop-propagation.directive.ts","../../../packages/core/src/lib/directives/visibility.directive.ts","../../../packages/core/src/lib/handlers/oauth-configuration.handler.ts","../../../packages/core/src/lib/handlers/routes.handler.ts","../../../packages/core/src/lib/interceptors/api.interceptor.ts","../../../packages/core/src/lib/pipes/localization.pipe.ts","../../../packages/core/src/lib/localization.module.ts","../../../packages/core/src/lib/pipes/sort.pipe.ts","../../../packages/core/src/lib/plugins/config.plugin.ts","../../../packages/core/src/lib/providers/locale.provider.ts","../../../packages/core/src/lib/core.module.ts","../../../packages/core/src/lib/utils/date-extensions.ts","../../../packages/core/src/lib/guards/auth.guard.ts","../../../packages/core/src/lib/guards/permission.guard.ts","../../../packages/core/src/lib/models/dtos.ts","../../../packages/core/src/lib/models/find-tenant-result-dto.ts","../../../packages/core/src/lib/services/application-configuration.service.ts","../../../packages/core/src/lib/services/config-state.service.ts","../../../packages/core/src/lib/services/content-projection.service.ts","../../../packages/core/src/lib/utils/factory-utils.ts","../../../packages/core/src/lib/utils/number-utils.ts","../../../packages/core/src/lib/utils/generator-utils.ts","../../../packages/core/src/lib/strategies/cross-origin.strategy.ts","../../../packages/core/src/lib/strategies/dom.strategy.ts","../../../packages/core/src/lib/utils/lazy-load-utils.ts","../../../packages/core/src/lib/utils/rxjs-utils.ts","../../../packages/core/src/lib/services/dom-insertion.service.ts","../../../packages/core/src/lib/services/lazy-load.service.ts","../../../packages/core/src/lib/tokens/list.token.ts","../../../packages/core/src/lib/services/list.service.ts","../../../packages/core/src/lib/services/profile-state.service.ts","../../../packages/core/src/lib/services/session-state.service.ts","../../../packages/core/src/lib/services/track-by.service.ts","../../../packages/core/src/lib/strategies/container.strategy.ts","../../../packages/core/src/lib/strategies/content-security.strategy.ts","../../../packages/core/src/lib/strategies/content.strategy.ts","../../../packages/core/src/lib/strategies/context.strategy.ts","../../../packages/core/src/lib/strategies/loading.strategy.ts","../../../packages/core/src/lib/strategies/projection.strategy.ts","../../../packages/core/src/lib/validators/age.validator.ts","../../../packages/core/src/lib/validators/credit-card.validator.ts","../../../packages/core/src/lib/validators/range.validator.ts","../../../packages/core/src/lib/validators/required.validator.ts","../../../packages/core/src/lib/validators/string-length.validator.ts","../../../packages/core/src/lib/validators/url.validator.ts","../../../packages/core/src/lib/validators/index.ts","../../../packages/core/src/lib/utils/date-utils.ts","../../../packages/core/src/lib/utils/form-utils.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__rest","s","e","t","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","__decorate","decorators","target","key","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__metadata","metadataKey","metadataValue","metadata","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","n","v","op","TypeError","pop","push","__read","o","m","ar","error","__spread","concat","AbstractNgModelComponent","injector","valueFn","valueLimitFn","cdRef","get","ChangeDetectorRef","_value","defaultValue","readonly","notifyValueChange","onChange","writeValue","_this","setTimeout","markForCheck","registerOnChange","fn","registerOnTouched","onTouched","setDisabledState","isDisabled","disabled","Input","Component","template","Injector","GetAppConfiguration","type","environment","SetEnvironment","payload","StartLoader","StopLoader","GetProfile","UpdateProfile","ChangePassword","reload","AddReplaceableComponent","RestOccurError","dispatchAppConfiguration","SetLanguage","SetTenant","operation","ModifyOpenedTabCount","createTokenParser","format","string","tokens","regex","replace","token","match","slice","reduce","acc","filter","Boolean","interpolate","text","params","digit","_a","noop","isUndefinedOrEmptyString","undefined","isNullOrUndefined","obj","exists","isObject","isArray","isObjectAndNotArray","SetRemember","SessionState","SessionState_1","oAuthService","store","actions","pipe","ofActionSuccessful","take","subscribe","sessionDetail","selectSnapshot","fiveMinutesBefore","Date","valueOf","lastExitTime","openedTabCount","hasValidAccessToken","remember","logOut","dispatch","fromEvent","window","event","getLanguage","_b","language","getTenant","tenant","getSessionDetail","setLanguage","_c","patchState","_d","setTenant","setRemember","getState","assign","modifyOpenedTabCount","detail","Action","Selector","State","name","defaults","Injectable","OAuthService","Store","Actions","ConfigState","ConfigState_1","http","getAll","state","getApplicationInfo","application","getOne","createSelector","getDeep","keys","split","Error","val","getApiUrl","apis","default","url","getFeature","snq","features","values","getSetting","setting","getSettings","keyword","settings","getGrantedPolicy","getPolicy","k","auth","grantedPolicies","test","some","trim","every","getLocalization","interpolateParams","_i","selector","warn","message","production","console","localization","sourceName","defaultResourceName","sourceKey","source","addData","api","tap","configuration","switchMap","defaultLang","includes","document","documentElement","setAttribute","currentCulture","cultureName","of","catchError","err","throwError","setEnvironment","HttpClient","localesMapping","ar-sa","ca-ES-valencia","de-de","es-ES","en-US","fil-Latn","ku-Arab","ky-Cyrl","mi-Latn","prs-Arab","qut-Latn","nso","quz","fr-FR","gd-Latn","ha-Latn","ig-Latn","it-it","mn-Cyrl","pt-BR","sd-Arab","sr-Cyrl-RS","sr-Latn-RS","tg-Cyrl","tk-Latn","tt-Cyrl","ug-Arab","yo-Latn","CORE_OPTIONS","InjectionToken","coreOptionsFactory","cultureNameLocaleFileMap","options","differentLocales","RestService","getApiFromStore","apiName","handleError","request","config","method","observe","skipHandleError","sendNullsAsQueryParam","providedIn","Inject","oAuthStorage","localStorage","AuthFlowStrategy","oAuthConfig","init","storage","clientId","getItem","setItem","shouldClear","shouldStorageClear","forEach","removeItem","configure","loadDiscoveryDocument","catch","AuthCodeFlowStrategy","_super_1","isInternalAuth","_super","tryLogin","getRefreshToken","refreshToken","setupAutomaticSilentRefresh","login","initCodeFlow","checkIfInternalAuth","logout","destroy","AuthPasswordFlowStrategy","Router","navigateByUrl","rest","issuer","AUTH_FLOW_STRATEGY","Code","Password","deepMerge","deepMergeRecursively","keysOfTarget","keysOfSource","Set","retVal","getRemoteEnv","remoteEnv","headers","env","local","remote","mergeStrategy","mergeEnvironments","toPromise","AuthService","setStrategy","flow","strategy","listenToSetEnvironment","username","password","from","fetchTokenUsingPasswordFlow","HttpHeaders","id","__tenant","redirectUrl","history","Navigate","initLogin","Optional","MultiTenancyService","restService","_domainTenant","isTenantBoxVisible","findTenantByName","findTenantById","tenancyPlaceholder","parseTenantFromUrl","multiTenancyService","baseUrl","tenancyName","appBaseUrl","charAt","parseTokens","location","href","getCurrentTenancyName","res","domainTenant","success","tenantId","clone","getInitialData","skipGetAppConfiguration","checkAccessToken","oAuth","localeInitializer","lang","registerLocale","locale","localeNameMap","import","module","registerLocaleData","createLocalizer","resourceName","resource","createLocalizerWithFallback","findLocalization","createLocalizationFinder","resourceNames","localized","localize","resourceCount","keyCount","j","pushValueTo","array","element","LocalizationService","ngZone","otherInstance","listenToSetLanguage","languageChange","router","shouldReuseRoute","routeReuseStrategy","navigated","run","select","instant","map","localizeSync","localizeWithFallback","localizeWithFallbackSync","SkipSelf","NgZone","BaseTreeNode","props","children","isLeaf","createTreeFromList","list","keySelector","parentKeySelector","valueMapper","createMapFromList","tree","row","parentId","node","parent","Map","set","AbstractTreeService","_flat$","BehaviorSubject","_tree$","_visible$","asObservable","createTree","items","item","filterWith","setOrMap","has","publish","flatItems","visibleItems","add","sort","hide","find","predicate","patch","identifier","index","findIndex","refresh","remove","identifiers","search","searchKeys","findRoute","routes","path","route","join","getRoutePath","parseUrl","root","PRIMARY_OUTLET","segments","AbstractNavTreeService","invisible","isGranted","a","Number","isInteger","order","subscription","requiredPolicy","hasChildren","hasInvisibleChild","child","ngOnDestroy","unsubscribe","RoutesService","SettingTabsService","SubscriptionService","Subscription","closed","addOne","source$","nextOrObserver","closeAll","closeOne","removeOne","reset","ReplaceableComponentsState","ReplaceableComponentsState_1","replaceableComponents","getComponent","component","reloadRoute","setRouteReuse","reuse","replaceableComponentsAction","DynamicLayoutComponent","localizationService","dynamicLayoutComponent","layouts","isLayoutVisible","ActivatedRoute","events","NavigationEnd","expectedLayout","snapshot","data","layout","listenToLanguageChange","providers","ReplaceableRouteContainerComponent","ngOnInit","defaultComponent","replaceableComponent","componentKey","component$","distinctUntilChanged","externalComponent","RouterOutletComponent","AutofocusDirective","elRef","delay","ngAfterViewInit","nativeElement","focus","Directive","ElementRef","InputEventDebounceDirective","el","debounce","debounceEvent","EventEmitter","input$","debounceTime","emit","Output","EllipsisDirective","enabled","width","title","innerText","detectChanges","HostBinding","AbpForContext","$implicit","count","RecordView","record","view","ForDirective","tempRef","vcRef","differs","compareBy","compare","trackBy","iterateOverAppliedOperations","changes","rw","forEachOperation","previousIndex","currentIndex","createEmbeddedView","move","l","context","iterateOverAttachedViews","viewRef","forEachIdentityChange","projectItems","emptyRef","clear","rootNodes","isShowEmptyRef","differ","trackByFn","diff","sortItems","orderBy","ngOnChanges","compareFn","filterBy","filterVal","orderDir","reverse","TemplateRef","ViewContainerRef","IterableDiffers","FormSubmitDirective","formGroupDirective","host","ngSubmit","executedNgSubmit","markAsDirty","keyup$","dispatchEvent","Event","bubbles","cancelable","form","setDirty","controls","group","updateValueAndValidity","Self","FormGroupDirective","InitDirective","ProfileService","update","changePassword","ProfileState","profileService","getProfile","profile","updateProfile","PermissionDirective","renderer","templateRef","check","condition","removeChild","parentElement","currentValue","Renderer2","ReplaceableTemplateDirective","cfRes","providedData","inputs","outputs","defaultComponentSubscriptions","initialized","initTemplate","ref","resetDefaultComponent","defaultComponentRef","setDefaultComponentInputs","setProvidedData","customInjector","provide","useValue","createComponent","resolveComponentFactory","this_1","defineProperties","enumerable","configurable","twoWay","newValue","ComponentFactoryResolver","StopPropagationDirective","stopPropEvent","stopPropagation","VisibilityDirective","completed$","Subject","observer","focusedElement","MutationObserver","mutations","mutation","childNodes","HTMLElement","removeFromDOM","childList","disconnect","complete","OAuthConfigurationHandler","RoutesHandler","addRoutes","flatRoutes","parentName","current","ApiInterceptor","intercept","getAccessToken","handle","setHeaders","finalize","LocalizationPipe","transform","Pipe","MockLocalizationPipe","LocalizationModule","NgModule","exports","declarations","SortPipe","sortOrder","sortKey","toLowerCase","numberArray","stringArray","sorted","NGXS_CONFIG_PLUGIN_OPTIONS","ConfigPlugin","matches","actionMatcher","InitState","UpdateState","setValue","LocaleId","toString","currentLang","String","LocaleProvider","LOCALE_ID","useClass","deps","storageFactory","ngxsStoragePluginSerialize","toLocalISOString","timezoneOffset","getTimezoneOffset","getTime","toISOString","BaseCoreModule","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","RouterModule","imports","OAuthModule","entryComponents","RootCoreModule","NgxsModule","forFeature","NgxsRouterPluginModule","forRoot","NgxsStoragePluginModule","TestCoreModule","CoreModule","forTest","baseHref","ngModule","APP_BASE_HREF","NGXS_PLUGINS","multi","useFactory","HTTP_INTERCEPTORS","APP_INITIALIZER","OAuthStorage","NGXS_STORAGE_PLUGIN_OPTIONS","serialize","JSON","stringify","deserialize","parse","beforeSerialize","afterDeserialize","ngxsStoragePluginOptions","AuthGuard","oauthService","canActivate","navigate","PermissionGuard","routeFound","access","status","initialValues","PagedResultDto","ListResultDto","maxResultCount","PagedResultRequestDto","LimitedResultRequestDto","PagedAndSortedResultRequestDto","CreationAuditedEntityDto","EntityDto","CreationAuditedEntityWithUserDto","AuditedEntityDto","AuditedEntityWithUserDto","FullAuditedEntityDto","FullAuditedEntityWithUserDto","ExtensibleEntityDto","ExtensibleObject","ExtensibleCreationAuditedEntityDto","ExtensibleAuditedEntityDto","ExtensibleAuditedEntityWithUserDto","ExtensibleCreationAuditedEntityWithUserDto","ExtensibleFullAuditedEntityDto","ExtensibleFullAuditedEntityWithUserDto","ApplicationConfigurationService","getConfiguration","ConfigStateService","args","dispatchGetAppConfiguration","dispatchSetEnvironment","bind","ContentProjectionService","projectContent","projectionStrategy","injectContent","LazyModuleFactory","moduleWithProviders","parentInjector","Compiler","compileModuleSync","moduleType","NgModuleFactory","isNumber","generateHash","hashed","charCodeAt","CrossOriginStrategy","crossorigin","integrity","setCrossOrigin","CROSS_ORIGIN_STRATEGY","Anonymous","UseCredentials","DomStrategy","position","head","insertElement","insertAdjacentElement","DOM_STRATEGY","AfterElement","AppendToBody","AppendToHead","BeforeElement","PrependToHead","fromLazyLoad","domStrategy","crossOriginStrategy","Observable","onload","clearCallbacks","parentNode","createErrorHandler","onerror","onabort","onemptied","onstalled","onsuspend","isFunction","DomInsertionService","inserted","insertContent","contentStrategy","hash","content","removeContent","textContent","delete","LazyLoadService","loaded","load","retryTimes","retryDelay","CustomEvent","createStream","retryWhen","error$","shareReplay","bufferSize","refCount","LIST_QUERY_DEBOUNCE_TIME","ListService","_filter","_maxResultCount","_page","_sortKey","_sortOrder","_query$","ReplaySubject","_isLoading$","destroy$","skipCount","sorting","hookToQuery","streamCreatorCallback","query$","query","takeUntil","ProfileStateService","dispatchGetProfile","dispatchUpdateProfile","dispatchChangePassword","SessionStateService","dispatchSetLanguage","dispatchSetTenant","dispatchSetRemember","dispatchModifyOpenedTabCount","trackByDeep","TrackByService","by","byDeep","ContainerStrategy","containerRef","prepare","ClearContainerStrategy","getIndex","InsertIntoContainerStrategy","Math","min","max","CONTAINER_STRATEGY","Clear","Append","Prepend","Insert","nonce","LooseContentSecurityStrategy","applyCSP","ContentSecurityStrategy","NoContentSecurityStrategy","CONTENT_SECURITY_STRATEGY","Loose","None","ContentStrategy","contentSecurityStrategy","createElement","StyleContentStrategy","ScriptContentStrategy","CONTENT_STRATEGY","AppendScriptToBody","AppendScriptToHead","AppendStyleToHead","PrependStyleToHead","ContextStrategy","setContext","componentRef","NoContextStrategy","ComponentContextStrategy","instance","changeDetectorRef","TemplateContextStrategy","CONTEXT_STRATEGY","Template","LoadingStrategy","ScriptLoadingStrategy","src","StyleLoadingStrategy","rel","LOADING_STRATEGY","AppendAnonymousScriptToBody","AppendAnonymousScriptToHead","AppendAnonymousStyleToHead","PrependAnonymousScriptToHead","PrependAnonymousStyleToHead","ComponentProjectionStrategy","containerStrategy","contextStrategy","factory","ProjectionStrategy","RootComponentProjectionStrategy","appRef","ApplicationRef","attachView","hostView","TemplateProjectionStrategy","embeddedViewRef","PROJECTION_STRATEGY","AppendComponentToBody","AppendComponentToContainer","AppendTemplateToContainer","PrependComponentToContainer","PrependTemplateToContainer","ProjectComponentToContainer","ProjectTemplateToContainer","validateMinAge","age","control","pristine","minAge","date","setFullYear","getFullYear","setHours","validateCreditCard","checksum","multiplier","isValidCreditCard","creditCard","validateRange","maximum","Infinity","minimum","range","getMinError","getMaxError","validateRequired","allowEmptyStrings","isValidRequired","required","validateStringLength","maximumLength","minimumLength","requiredLength","minlength","getMinLengthError","maxlength","getMaxLengthError","validateUrl","isValidUrl","Validators","email","AbpValidators","emailAddress","ɵ0","stringLength","defaultKey","lowers","uppers","numbers","specials","getRandom","chrSet","floor","random","configStateService","shortDatePattern","dateTimeFormat","shortTimePattern","_enum","member","componentInstance","destroyMethodName","originalDestroy","uuid"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { ControlValueAccessor } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, Injector, Input } from '@angular/core';\r\n\r\n// Not an abstract class on purpose. Do not change!\r\n// tslint:disable-next-line: use-component-selector\r\n@Component({ template: '' })\r\nexport class AbstractNgModelComponent<T = any, U = T> implements ControlValueAccessor {\r\n  protected _value: T;\r\n  protected cdRef: ChangeDetectorRef;\r\n  onChange: (value: T) => {};\r\n  onTouched: () => {};\r\n\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Input()\r\n  readonly: boolean;\r\n\r\n  @Input()\r\n  valueFn: (value: U, previousValue?: T) => T = value => (value as any) as T;\r\n\r\n  @Input()\r\n  valueLimitFn: (value: T, previousValue?: T) => any = value => false;\r\n\r\n  @Input()\r\n  set value(value: T) {\r\n    value = this.valueFn((value as any) as U, this._value);\r\n\r\n    if (this.valueLimitFn(value, this._value) !== false || this.readonly) return;\r\n\r\n    this._value = value;\r\n    this.notifyValueChange();\r\n  }\r\n\r\n  get value(): T {\r\n    return this._value || this.defaultValue;\r\n  }\r\n\r\n  get defaultValue(): T {\r\n    return this._value;\r\n  }\r\n\r\n  constructor(public injector: Injector) {\r\n    // tslint:disable-next-line: deprecation\r\n    this.cdRef = injector.get(ChangeDetectorRef);\r\n  }\r\n\r\n  notifyValueChange(): void {\r\n    if (this.onChange) {\r\n      this.onChange(this.value);\r\n    }\r\n  }\r\n\r\n  writeValue(value: T): void {\r\n    this._value = this.valueLimitFn(value, this._value) || value;\r\n    setTimeout(() => this.cdRef.markForCheck(), 0);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","import { Config } from '../models/config';\r\n\r\nexport class GetAppConfiguration {\r\n  static readonly type = '[Config] Get App Configuration';\r\n}\r\n\r\nexport class SetEnvironment {\r\n  static readonly type = '[Config] Set Environment';\r\n  constructor(public environment: Config.Environment) {}\r\n}\r\n","import { HttpRequest } from '@angular/common/http';\r\n\r\nexport class StartLoader {\r\n  static readonly type = '[Loader] Start';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n\r\nexport class StopLoader {\r\n  static readonly type = '[Loader] Stop';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n","import { Profile } from '../models';\r\n\r\nexport class GetProfile {\r\n  static readonly type = '[Profile] Get';\r\n}\r\n\r\nexport class UpdateProfile {\r\n  static readonly type = '[Profile] Update';\r\n  constructor(public payload: Profile.Response) {}\r\n}\r\n\r\nexport class ChangePassword {\r\n  static readonly type = '[Profile] Change Password';\r\n  constructor(public payload: Profile.ChangePasswordRequest) {}\r\n}\r\n","import { ReplaceableComponents } from '../models/replaceable-components';\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2522#issue-358333183\r\n */\r\nexport class AddReplaceableComponent {\r\n  static readonly type = '[ReplaceableComponents] Add';\r\n  constructor(\r\n    public payload: ReplaceableComponents.ReplaceableComponent,\r\n    public reload?: boolean,\r\n  ) {}\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport class RestOccurError {\r\n  static readonly type = '[Rest] Error';\r\n  constructor(public payload: HttpErrorResponse | any) {}\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport class SetLanguage {\r\n  static readonly type = '[Session] Set Language';\r\n  constructor(public payload: string, public dispatchAppConfiguration?: boolean) {}\r\n}\r\nexport class SetTenant {\r\n  static readonly type = '[Session] Set Tenant';\r\n  constructor(public payload: ABP.BasicItem) {}\r\n}\r\nexport class ModifyOpenedTabCount {\r\n  static readonly type = '[Session] Modify Opened Tab Count';\r\n  constructor(public operation: 'increase' | 'decrease') {}\r\n}\r\nexport class SetRemember {\r\n  static readonly type = '[Session] Set Remember';\r\n  constructor(public payload: boolean) {}\r\n}\r\n","export function createTokenParser(format: string) {\r\n  return (string: string) => {\r\n    const tokens: string[] = [];\r\n    const regex = format.replace(/\\./g, '\\\\.').replace(/\\{\\s?([0-9a-zA-Z]+)\\s?\\}/g, (_, token) => {\r\n      tokens.push(token);\r\n      return '(.+)';\r\n    });\r\n\r\n    const matches = (string.match(regex) || []).slice(1);\r\n\r\n    return matches.reduce((acc, v, i) => {\r\n      const key = tokens[i];\r\n      acc[key] = [...(acc[key] || []), v].filter(Boolean);\r\n      return acc;\r\n    }, {} as Record<string, string[]>);\r\n  };\r\n}\r\n\r\nexport function interpolate(text: string, params: string[]) {\r\n  return text\r\n    .replace(/(['\"]?\\{\\s*(\\d+)\\s*\\}['\"]?)/g, (_, match, digit) => params[digit] ?? match)\r\n    .replace(/\\s+/g, ' ');\r\n}\r\n","export function noop() {\r\n  // tslint:disable-next-line: only-arrow-functions\r\n  const fn = function() {};\r\n  return fn;\r\n}\r\n\r\nexport function isUndefinedOrEmptyString(value: unknown): boolean {\r\n  return value === undefined || value === '';\r\n}\r\n\r\nexport function isNullOrUndefined(obj) {\r\n  return obj === null || obj === undefined;\r\n}\r\n\r\nexport function exists(obj) {\r\n  return !isNullOrUndefined(obj);\r\n}\r\n\r\nexport function isObject(obj) {\r\n  return obj instanceof Object;\r\n}\r\n\r\nexport function isArray(obj) {\r\n  return Array.isArray(obj);\r\n}\r\n\r\nexport function isObjectAndNotArray(obj) {\r\n  return isObject(obj) && !isArray(obj);\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Action,\r\n  Actions,\r\n  ofActionSuccessful,\r\n  Selector,\r\n  State,\r\n  StateContext,\r\n  Store,\r\n} from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { fromEvent } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport {\r\n  ModifyOpenedTabCount,\r\n  SetLanguage,\r\n  SetRemember,\r\n  SetTenant,\r\n} from '../actions/session.actions';\r\nimport { ABP, Session } from '../models';\r\n\r\n@State<Session.State>({\r\n  name: 'SessionState',\r\n  defaults: { sessionDetail: { openedTabCount: 0 } } as Session.State,\r\n})\r\n@Injectable()\r\nexport class SessionState {\r\n  @Selector()\r\n  static getLanguage({ language }: Session.State): string {\r\n    return language;\r\n  }\r\n\r\n  @Selector()\r\n  static getTenant({ tenant }: Session.State): ABP.BasicItem {\r\n    return tenant;\r\n  }\r\n\r\n  @Selector()\r\n  static getSessionDetail({ sessionDetail }: Session.State): Session.SessionDetail {\r\n    return sessionDetail;\r\n  }\r\n\r\n  constructor(private oAuthService: OAuthService, private store: Store, private actions: Actions) {\r\n    actions\r\n      .pipe(ofActionSuccessful(GetAppConfiguration))\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        const sessionDetail = this.store.selectSnapshot(SessionState)?.sessionDetail || {};\r\n\r\n        const fiveMinutesBefore = new Date().valueOf() - 5 * 60 * 1000;\r\n\r\n        if (\r\n          sessionDetail.lastExitTime &&\r\n          sessionDetail.openedTabCount === 0 &&\r\n          this.oAuthService.hasValidAccessToken() &&\r\n          sessionDetail.remember === false &&\r\n          sessionDetail.lastExitTime < fiveMinutesBefore\r\n        ) {\r\n          this.oAuthService.logOut();\r\n        }\r\n\r\n        this.store.dispatch(new ModifyOpenedTabCount('increase'));\r\n\r\n        fromEvent(window, 'unload').subscribe(event => {\r\n          this.store.dispatch(new ModifyOpenedTabCount('decrease'));\r\n        });\r\n      });\r\n  }\r\n\r\n  @Action(SetLanguage)\r\n  setLanguage(\r\n    { patchState, dispatch }: StateContext<Session.State>,\r\n    { payload, dispatchAppConfiguration = true }: SetLanguage,\r\n  ) {\r\n    patchState({\r\n      language: payload,\r\n    });\r\n\r\n    if (dispatchAppConfiguration) return dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  @Action(SetTenant)\r\n  setTenant({ patchState }: StateContext<Session.State>, { payload }: SetTenant) {\r\n    patchState({\r\n      tenant: payload,\r\n    });\r\n  }\r\n\r\n  @Action(SetRemember)\r\n  setRemember(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { payload: remember }: SetRemember,\r\n  ) {\r\n    const { sessionDetail } = getState();\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        ...sessionDetail,\r\n        remember,\r\n      },\r\n    });\r\n  }\r\n\r\n  @Action(ModifyOpenedTabCount)\r\n  modifyOpenedTabCount(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { operation }: ModifyOpenedTabCount,\r\n  ) {\r\n    // tslint:disable-next-line: prefer-const\r\n    let { openedTabCount, lastExitTime, ...detail } =\r\n      getState().sessionDetail || ({ openedTabCount: 0 } as Session.SessionDetail);\r\n\r\n    if (operation === 'increase') {\r\n      openedTabCount++;\r\n    } else if (operation === 'decrease') {\r\n      openedTabCount--;\r\n      lastExitTime = new Date().valueOf();\r\n    }\r\n\r\n    if (!openedTabCount || openedTabCount < 0) {\r\n      openedTabCount = 0;\r\n    }\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        openedTabCount,\r\n        lastExitTime,\r\n        ...detail,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Action, createSelector, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { of, throwError } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { GetAppConfiguration, SetEnvironment } from '../actions/config.actions';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { SetLanguage } from '../actions/session.actions';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { Config } from '../models/config';\r\nimport { interpolate } from '../utils/string-utils';\r\nimport { SessionState } from './session.state';\r\n\r\n@State<Config.State>({\r\n  name: 'ConfigState',\r\n  defaults: {} as Config.State,\r\n})\r\n@Injectable()\r\nexport class ConfigState {\r\n  @Selector()\r\n  static getAll(state: Config.State) {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static getApplicationInfo(state: Config.State): Config.Application {\r\n    return state.environment.application || ({} as Config.Application);\r\n  }\r\n\r\n  static getOne(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return state[key];\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getDeep(keys: string[] | string) {\r\n    if (typeof keys === 'string') {\r\n      keys = keys.split('.');\r\n    }\r\n\r\n    if (!Array.isArray(keys)) {\r\n      throw new Error('The argument must be a dot string or an string array.');\r\n    }\r\n\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return (keys as string[]).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getApiUrl(key?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): string => {\r\n      return (state.environment.apis[key || 'default'] || state.environment.apis.default).url;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getFeature(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return snq(() => state.features.values[key]);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSetting(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return snq(() => state.setting.values[key]);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSettings(keyword?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const settings = snq(() => state.setting.values, {});\r\n\r\n      if (!keyword) return settings;\r\n\r\n      const keysFound = Object.keys(settings).filter(key => key.indexOf(keyword) > -1);\r\n\r\n      return keysFound.reduce((acc, key) => {\r\n        acc[key] = settings[key];\r\n        return acc;\r\n      }, {});\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getGrantedPolicy(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): boolean => {\r\n      if (!key) return true;\r\n      const getPolicy = (k: string) => snq(() => state.auth.grantedPolicies[k], false);\r\n\r\n      const orRegexp = /\\|\\|/g;\r\n      const andRegexp = /&&/g;\r\n\r\n      // TODO: Allow combination of ANDs & ORs\r\n      if (orRegexp.test(key)) {\r\n        const keys = key.split('||').filter(Boolean);\r\n\r\n        if (keys.length < 2) return false;\r\n\r\n        return keys.some(k => getPolicy(k.trim()));\r\n      } else if (andRegexp.test(key)) {\r\n        const keys = key.split('&&').filter(Boolean);\r\n\r\n        if (keys.length < 2) return false;\r\n\r\n        return keys.every(k => getPolicy(k.trim()));\r\n      }\r\n\r\n      return getPolicy(key);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getLocalization(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ) {\r\n    if (!key) key = '';\r\n    let defaultValue: string;\r\n\r\n    if (typeof key !== 'string') {\r\n      defaultValue = key.defaultValue;\r\n      key = key.key;\r\n    }\r\n\r\n    const keys = key.split('::') as string[];\r\n    const selector = createSelector([ConfigState], (state: Config.State): string => {\r\n      const warn = (message: string) => {\r\n        if (!state.environment.production) console.warn(message);\r\n      };\r\n\r\n      if (keys.length < 2) {\r\n        warn('The localization source separator (::) not found.');\r\n        return defaultValue || (key as string);\r\n      }\r\n      if (!state.localization) return defaultValue || keys[1];\r\n\r\n      const sourceName =\r\n        keys[0] ||\r\n        snq(() => state.environment.localization.defaultResourceName) ||\r\n        state.localization.defaultResourceName;\r\n      const sourceKey = keys[1];\r\n\r\n      if (sourceName === '_') {\r\n        return defaultValue || sourceKey;\r\n      }\r\n\r\n      if (!sourceName) {\r\n        warn(\r\n          'Localization source name is not specified and the defaultResourceName was not defined!',\r\n        );\r\n\r\n        return defaultValue || sourceKey;\r\n      }\r\n\r\n      const source = state.localization.values[sourceName];\r\n      if (!source) {\r\n        warn('Could not find localization source: ' + sourceName);\r\n        return defaultValue || sourceKey;\r\n      }\r\n\r\n      let localization = source[sourceKey];\r\n      if (typeof localization === 'undefined') {\r\n        return defaultValue || sourceKey;\r\n      }\r\n\r\n      // [TODO]: next line should be removed in v3.2, breaking change!!!\r\n      interpolateParams = interpolateParams.filter(params => params != null);\r\n      if (localization) localization = interpolate(localization, interpolateParams);\r\n\r\n      if (typeof localization !== 'string') localization = '';\r\n\r\n      return localization || defaultValue || (key as string);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  constructor(private http: HttpClient, private store: Store) {}\r\n\r\n  @Action(GetAppConfiguration)\r\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\r\n    const apiName = 'default';\r\n    const api = this.store.selectSnapshot(ConfigState.getApiUrl(apiName));\r\n    return this.http\r\n      .get<ApplicationConfiguration.Response>(`${api}/api/abp/application-configuration`)\r\n      .pipe(\r\n        tap(configuration =>\r\n          patchState({\r\n            ...configuration,\r\n          }),\r\n        ),\r\n        switchMap(configuration => {\r\n          let defaultLang: string =\r\n            configuration.setting.values['Abp.Localization.DefaultLanguage'];\r\n\r\n          if (defaultLang.includes(';')) {\r\n            defaultLang = defaultLang.split(';')[0];\r\n          }\r\n\r\n          document.documentElement.setAttribute(\r\n            'lang',\r\n            configuration.localization.currentCulture.cultureName,\r\n          );\r\n          return this.store.selectSnapshot(SessionState.getLanguage)\r\n            ? of(null)\r\n            : dispatch(new SetLanguage(defaultLang, false));\r\n        }),\r\n        catchError((err: HttpErrorResponse) => {\r\n          dispatch(new RestOccurError(err));\r\n          return throwError(err);\r\n        }),\r\n      );\r\n  }\r\n\r\n  @Action(SetEnvironment)\r\n  setEnvironment({ patchState }: StateContext<Config.State>, { environment }: SetEnvironment) {\r\n    return patchState({ environment });\r\n  }\r\n}\r\n","// Different locales from .NET\r\n// Key is .NET locale, value is Angular locale\r\n\r\nexport default {\r\n  'ar-sa': 'ar-SA',\r\n  'ca-ES-valencia': 'ca-ES-VALENCIA',\r\n  'de-de': 'de',\r\n  'es-ES': 'es',\r\n  'en-US': 'en',\r\n  'fil-Latn': 'en',\r\n  'ku-Arab': 'en',\r\n  'ky-Cyrl': 'en',\r\n  'mi-Latn': 'en',\r\n  'prs-Arab': 'en',\r\n  'qut-Latn': 'en',\r\n  nso: 'en',\r\n  quz: 'en',\r\n  'fr-FR': 'fr',\r\n  'gd-Latn': 'gd',\r\n  'ha-Latn': 'ha',\r\n  'ig-Latn': 'ig',\r\n  'it-it': 'it',\r\n  'mn-Cyrl': 'mn',\r\n  'pt-BR': 'pt',\r\n  'sd-Arab': 'pa-Arab',\r\n  'sr-Cyrl-RS': 'sr-Cyrl',\r\n  'sr-Latn-RS': 'sr-Latn',\r\n  'tg-Cyrl': 'tg',\r\n  'tk-Latn': 'tk',\r\n  'tt-Cyrl': 'tt',\r\n  'ug-Arab': 'ug',\r\n  'yo-Latn': 'yo',\r\n};\r\n","import { InjectionToken } from '@angular/core';\r\nimport differentLocales from '../constants/different-locales';\r\nimport { ABP } from '../models/common';\r\n\r\nexport const CORE_OPTIONS = new InjectionToken<ABP.Root>('CORE_OPTIONS');\r\n\r\nexport function coreOptionsFactory({ cultureNameLocaleFileMap = {}, ...options }: ABP.Root) {\r\n  return {\r\n    ...options,\r\n    cultureNameLocaleFileMap: { ...differentLocales, ...cultureNameLocaleFileMap },\r\n  } as ABP.Root;\r\n}\r\n","import { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { Rest } from '../models/rest';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { isUndefinedOrEmptyString } from '../utils/common-utils';\r\nimport { ABP } from '../models/common';\r\nimport { CORE_OPTIONS } from '../tokens/options.token';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RestService {\r\n  constructor(\r\n    @Inject(CORE_OPTIONS) private options: ABP.Root,\r\n    private http: HttpClient,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  private getApiFromStore(apiName: string): string {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(apiName));\r\n  }\r\n\r\n  handleError(err: any): Observable<any> {\r\n    this.store.dispatch(new RestOccurError(err));\r\n    return throwError(err);\r\n  }\r\n\r\n  // TODO: Deprecate service or improve interface in v3.0\r\n  request<T, R>(\r\n    request: HttpRequest<T> | Rest.Request<T>,\r\n    config?: Rest.Config,\r\n    api?: string,\r\n  ): Observable<R> {\r\n    config = config || ({} as Rest.Config);\r\n    api = api || this.getApiFromStore(config.apiName);\r\n    const { method, params, ...options } = request;\r\n    const { observe = Rest.Observe.Body, skipHandleError } = config;\r\n\r\n    return this.http\r\n      .request<R>(method, api + request.url, {\r\n        observe,\r\n        ...(params && {\r\n          params: Object.keys(params).reduce((acc, key) => {\r\n            const value = params[key];\r\n\r\n            if (isUndefinedOrEmptyString(value)) return acc;\r\n            if (value === null && !this.options.sendNullsAsQueryParam) return acc;\r\n\r\n            acc[key] = value;\r\n            return acc;\r\n          }, {}),\r\n        }),\r\n        ...options,\r\n      } as any)\r\n      .pipe(catchError(err => (skipHandleError ? throwError(err) : this.handleError(err))));\r\n  }\r\n}\r\n","import { Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthConfig, OAuthService, OAuthStorage } from 'angular-oauth2-oidc';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { RestService } from '../services/rest.service';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\nexport const oAuthStorage = localStorage;\r\n\r\nexport abstract class AuthFlowStrategy {\r\n  abstract readonly isInternalAuth: boolean;\r\n\r\n  protected store: Store;\r\n  protected oAuthService: OAuthService;\r\n  protected oAuthConfig: AuthConfig;\r\n  abstract checkIfInternalAuth(): boolean;\r\n  abstract login(): void;\r\n  abstract logout(): Observable<any>;\r\n  abstract destroy(): void;\r\n\r\n  private catchError = err => this.store.dispatch(new RestOccurError(err));\r\n\r\n  constructor(protected injector: Injector) {\r\n    this.store = injector.get(Store);\r\n    this.oAuthService = injector.get(OAuthService);\r\n    this.oAuthConfig = this.store.selectSnapshot(ConfigState.getDeep('environment.oAuthConfig'));\r\n  }\r\n\r\n  async init(): Promise<any> {\r\n    const shouldClear = shouldStorageClear(\r\n      this.store.selectSnapshot(ConfigState.getDeep('environment.oAuthConfig.clientId')),\r\n      oAuthStorage,\r\n    );\r\n    if (shouldClear) clearOAuthStorage(oAuthStorage);\r\n\r\n    this.oAuthService.configure(this.oAuthConfig);\r\n    return this.oAuthService.loadDiscoveryDocument().catch(this.catchError);\r\n  }\r\n}\r\n\r\nexport class AuthCodeFlowStrategy extends AuthFlowStrategy {\r\n  readonly isInternalAuth = false;\r\n\r\n  async init() {\r\n    return super\r\n      .init()\r\n      .then(() => this.oAuthService.tryLogin())\r\n      .then(() => {\r\n        if (this.oAuthService.hasValidAccessToken() || !this.oAuthService.getRefreshToken()) {\r\n          return Promise.resolve();\r\n        }\r\n\r\n        return this.oAuthService.refreshToken() as Promise<any>;\r\n      })\r\n      .then(() => this.oAuthService.setupAutomaticSilentRefresh({}, 'access_token'));\r\n  }\r\n\r\n  login() {\r\n    this.oAuthService.initCodeFlow();\r\n  }\r\n\r\n  checkIfInternalAuth() {\r\n    this.oAuthService.initCodeFlow();\r\n    return false;\r\n  }\r\n\r\n  logout() {\r\n    this.oAuthService.logOut();\r\n    return of(null);\r\n  }\r\n\r\n  destroy() {}\r\n}\r\n\r\nexport class AuthPasswordFlowStrategy extends AuthFlowStrategy {\r\n  readonly isInternalAuth = true;\r\n\r\n  login() {\r\n    const router = this.injector.get(Router);\r\n    router.navigateByUrl('/account/login');\r\n  }\r\n\r\n  checkIfInternalAuth() {\r\n    return true;\r\n  }\r\n\r\n  logout() {\r\n    const rest = this.injector.get(RestService);\r\n\r\n    const issuer = this.store.selectSnapshot(ConfigState.getDeep('environment.oAuthConfig.issuer'));\r\n    return rest\r\n      .request(\r\n        {\r\n          method: 'GET',\r\n          url: '/api/account/logout',\r\n        },\r\n        null,\r\n        issuer,\r\n      )\r\n      .pipe(\r\n        tap(() => this.oAuthService.logOut()),\r\n        switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n      );\r\n  }\r\n\r\n  destroy() {}\r\n}\r\n\r\nexport const AUTH_FLOW_STRATEGY = {\r\n  Code(injector: Injector) {\r\n    return new AuthCodeFlowStrategy(injector);\r\n  },\r\n  Password(injector: Injector) {\r\n    return new AuthPasswordFlowStrategy(injector);\r\n  },\r\n};\r\n\r\nfunction clearOAuthStorage(storage: OAuthStorage) {\r\n  const keys = [\r\n    'access_token',\r\n    'id_token',\r\n    'refresh_token',\r\n    'nonce',\r\n    'PKCE_verifier',\r\n    'expires_at',\r\n    'id_token_claims_obj',\r\n    'id_token_expires_at',\r\n    'id_token_stored_at',\r\n    'access_token_stored_at',\r\n    'granted_scopes',\r\n    'session_state',\r\n  ];\r\n\r\n  keys.forEach(key => storage.removeItem(key));\r\n}\r\n\r\nfunction shouldStorageClear(clientId: string, storage: OAuthStorage): boolean {\r\n  const key = 'abpOAuthClientId';\r\n  if (!storage.getItem(key)) {\r\n    storage.setItem(key, clientId);\r\n    return false;\r\n  }\r\n\r\n  const shouldClear = storage.getItem(key) !== clientId;\r\n  if (shouldClear) storage.setItem(key, clientId);\r\n  return shouldClear;\r\n}\r\n","import { isObjectAndNotArray, isNullOrUndefined, exists, isArray, isObject } from './common-utils';\r\n\r\nexport function deepMerge(target, source) {\r\n  if (isObjectAndNotArray(target) && isObjectAndNotArray(source)) {\r\n    return deepMergeRecursively(target, source);\r\n  } else if (isNullOrUndefined(target) && isNullOrUndefined(source)) {\r\n    return {};\r\n  } else {\r\n    return exists(source) ? source : target;\r\n  }\r\n}\r\n\r\nfunction deepMergeRecursively(target, source) {\r\n  const shouldNotRecurse =\r\n    isNullOrUndefined(target) ||\r\n    isNullOrUndefined(source) || // at least one not defined\r\n    isArray(target) ||\r\n    isArray(source) || // at least one array\r\n    !isObject(target) ||\r\n    !isObject(source); // at least one not an object\r\n\r\n  /**\r\n   * if we will not recurse any further,\r\n   * we will prioritize source if it is a defined value.\r\n   */\r\n  if (shouldNotRecurse) {\r\n    return exists(source) ? source : target;\r\n  }\r\n\r\n  const keysOfTarget = Object.keys(target);\r\n  const keysOfSource = Object.keys(source);\r\n  const uniqueKeys = new Set(keysOfTarget.concat(keysOfSource));\r\n  return [...uniqueKeys].reduce((retVal, key) => {\r\n    retVal[key] = deepMergeRecursively(target[key], source[key]);\r\n    return retVal;\r\n  }, {});\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { catchError, switchMap } from 'rxjs/operators';\r\nimport { SetEnvironment } from '../actions/config.actions';\r\nimport { Config } from '../models/config';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { deepMerge } from './object-utils';\r\n\r\nexport function getRemoteEnv(injector: Injector, environment: Partial<Config.Environment>) {\r\n  const { remoteEnv } = environment;\r\n  const { headers = {}, method = 'GET', url } = remoteEnv || ({} as Config.RemoteEnv);\r\n  if (!url) return Promise.resolve();\r\n\r\n  const http = injector.get(HttpClient);\r\n  const store = injector.get(Store);\r\n\r\n  return http\r\n    .request<Config.Environment>(method, url, { headers })\r\n    .pipe(\r\n      catchError(err => store.dispatch(new RestOccurError(err))), // TODO: Condiser get handle function from a provider\r\n      switchMap(env => store.dispatch(mergeEnvironments(environment, env, remoteEnv))),\r\n    )\r\n    .toPromise();\r\n}\r\n\r\nfunction mergeEnvironments(\r\n  local: Partial<Config.Environment>,\r\n  remote: any,\r\n  config: Config.RemoteEnv,\r\n) {\r\n  switch (config.mergeStrategy) {\r\n    case 'deepmerge':\r\n      return new SetEnvironment(deepMerge(local, remote));\r\n    case 'overwrite':\r\n    case null:\r\n    case undefined:\r\n      return new SetEnvironment(remote);\r\n    default:\r\n      return new SetEnvironment(config.mergeStrategy(local, remote));\r\n  }\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable, Injector, Optional } from '@angular/core';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\nimport { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, Observable } from 'rxjs';\r\nimport { switchMap, take, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { GetAppConfiguration, SetEnvironment } from '../actions/config.actions';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { SessionState } from '../states/session.state';\r\nimport { AuthFlowStrategy, AUTH_FLOW_STRATEGY } from '../strategies/auth-flow.strategy';\r\nimport { RestService } from './rest.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private flow: string;\r\n  private strategy: AuthFlowStrategy;\r\n\r\n  get isInternalAuth() {\r\n    return this.strategy.isInternalAuth;\r\n  }\r\n\r\n  constructor(\r\n    private actions: Actions,\r\n    private injector: Injector,\r\n    private rest: RestService,\r\n    private oAuthService: OAuthService,\r\n    private store: Store,\r\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: any,\r\n  ) {\r\n    this.setStrategy();\r\n    this.listenToSetEnvironment();\r\n  }\r\n\r\n  private setStrategy = () => {\r\n    const flow =\r\n      this.store.selectSnapshot(ConfigState.getDeep('environment.oAuthConfig.responseType')) ||\r\n      'password';\r\n    if (this.flow === flow) return;\r\n\r\n    if (this.strategy) this.strategy.destroy();\r\n\r\n    this.flow = flow;\r\n    this.strategy =\r\n      this.flow === 'code'\r\n        ? AUTH_FLOW_STRATEGY.Code(this.injector)\r\n        : AUTH_FLOW_STRATEGY.Password(this.injector);\r\n  };\r\n\r\n  private listenToSetEnvironment() {\r\n    this.actions.pipe(ofActionSuccessful(SetEnvironment)).subscribe(this.setStrategy);\r\n  }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n\r\n    return from(\r\n      this.oAuthService.fetchTokenUsingPasswordFlow(\r\n        username,\r\n        password,\r\n        new HttpHeaders({ ...(tenant && tenant.id && { __tenant: tenant.id }) }),\r\n      ),\r\n    ).pipe(\r\n      switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n      tap(() => {\r\n        const redirectUrl =\r\n          snq(() => window.history.state.redirectUrl) || (this.options || {}).redirectUrl || '/';\r\n        this.store.dispatch(new Navigate([redirectUrl]));\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n\r\n  async init() {\r\n    return await this.strategy.init();\r\n  }\r\n\r\n  logout(): Observable<any> {\r\n    return this.strategy.logout();\r\n  }\r\n\r\n  initLogin() {\r\n    this.strategy.login();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { SetTenant } from '../actions/session.actions';\r\nimport { ABP } from '../models/common';\r\nimport { FindTenantResultDto } from '../models/find-tenant-result-dto';\r\nimport { RestService } from './rest.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MultiTenancyService {\r\n  private _domainTenant: ABP.BasicItem = null;\r\n\r\n  set domainTenant(value: ABP.BasicItem) {\r\n    this._domainTenant = value;\r\n    this.store.dispatch(new SetTenant(value));\r\n  }\r\n\r\n  get domainTenant() {\r\n    return this._domainTenant;\r\n  }\r\n\r\n  isTenantBoxVisible = true;\r\n\r\n  apiName = 'abp';\r\n\r\n  constructor(private restService: RestService, private store: Store) {}\r\n\r\n  findTenantByName(name: string, headers: ABP.Dictionary<string>): Observable<FindTenantResultDto> {\r\n    return this.restService.request(\r\n      {\r\n        url: `/api/abp/multi-tenancy/tenants/by-name/${name}`,\r\n        method: 'GET',\r\n        headers,\r\n      },\r\n      { apiName: this.apiName },\r\n    );\r\n  }\r\n\r\n  findTenantById(id: string, headers: ABP.Dictionary<string>): Observable<FindTenantResultDto> {\r\n    return this.restService.request(\r\n      { url: `/api/abp/multi-tenancy/tenants/by-id/${id}`, method: 'GET', headers },\r\n      { apiName: this.apiName },\r\n    );\r\n  }\r\n}\r\n","import { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport clone from 'just-clone';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { SetEnvironment } from '../actions';\r\nimport { Config } from '../models/config';\r\nimport { MultiTenancyService } from '../services/multi-tenancy.service';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { createTokenParser } from './string-utils';\r\n\r\nconst tenancyPlaceholder = '{0}';\r\n\r\nfunction getCurrentTenancyName(appBaseUrl: string): string {\r\n  if (appBaseUrl.charAt(appBaseUrl.length - 1) !== '/') appBaseUrl += '/';\r\n\r\n  const parseTokens = createTokenParser(appBaseUrl);\r\n  const token = tenancyPlaceholder.replace(/[}{]/g, '');\r\n  return parseTokens(window.location.href)[token]?.[0];\r\n}\r\n\r\nexport async function parseTenantFromUrl(injector: Injector) {\r\n  const store: Store = injector.get(Store);\r\n  const multiTenancyService = injector.get(MultiTenancyService);\r\n  const environment = store.selectSnapshot(ConfigState.getOne('environment')) as Config.Environment;\r\n\r\n  const { baseUrl = '' } = environment.application;\r\n  const tenancyName = getCurrentTenancyName(baseUrl);\r\n\r\n  if (tenancyName) {\r\n    multiTenancyService.isTenantBoxVisible = false;\r\n\r\n    return setEnvironment(store, tenancyName)\r\n      .pipe(\r\n        switchMap(() => multiTenancyService.findTenantByName(tenancyName, { __tenant: '' })),\r\n        tap(res => {\r\n          multiTenancyService.domainTenant = res.success\r\n            ? { id: res.tenantId, name: res.name }\r\n            : null;\r\n        }),\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction setEnvironment(store: Store, tenancyName: string) {\r\n  const environment = clone(\r\n    store.selectSnapshot(ConfigState.getOne('environment')),\r\n  ) as Config.Environment;\r\n\r\n  if (environment.application.baseUrl) {\r\n    environment.application.baseUrl = environment.application.baseUrl.replace(\r\n      tenancyPlaceholder,\r\n      tenancyName,\r\n    );\r\n  }\r\n\r\n  environment.oAuthConfig.issuer = environment.oAuthConfig.issuer.replace(\r\n    tenancyPlaceholder,\r\n    tenancyName,\r\n  );\r\n\r\n  Object.keys(environment.apis).forEach(api => {\r\n    Object.keys(environment.apis[api]).forEach(key => {\r\n      environment.apis[api][key] = environment.apis[api][key].replace(\r\n        tenancyPlaceholder,\r\n        tenancyName,\r\n      );\r\n    });\r\n  });\r\n\r\n  return store.dispatch(new SetEnvironment(environment));\r\n}\r\n","import { registerLocaleData } from '@angular/common';\r\nimport { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { tap } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { ABP } from '../models/common';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { CORE_OPTIONS } from '../tokens/options.token';\r\nimport { getRemoteEnv } from './environment-utils';\r\nimport { parseTenantFromUrl } from './multi-tenancy-utils';\r\n\r\nexport function getInitialData(injector: Injector) {\r\n  const fn = async () => {\r\n    const store: Store = injector.get(Store);\r\n    const options = injector.get(CORE_OPTIONS) as ABP.Root;\r\n\r\n    await getRemoteEnv(injector, options.environment);\r\n    await parseTenantFromUrl(injector);\r\n    await injector.get(AuthService).init();\r\n\r\n    if (options.skipGetAppConfiguration) return;\r\n\r\n    return store\r\n      .dispatch(new GetAppConfiguration())\r\n      .pipe(tap(res => checkAccessToken(store, injector)))\r\n      .toPromise();\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function checkAccessToken(store: Store, injector: Injector) {\r\n  const oAuth = injector.get(OAuthService);\r\n  if (oAuth.hasValidAccessToken() && !store.selectSnapshot(ConfigState.getDeep('currentUser.id'))) {\r\n    oAuth.logOut();\r\n  }\r\n}\r\n\r\nexport function localeInitializer(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n    const options = injector.get(CORE_OPTIONS);\r\n\r\n    const lang = store.selectSnapshot(state => state.SessionState.language) || 'en';\r\n\r\n    return new Promise((resolve, reject) => {\r\n      registerLocale(lang, options.cultureNameLocaleFileMap).then(\r\n        () => resolve('resolved'),\r\n        reject,\r\n      );\r\n    });\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function registerLocale(locale: string, localeNameMap: ABP.Dictionary<string>) {\r\n  return import(\r\n    /* webpackChunkName: \"_locale-[request]\"*/\r\n    `@angular/common/locales/${localeNameMap[locale] || locale}.js`\r\n  ).then(module => {\r\n    registerLocaleData(module.default);\r\n  });\r\n}\r\n","import { ApplicationConfiguration } from '../models/application-configuration';\r\n\r\n// This will not be necessary when only Angukar 9.1+ is supported\r\nexport function getLocaleDirection(locale: string): 'ltr' | 'rtl' {\r\n  return /^(ar(-[A-Z]{2})?|ckb(-IR)?|fa(-AF)?|he|ks|lrc(-IQ)?|mzn|pa-Arab|ps(-PK)?|sd|ug|ur(-IN)?|uz-Arab|yi)$/.test(\r\n    locale,\r\n  )\r\n    ? 'rtl'\r\n    : 'ltr';\r\n}\r\n\r\nexport function createLocalizer(localization: ApplicationConfiguration.Localization) {\r\n  return (resourceName: string, key: string, defaultValue: string) => {\r\n    if (resourceName === '_') return key;\r\n\r\n    const resource = localization.values[resourceName];\r\n\r\n    if (!resource) return defaultValue;\r\n\r\n    return resource[key] || defaultValue;\r\n  };\r\n}\r\n\r\nexport function createLocalizerWithFallback(localization: ApplicationConfiguration.Localization) {\r\n  const findLocalization = createLocalizationFinder(localization);\r\n\r\n  return (resourceNames: string[], keys: string[], defaultValue: string) => {\r\n    const { localized } = findLocalization(resourceNames, keys);\r\n    return localized || defaultValue;\r\n  };\r\n}\r\n\r\nexport function createLocalizationPipeKeyGenerator(\r\n  localization: ApplicationConfiguration.Localization,\r\n) {\r\n  const findLocalization = createLocalizationFinder(localization);\r\n\r\n  return (resourceNames: string[], keys: string[], defaultKey: string) => {\r\n    const { resourceName, key } = findLocalization(resourceNames, keys);\r\n    return !resourceName ? defaultKey : resourceName === '_' ? key : `${resourceName}::${key}`;\r\n  };\r\n}\r\n\r\nfunction createLocalizationFinder(localization: ApplicationConfiguration.Localization) {\r\n  const localize = createLocalizer(localization);\r\n\r\n  return (resourceNames: string[], keys: string[]) => {\r\n    resourceNames = resourceNames.concat(localization.defaultResourceName).filter(Boolean);\r\n\r\n    const resourceCount = resourceNames.length;\r\n    const keyCount = keys.length;\r\n\r\n    for (let i = 0; i < resourceCount; i++) {\r\n      const resourceName = resourceNames[i];\r\n\r\n      for (let j = 0; j < keyCount; j++) {\r\n        const key = keys[j];\r\n        const localized = localize(resourceName, key, null);\r\n        if (localized) return { resourceName, key, localized };\r\n      }\r\n    }\r\n\r\n    return { resourceName: undefined, key: undefined, localized: undefined };\r\n  };\r\n}\r\n","export function pushValueTo<T extends any>(array: T[]) {\r\n  return (element: T) => {\r\n    array.push(element);\r\n    return array;\r\n  };\r\n}\r\n","import { Injectable, Injector, NgZone, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { noop, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SetLanguage } from '../actions/session.actions';\r\nimport { Config } from '../models/config';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { registerLocale } from '../utils/initial-utils';\r\nimport { createLocalizer, createLocalizerWithFallback } from '../utils/localization-utils';\r\nimport { CORE_OPTIONS } from '../tokens/options.token';\r\n\r\ntype ShouldReuseRoute = (future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) => boolean;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalizationService {\r\n  /**\r\n   * Returns currently selected language\r\n   */\r\n  get currentLang(): string {\r\n    return this.store.selectSnapshot(state => state.SessionState.language);\r\n  }\r\n\r\n  get languageChange(): Observable<SetLanguage> {\r\n    return this.actions.pipe(ofActionSuccessful(SetLanguage));\r\n  }\r\n\r\n  constructor(\r\n    private actions: Actions,\r\n    private store: Store,\r\n    private injector: Injector,\r\n    private ngZone: NgZone,\r\n    @Optional()\r\n    @SkipSelf()\r\n    otherInstance: LocalizationService,\r\n  ) {\r\n    if (otherInstance) throw new Error('LocalizationService should have only one instance.');\r\n\r\n    this.listenToSetLanguage();\r\n  }\r\n\r\n  private listenToSetLanguage() {\r\n    this.languageChange.subscribe(({ payload }) => this.registerLocale(payload));\r\n  }\r\n\r\n  registerLocale(locale: string) {\r\n    const router = this.injector.get(Router);\r\n    const { cultureNameLocaleFileMap } = this.injector.get(CORE_OPTIONS);\r\n    const { shouldReuseRoute } = router.routeReuseStrategy;\r\n    router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    router.navigated = false;\r\n\r\n    return registerLocale(locale, cultureNameLocaleFileMap).then(() => {\r\n      this.ngZone.run(async () => {\r\n        await router.navigateByUrl(router.url).catch(noop);\r\n        router.routeReuseStrategy.shouldReuseRoute = shouldReuseRoute;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns an observable localized text with the given interpolation parameters in current language.\r\n   * @param key Localizaton key to replace with localized text\r\n   * @param interpolateParams Values to interpolate\r\n   */\r\n  get(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ): Observable<string> {\r\n    return this.store.select(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n\r\n  /**\r\n   * Returns localized text with the given interpolation parameters in current language.\r\n   * @param key Localization key to replace with localized text\r\n   * @param interpolateParams Values to intepolate.\r\n   */\r\n  instant(key: string | Config.LocalizationWithDefault, ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n\r\n  localize(resourceName: string, key: string, defaultValue: string): Observable<string> {\r\n    return this.store.select(ConfigState.getOne('localization')).pipe(\r\n      map(createLocalizer),\r\n      map(localize => localize(resourceName, key, defaultValue)),\r\n    );\r\n  }\r\n\r\n  localizeSync(resourceName: string, key: string, defaultValue: string): string {\r\n    const localization = this.store.selectSnapshot(ConfigState.getOne('localization'));\r\n    return createLocalizer(localization)(resourceName, key, defaultValue);\r\n  }\r\n\r\n  localizeWithFallback(\r\n    resourceNames: string[],\r\n    keys: string[],\r\n    defaultValue: string,\r\n  ): Observable<string> {\r\n    return this.store.select(ConfigState.getOne('localization')).pipe(\r\n      map(createLocalizerWithFallback),\r\n      map(localizeWithFallback => localizeWithFallback(resourceNames, keys, defaultValue)),\r\n    );\r\n  }\r\n\r\n  localizeWithFallbackSync(resourceNames: string[], keys: string[], defaultValue: string): string {\r\n    const localization = this.store.selectSnapshot(ConfigState.getOne('localization'));\r\n    return createLocalizerWithFallback(localization)(resourceNames, keys, defaultValue);\r\n  }\r\n}\r\n","export class BaseTreeNode<T extends object> {\r\n  children: TreeNode<T>[] = [];\r\n  isLeaf = true;\r\n  parent: TreeNode<T>;\r\n\r\n  constructor(props: T) {\r\n    Object.assign(this, props);\r\n  }\r\n\r\n  static create<T extends object>(props: T) {\r\n    return new BaseTreeNode<T>(props) as TreeNode<T>;\r\n  }\r\n}\r\n\r\nexport function createTreeFromList<T extends object, R extends unknown>(\r\n  list: T[],\r\n  keySelector: (item: T) => number | string | symbol,\r\n  parentKeySelector: typeof keySelector,\r\n  valueMapper: (item: T) => R,\r\n) {\r\n  const map = createMapFromList(list, keySelector, valueMapper);\r\n  const tree: NodeValue<T, typeof valueMapper>[] = [];\r\n\r\n  list.forEach(row => {\r\n    const id = keySelector(row);\r\n    const parentId = parentKeySelector(row);\r\n    const node = map.get(id);\r\n\r\n    if (parentId) {\r\n      const parent = map.get(parentId);\r\n      if (!parent) return;\r\n      (parent as any).children.push(node);\r\n      (parent as any).isLeaf = false;\r\n      (node as any).parent = parent;\r\n    } else {\r\n      tree.push(node);\r\n    }\r\n  });\r\n\r\n  return tree;\r\n}\r\n\r\nexport function createMapFromList<T extends object, R extends unknown>(\r\n  list: T[],\r\n  keySelector: (item: T) => number | string | symbol,\r\n  valueMapper: (item: T) => R,\r\n) {\r\n  type Key = ReturnType<typeof keySelector>;\r\n  type Value = NodeValue<T, typeof valueMapper>;\r\n  const map = new Map<Key, Value>();\r\n  list.forEach(row => map.set(keySelector(row), valueMapper(row)));\r\n  return map;\r\n}\r\n\r\nexport type TreeNode<T extends object> = {\r\n  [K in keyof T]: T[K];\r\n} & {\r\n  children: TreeNode<T>[];\r\n  isLeaf: boolean;\r\n  parent?: TreeNode<T>;\r\n};\r\n\r\ntype NodeValue<T extends object, F extends (...args: any) => any> = F extends undefined\r\n  ? TreeNode<T>\r\n  : ReturnType<F>;\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { ABP } from '../models/common';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { pushValueTo } from '../utils/array-utils';\r\nimport { BaseTreeNode, createTreeFromList, TreeNode } from '../utils/tree-utils';\r\n\r\nexport abstract class AbstractTreeService<T extends object> {\r\n  abstract id: string;\r\n  abstract parentId: string;\r\n  abstract hide: (item: T) => boolean;\r\n  abstract sort: (a: T, b: T) => number;\r\n\r\n  private _flat$ = new BehaviorSubject<T[]>([]);\r\n  private _tree$ = new BehaviorSubject<TreeNode<T>[]>([]);\r\n  private _visible$ = new BehaviorSubject<TreeNode<T>[]>([]);\r\n\r\n  get flat(): T[] {\r\n    return this._flat$.value;\r\n  }\r\n\r\n  get flat$(): Observable<T[]> {\r\n    return this._flat$.asObservable();\r\n  }\r\n\r\n  get tree(): TreeNode<T>[] {\r\n    return this._tree$.value;\r\n  }\r\n\r\n  get tree$(): Observable<TreeNode<T>[]> {\r\n    return this._tree$.asObservable();\r\n  }\r\n\r\n  get visible(): TreeNode<T>[] {\r\n    return this._visible$.value;\r\n  }\r\n\r\n  get visible$(): Observable<TreeNode<T>[]> {\r\n    return this._visible$.asObservable();\r\n  }\r\n\r\n  protected createTree(items: T[]): TreeNode<T>[] {\r\n    return createTreeFromList<T, TreeNode<T>>(\r\n      items,\r\n      item => item[this.id],\r\n      item => item[this.parentId],\r\n      item => BaseTreeNode.create(item),\r\n    );\r\n  }\r\n\r\n  private filterWith(setOrMap: Set<string> | Map<string, T>): T[] {\r\n    return this._flat$.value.filter(\r\n      item => !setOrMap.has(item[this.id]) && !setOrMap.has(item[this.parentId]),\r\n    );\r\n  }\r\n\r\n  private publish(flatItems: T[], visibleItems: T[]): T[] {\r\n    this._flat$.next(flatItems);\r\n    this._tree$.next(this.createTree(flatItems));\r\n    this._visible$.next(this.createTree(visibleItems));\r\n    return flatItems;\r\n  }\r\n\r\n  add(items: T[]): T[] {\r\n    const map = new Map<string, T>();\r\n    items.forEach(item => map.set(item[this.id], item));\r\n\r\n    const flatItems = this.filterWith(map);\r\n    map.forEach(pushValueTo(flatItems));\r\n\r\n    flatItems.sort(this.sort);\r\n    const visibleItems = flatItems.filter(item => !this.hide(item));\r\n\r\n    return this.publish(flatItems, visibleItems);\r\n  }\r\n\r\n  find(predicate: (item: TreeNode<T>) => boolean, tree = this.tree): TreeNode<T> | null {\r\n    return tree.reduce(\r\n      (acc, node) => (acc ? acc : predicate(node) ? node : this.find(predicate, node.children)),\r\n      null,\r\n    );\r\n  }\r\n\r\n  patch(identifier: string, props: Partial<T>): T[] | false {\r\n    const flatItems = this._flat$.value;\r\n    const index = flatItems.findIndex(item => item[this.id] === identifier);\r\n    if (index < 0) return false;\r\n\r\n    flatItems[index] = { ...flatItems[index], ...props };\r\n\r\n    flatItems.sort(this.sort);\r\n    const visibleItems = flatItems.filter(item => !this.hide(item));\r\n\r\n    return this.publish(flatItems, visibleItems);\r\n  }\r\n\r\n  refresh(): T[] {\r\n    return this.add([]);\r\n  }\r\n\r\n  remove(identifiers: string[]): T[] {\r\n    const set = new Set<string>();\r\n    identifiers.forEach(id => set.add(id));\r\n\r\n    const flatItems = this.filterWith(set);\r\n    const visibleItems = flatItems.filter(item => !this.hide(item));\r\n\r\n    return this.publish(flatItems, visibleItems);\r\n  }\r\n\r\n  search(params: Partial<T>, tree = this.tree): TreeNode<T> | null {\r\n    const searchKeys = Object.keys(params);\r\n\r\n    return tree.reduce(\r\n      (acc, node) =>\r\n        acc\r\n          ? acc\r\n          : searchKeys.every(key => node[key] === params[key])\r\n          ? node\r\n          : this.search(params, node.children),\r\n      null,\r\n    );\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport abstract class AbstractNavTreeService<T extends ABP.Nav> extends AbstractTreeService<T>\r\n  implements OnDestroy {\r\n  private subscription: Subscription;\r\n  readonly id = 'name';\r\n  readonly parentId = 'parentName';\r\n  readonly hide = (item: T) => item.invisible || !this.isGranted(item);\r\n  readonly sort = (a: T, b: T) => {\r\n    if (!Number.isInteger(a.order)) return 1;\r\n    if (!Number.isInteger(b.order)) return -1;\r\n\r\n    return a.order - b.order;\r\n  };\r\n\r\n  constructor(protected actions: Actions, protected store: Store) {\r\n    super();\r\n\r\n    this.subscription = this.actions\r\n      .pipe(ofActionSuccessful(GetAppConfiguration))\r\n      .subscribe(() => this.refresh());\r\n  }\r\n\r\n  protected isGranted({ requiredPolicy }: T): boolean {\r\n    return this.store.selectSnapshot(ConfigState.getGrantedPolicy(requiredPolicy));\r\n  }\r\n\r\n  hasChildren(identifier: string): boolean {\r\n    const node = this.find(item => item[this.id] === identifier);\r\n    return Boolean(node?.children?.length);\r\n  }\r\n\r\n  hasInvisibleChild(identifier: string): boolean {\r\n    const node = this.find(item => item[this.id] === identifier);\r\n    return node?.children?.some(child => child.invisible);\r\n  }\r\n\r\n  /* istanbul ignore next */\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RoutesService extends AbstractNavTreeService<ABP.Route> {}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SettingTabsService extends AbstractNavTreeService<ABP.Tab> {}\r\n","import { PRIMARY_OUTLET, Router, UrlSegmentGroup } from '@angular/router';\r\nimport { ABP } from '../models/common';\r\nimport { RoutesService } from '../services/routes.service';\r\nimport { TreeNode } from './tree-utils';\r\n\r\nexport function findRoute(routes: RoutesService, path: string): TreeNode<ABP.Route> {\r\n  const node = routes.find(route => route.path === path);\r\n\r\n  return node || path === '/'\r\n    ? node\r\n    : findRoute(\r\n        routes,\r\n        path\r\n          .split('/')\r\n          .slice(0, -1)\r\n          .join('/'),\r\n      );\r\n}\r\n\r\nexport function getRoutePath(router: Router, url = router.url) {\r\n  const emptyGroup = { segments: [] } as UrlSegmentGroup;\r\n  const primaryGroup = router.parseUrl(url).root.children[PRIMARY_OUTLET];\r\n\r\n  return '/' + (primaryGroup || emptyGroup).segments.map(({ path }) => path).join('/');\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport type { OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport type { Observable, PartialObserver } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SubscriptionService implements OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  get isClosed() {\r\n    return this.subscription.closed;\r\n  }\r\n\r\n  addOne<T extends unknown>(\r\n    source$: Observable<T>,\r\n    next?: (value: T) => void,\r\n    error?: (error: any) => void,\r\n  ): Subscription;\r\n  addOne<T extends unknown>(source$: Observable<T>, observer?: PartialObserver<T>): Subscription;\r\n  addOne<T extends unknown>(\r\n    source$: Observable<T>,\r\n    nextOrObserver?: PartialObserver<T> | Next<T>,\r\n    error?: (error: any) => void,\r\n  ): Subscription {\r\n    const subscription = source$.subscribe(nextOrObserver as Next<T>, error);\r\n    this.subscription.add(subscription);\r\n    return subscription;\r\n  }\r\n\r\n  closeAll() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  closeOne(subscription: Subscription | undefined | null) {\r\n    this.removeOne(subscription);\r\n    subscription.unsubscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  removeOne(subscription: Subscription | undefined | null) {\r\n    if (!subscription) return;\r\n    this.subscription.remove(subscription);\r\n  }\r\n\r\n  reset() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = new Subscription();\r\n  }\r\n}\r\n\r\ntype Next<T> = (value: T) => void;\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Action, createSelector, Selector, State, StateContext } from '@ngxs/store';\r\nimport snq from 'snq';\r\nimport { AddReplaceableComponent } from '../actions/replaceable-components.actions';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { noop } from '../utils/common-utils';\r\n\r\n@State<ReplaceableComponents.State>({\r\n  name: 'ReplaceableComponentsState',\r\n  defaults: { replaceableComponents: [] } as ReplaceableComponents.State,\r\n})\r\n@Injectable()\r\nexport class ReplaceableComponentsState {\r\n  @Selector()\r\n  static getAll({\r\n    replaceableComponents,\r\n  }: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent[] {\r\n    return replaceableComponents || [];\r\n  }\r\n\r\n  static getComponent(key: string) {\r\n    const selector = createSelector(\r\n      [ReplaceableComponentsState],\r\n      (state: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent => {\r\n        return snq(() => state.replaceableComponents.find(component => component.key === key));\r\n      },\r\n    );\r\n\r\n    return selector;\r\n  }\r\n\r\n  constructor(private ngZone: NgZone, private router: Router) {}\r\n\r\n  // TODO: Create a shared service for route reload and more\r\n  private reloadRoute() {\r\n    const { shouldReuseRoute } = this.router.routeReuseStrategy;\r\n    const setRouteReuse = (reuse: typeof shouldReuseRoute) => {\r\n      this.router.routeReuseStrategy.shouldReuseRoute = reuse;\r\n    };\r\n\r\n    setRouteReuse(() => false);\r\n    this.router.navigated = false;\r\n\r\n    this.ngZone.run(async () => {\r\n      await this.router.navigateByUrl(this.router.url).catch(noop);\r\n      setRouteReuse(shouldReuseRoute);\r\n    });\r\n  }\r\n\r\n  @Action(AddReplaceableComponent)\r\n  replaceableComponentsAction(\r\n    { getState, patchState }: StateContext<ReplaceableComponents.State>,\r\n    { payload, reload }: AddReplaceableComponent,\r\n  ) {\r\n    let { replaceableComponents } = getState();\r\n\r\n    const index = snq(\r\n      () => replaceableComponents.findIndex(component => component.key === payload.key),\r\n      -1,\r\n    );\r\n    if (index > -1) {\r\n      replaceableComponents[index] = payload;\r\n    } else {\r\n      replaceableComponents = [...replaceableComponents, payload];\r\n    }\r\n\r\n    patchState({\r\n      replaceableComponents,\r\n    });\r\n\r\n    if (reload) this.reloadRoute();\r\n  }\r\n}\r\n","import { Component, Injector, Optional, SkipSelf, Type } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { ABP } from '../models';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { LocalizationService } from '../services/localization.service';\r\nimport { RoutesService } from '../services/routes.service';\r\nimport { SubscriptionService } from '../services/subscription.service';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { findRoute, getRoutePath } from '../utils/route-utils';\r\nimport { TreeNode } from '../utils/tree-utils';\r\n\r\n@Component({\r\n  selector: 'abp-dynamic-layout',\r\n  template: `\r\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\r\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\r\n    <ng-template #componentOutlet\r\n      ><ng-container *ngIf=\"isLayoutVisible\" [ngComponentOutlet]=\"layout\"></ng-container\r\n    ></ng-template>\r\n  `,\r\n  providers: [SubscriptionService],\r\n})\r\nexport class DynamicLayoutComponent {\r\n  layout: Type<any>;\r\n\r\n  // TODO: Consider a shared enum (eThemeSharedComponents) for known layouts\r\n  readonly layouts = new Map([\r\n    ['application', 'Theme.ApplicationLayoutComponent'],\r\n    ['account', 'Theme.AccountLayoutComponent'],\r\n    ['empty', 'Theme.EmptyLayoutComponent'],\r\n  ]);\r\n\r\n  isLayoutVisible = true;\r\n\r\n  constructor(\r\n    injector: Injector,\r\n    private localizationService: LocalizationService,\r\n    private store: Store,\r\n    private subscription: SubscriptionService,\r\n    @Optional() @SkipSelf() dynamicLayoutComponent: DynamicLayoutComponent,\r\n  ) {\r\n    if (dynamicLayoutComponent) return;\r\n    const route = injector.get(ActivatedRoute);\r\n    const router = injector.get(Router);\r\n    const routes = injector.get(RoutesService);\r\n\r\n    this.subscription.addOne(router.events, event => {\r\n      if (event instanceof NavigationEnd) {\r\n        let expectedLayout = (route.snapshot.data || {}).layout;\r\n\r\n        if (!expectedLayout) {\r\n          let node = findRoute(routes, getRoutePath(router));\r\n          node = { parent: node } as TreeNode<ABP.Route>;\r\n\r\n          while (node.parent) {\r\n            node = node.parent;\r\n\r\n            if (node.layout) {\r\n              expectedLayout = node.layout;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (!expectedLayout) expectedLayout = eLayoutType.empty;\r\n\r\n        const key = this.layouts.get(expectedLayout);\r\n        this.layout = this.getComponent(key).component;\r\n      }\r\n    });\r\n\r\n    this.listenToLanguageChange();\r\n  }\r\n\r\n  private listenToLanguageChange() {\r\n    this.subscription.addOne(this.localizationService.languageChange, () => {\r\n      this.isLayoutVisible = false;\r\n      setTimeout(() => (this.isLayoutVisible = true), 0);\r\n    });\r\n  }\r\n\r\n  private getComponent(key: string): ReplaceableComponents.ReplaceableComponent {\r\n    return this.store.selectSnapshot(ReplaceableComponentsState.getComponent(key));\r\n  }\r\n}\r\n","import { Component, OnInit, Type } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { SubscriptionService } from '../services/subscription.service';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\n\r\n@Component({\r\n  selector: 'abp-replaceable-route-container',\r\n  template: `\r\n    <ng-container *ngComponentOutlet=\"externalComponent || defaultComponent\"></ng-container>\r\n  `,\r\n  providers: [SubscriptionService],\r\n})\r\nexport class ReplaceableRouteContainerComponent implements OnInit {\r\n  defaultComponent: Type<any>;\r\n\r\n  componentKey: string;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private store: Store,\r\n    private subscription: SubscriptionService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.defaultComponent = this.route.snapshot.data.replaceableComponent.defaultComponent;\r\n    this.componentKey = (this.route.snapshot.data\r\n      .replaceableComponent as ReplaceableComponents.RouteData).key;\r\n\r\n    const component$ = this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.componentKey))\r\n      .pipe(distinctUntilChanged());\r\n\r\n    this.subscription.addOne(\r\n      component$,\r\n      (res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.externalComponent = res.component;\r\n      },\r\n    );\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-router-outlet',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class RouterOutletComponent {}\r\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective implements AfterViewInit {\r\n  @Input('autofocus')\r\n  delay = 0;\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.elRef.nativeElement.focus(), this.delay);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { SubscriptionService } from '../services/subscription.service';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[input.debounce]',\r\n  providers: [SubscriptionService],\r\n})\r\nexport class InputEventDebounceDirective implements OnInit {\r\n  @Input() debounce = 300;\r\n\r\n  @Output('input.debounce') readonly debounceEvent = new EventEmitter<Event>();\r\n\r\n  constructor(private el: ElementRef, private subscription: SubscriptionService) {}\r\n\r\n  ngOnInit(): void {\r\n    const input$ = fromEvent(this.el.nativeElement, 'input').pipe(debounceTime(this.debounce));\r\n\r\n    this.subscription.addOne(input$, (event: Event) => {\r\n      this.debounceEvent.emit(event);\r\n    });\r\n  }\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[abpEllipsis]',\r\n})\r\nexport class EllipsisDirective implements AfterViewInit {\r\n  @Input('abpEllipsis')\r\n  width: string;\r\n\r\n  @HostBinding('title')\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input('abpEllipsisEnabled')\r\n  enabled = true;\r\n\r\n  @HostBinding('class.abp-ellipsis-inline')\r\n  get inlineClass() {\r\n    return this.enabled && this.width;\r\n  }\r\n\r\n  @HostBinding('class.abp-ellipsis')\r\n  get class() {\r\n    return this.enabled && !this.width;\r\n  }\r\n\r\n  @HostBinding('style.max-width')\r\n  get maxWidth() {\r\n    return this.enabled && this.width ? this.width || '170px' : undefined;\r\n  }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.title = this.title || (this.elRef.nativeElement as HTMLElement).innerText;\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Input,\r\n  IterableChangeRecord,\r\n  IterableChanges,\r\n  IterableDiffer,\r\n  IterableDiffers,\r\n  OnChanges,\r\n  TemplateRef,\r\n  TrackByFunction,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport compare from 'just-compare';\r\nimport clone from 'just-clone';\r\n\r\nexport type CompareFn<T = any> = (value: T, comparison: T) => boolean;\r\n\r\nclass AbpForContext {\r\n  constructor(public $implicit: any, public index: number, public count: number, public list: any[]) {}\r\n}\r\n\r\nclass RecordView {\r\n  constructor(public record: IterableChangeRecord<any>, public view: EmbeddedViewRef<AbpForContext>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[abpFor]',\r\n})\r\nexport class ForDirective implements OnChanges {\r\n  @Input('abpForOf')\r\n  items: any[];\r\n\r\n  @Input('abpForOrderBy')\r\n  orderBy: string;\r\n\r\n  @Input('abpForOrderDir')\r\n  orderDir: 'ASC' | 'DESC';\r\n\r\n  @Input('abpForFilterBy')\r\n  filterBy: string;\r\n\r\n  @Input('abpForFilterVal')\r\n  filterVal: any;\r\n\r\n  @Input('abpForTrackBy')\r\n  trackBy;\r\n\r\n  @Input('abpForCompareBy')\r\n  compareBy: CompareFn;\r\n\r\n  @Input('abpForEmptyRef')\r\n  emptyRef: TemplateRef<any>;\r\n\r\n  private differ: IterableDiffer<any>;\r\n\r\n  private isShowEmptyRef: boolean;\r\n\r\n  get compareFn(): CompareFn {\r\n    return this.compareBy || compare;\r\n  }\r\n\r\n  get trackByFn(): TrackByFunction<any> {\r\n    return this.trackBy || ((index: number, item: any) => (item as any).id || index);\r\n  }\r\n\r\n  constructor(\r\n    private tempRef: TemplateRef<AbpForContext>,\r\n    private vcRef: ViewContainerRef,\r\n    private differs: IterableDiffers,\r\n  ) {}\r\n\r\n  private iterateOverAppliedOperations(changes: IterableChanges<any>) {\r\n    const rw: RecordView[] = [];\r\n\r\n    changes.forEachOperation((record: IterableChangeRecord<any>, previousIndex: number, currentIndex: number) => {\r\n      if (record.previousIndex == null) {\r\n        const view = this.vcRef.createEmbeddedView(\r\n          this.tempRef,\r\n          new AbpForContext(null, -1, -1, this.items),\r\n          currentIndex,\r\n        );\r\n\r\n        rw.push(new RecordView(record, view));\r\n      } else if (currentIndex == null) {\r\n        this.vcRef.remove(previousIndex);\r\n      } else {\r\n        const view = this.vcRef.get(previousIndex);\r\n        this.vcRef.move(view, currentIndex);\r\n\r\n        rw.push(new RecordView(record, view as EmbeddedViewRef<AbpForContext>));\r\n      }\r\n    });\r\n\r\n    for (let i = 0, l = rw.length; i < l; i++) {\r\n      rw[i].view.context.$implicit = rw[i].record.item;\r\n    }\r\n  }\r\n\r\n  private iterateOverAttachedViews(changes: IterableChanges<any>) {\r\n    for (let i = 0, l = this.vcRef.length; i < l; i++) {\r\n      const viewRef = this.vcRef.get(i) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.index = i;\r\n      viewRef.context.count = l;\r\n      viewRef.context.list = this.items;\r\n    }\r\n\r\n    changes.forEachIdentityChange((record: IterableChangeRecord<any>) => {\r\n      const viewRef = this.vcRef.get(record.currentIndex) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.$implicit = record.item;\r\n    });\r\n  }\r\n\r\n  private projectItems(items: any[]): void {\r\n    if (!items.length && this.emptyRef) {\r\n      this.vcRef.clear();\r\n      // tslint:disable-next-line: no-unused-expression\r\n      this.vcRef.createEmbeddedView(this.emptyRef).rootNodes;\r\n      this.isShowEmptyRef = true;\r\n      this.differ = null;\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.emptyRef && this.isShowEmptyRef) {\r\n      this.vcRef.clear();\r\n      this.isShowEmptyRef = false;\r\n    }\r\n\r\n    if (!this.differ && items) {\r\n      this.differ = this.differs.find(items).create(this.trackByFn);\r\n    }\r\n\r\n    if (this.differ) {\r\n      const changes = this.differ.diff(items);\r\n\r\n      if (changes) {\r\n        this.iterateOverAppliedOperations(changes);\r\n        this.iterateOverAttachedViews(changes);\r\n      }\r\n    }\r\n  }\r\n\r\n  private sortItems(items: any[]) {\r\n    if (this.orderBy) {\r\n      items.sort((a, b) => (a[this.orderBy] > b[this.orderBy] ? 1 : a[this.orderBy] < b[this.orderBy] ? -1 : 0));\r\n    } else {\r\n      items.sort();\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    let items = clone(this.items) as any[];\r\n    if (!Array.isArray(items)) return;\r\n\r\n    const compareFn = this.compareFn;\r\n\r\n    if (typeof this.filterBy !== 'undefined' && typeof this.filterVal !== 'undefined' && this.filterVal !== '') {\r\n      items = items.filter(item => compareFn(item[this.filterBy], this.filterVal));\r\n    }\r\n\r\n    switch (this.orderDir) {\r\n      case 'ASC':\r\n        this.sortItems(items);\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      case 'DESC':\r\n        this.sortItems(items);\r\n        items.reverse();\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      default:\r\n        this.projectItems(items);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Self,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { SubscriptionService } from '../services/subscription.service';\r\n\r\ntype Controls = { [key: string]: FormControl } | FormGroup[];\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: 'form[ngSubmit][formGroup]',\r\n  providers: [SubscriptionService],\r\n})\r\nexport class FormSubmitDirective implements OnInit {\r\n  @Input()\r\n  debounce = 200;\r\n\r\n  @Input()\r\n  notValidateOnSubmit: string | boolean;\r\n\r\n  @Output() readonly ngSubmit = new EventEmitter();\r\n\r\n  executedNgSubmit = false;\r\n\r\n  constructor(\r\n    @Self() private formGroupDirective: FormGroupDirective,\r\n    private host: ElementRef<HTMLFormElement>,\r\n    private cdRef: ChangeDetectorRef,\r\n    private subscription: SubscriptionService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.addOne(this.formGroupDirective.ngSubmit, () => {\r\n      this.markAsDirty();\r\n      this.executedNgSubmit = true;\r\n    });\r\n\r\n    const keyup$ = fromEvent(this.host.nativeElement as HTMLElement, 'keyup').pipe(\r\n      debounceTime(this.debounce),\r\n      filter((key: KeyboardEvent) => key && key.key === 'Enter'),\r\n    );\r\n\r\n    this.subscription.addOne(keyup$, () => {\r\n      if (!this.executedNgSubmit) {\r\n        this.host.nativeElement.dispatchEvent(\r\n          new Event('submit', { bubbles: true, cancelable: true }),\r\n        );\r\n      }\r\n\r\n      this.executedNgSubmit = false;\r\n    });\r\n  }\r\n\r\n  markAsDirty() {\r\n    const { form } = this.formGroupDirective;\r\n\r\n    setDirty(form.controls as { [key: string]: FormControl });\r\n    form.markAsDirty();\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n\r\nfunction setDirty(controls: Controls) {\r\n  if (Array.isArray(controls)) {\r\n    controls.forEach(group => {\r\n      setDirty(group.controls as { [key: string]: FormControl });\r\n    });\r\n    return;\r\n  }\r\n\r\n  Object.keys(controls).forEach(key => {\r\n    controls[key].markAsDirty();\r\n    controls[key].updateValueAndValidity();\r\n  });\r\n}\r\n","import { Directive, Output, EventEmitter, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({ selector: '[abpInit]' })\r\nexport class InitDirective implements AfterViewInit {\r\n  @Output('abpInit') readonly init = new EventEmitter<ElementRef<any>>();\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.init.emit(this.elRef);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from './rest.service';\r\nimport { Profile, Rest } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  constructor(private rest: RestService) {}\r\n\r\n  get(): Observable<Profile.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/my-profile',\r\n    };\r\n\r\n    return this.rest.request<null, Profile.Response>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  update(body: Profile.Response): Observable<Profile.Response> {\r\n    const request: Rest.Request<Profile.Response> = {\r\n      method: 'PUT',\r\n      url: '/api/identity/my-profile',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.Response, Profile.Response>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  changePassword(\r\n    body: Profile.ChangePasswordRequest,\r\n    skipHandleError: boolean = false,\r\n  ): Observable<null> {\r\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/my-profile/change-password',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request, {\r\n      skipHandleError,\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ChangePassword, GetProfile, UpdateProfile } from '../actions/profile.actions';\r\nimport { Profile } from '../models/profile';\r\nimport { ProfileService } from '../services/profile.service';\r\n\r\n@State<Profile.State>({\r\n  name: 'ProfileState',\r\n  defaults: {} as Profile.State,\r\n})\r\n@Injectable()\r\nexport class ProfileState {\r\n  @Selector()\r\n  static getProfile({ profile }: Profile.State): Profile.Response {\r\n    return profile;\r\n  }\r\n\r\n  constructor(private profileService: ProfileService) {}\r\n\r\n  @Action(GetProfile)\r\n  getProfile({ patchState }: StateContext<Profile.State>) {\r\n    return this.profileService.get().pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(UpdateProfile)\r\n  updateProfile({ patchState }: StateContext<Profile.State>, { payload }: UpdateProfile) {\r\n    return this.profileService.update(payload).pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(ChangePassword)\r\n  changePassword(_, { payload }: ChangePassword) {\r\n    return this.profileService.changePassword(payload, true);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { ConfigState } from '../states';\r\n\r\n@Directive({\r\n  selector: '[abpPermission]',\r\n})\r\nexport class PermissionDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpPermission') condition: string;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private store: Store,\r\n    @Optional() private templateRef: TemplateRef<any>,\r\n    private vcRef: ViewContainerRef,\r\n  ) {}\r\n\r\n  private check() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n\r\n    this.subscription = this.store\r\n      .select(ConfigState.getGrantedPolicy(this.condition))\r\n      .subscribe(isGranted => {\r\n        if (this.templateRef && isGranted) {\r\n          this.vcRef.clear();\r\n          this.vcRef.createEmbeddedView(this.templateRef);\r\n        } else if (this.templateRef && !isGranted) {\r\n          this.vcRef.clear();\r\n        } else if (!isGranted && !this.templateRef) {\r\n          this.renderer.removeChild(\r\n            (this.elRef.nativeElement as HTMLElement).parentElement,\r\n            this.elRef.nativeElement,\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.templateRef && !this.condition) {\r\n      this.vcRef.createEmbeddedView(this.templateRef);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) this.subscription.unsubscribe();\r\n  }\r\n\r\n  ngOnChanges({ condition }: SimpleChanges) {\r\n    if ((condition || { currentValue: null }).currentValue) {\r\n      this.check();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport compare from 'just-compare';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { SubscriptionService } from '../services/subscription.service';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\n\r\n@Directive({ selector: '[abpReplaceableTemplate]', providers: [SubscriptionService] })\r\nexport class ReplaceableTemplateDirective implements OnInit, OnChanges {\r\n  @Input('abpReplaceableTemplate')\r\n  data: ReplaceableComponents.ReplaceableTemplateDirectiveInput<any, any>;\r\n\r\n  providedData = { inputs: {}, outputs: {} } as ReplaceableComponents.ReplaceableTemplateData<\r\n    any,\r\n    any\r\n  >;\r\n\r\n  context = {} as any;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  defaultComponentRef: any;\r\n\r\n  defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n\r\n  initialized = false;\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private templateRef: TemplateRef<any>,\r\n    private cfRes: ComponentFactoryResolver,\r\n    private vcRef: ViewContainerRef,\r\n    private store: Store,\r\n    private subscription: SubscriptionService,\r\n  ) {\r\n    this.context = {\r\n      initTemplate: ref => {\r\n        this.resetDefaultComponent();\r\n        this.defaultComponentRef = ref;\r\n        this.setDefaultComponentInputs();\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    const component$ = this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.data.componentKey))\r\n      .pipe(\r\n        filter(\r\n          (res = {} as ReplaceableComponents.ReplaceableComponent) =>\r\n            !this.initialized || !compare(res.component, this.externalComponent),\r\n        ),\r\n      );\r\n\r\n    this.subscription.addOne(\r\n      component$,\r\n      (res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.vcRef.clear();\r\n        this.externalComponent = res.component;\r\n        if (this.defaultComponentRef) {\r\n          this.resetDefaultComponent();\r\n        }\r\n\r\n        if (res.component) {\r\n          this.setProvidedData();\r\n          const customInjector = Injector.create({\r\n            providers: [{ provide: 'REPLACEABLE_DATA', useValue: this.providedData }],\r\n            parent: this.injector,\r\n          });\r\n          this.vcRef.createComponent(\r\n            this.cfRes.resolveComponentFactory(res.component),\r\n            0,\r\n            customInjector,\r\n          );\r\n        } else {\r\n          this.vcRef.createEmbeddedView(this.templateRef, this.context);\r\n        }\r\n\r\n        this.initialized = true;\r\n      },\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (snq(() => changes.data.currentValue.inputs) && this.defaultComponentRef) {\r\n      this.setDefaultComponentInputs();\r\n    }\r\n  }\r\n\r\n  setDefaultComponentInputs() {\r\n    if (!this.defaultComponentRef || (!this.data.inputs && !this.data.outputs)) return;\r\n\r\n    if (this.data.inputs) {\r\n      for (const key in this.data.inputs) {\r\n        if (this.data.inputs.hasOwnProperty(key)) {\r\n          if (!compare(this.defaultComponentRef[key], this.data.inputs[key].value)) {\r\n            this.defaultComponentRef[key] = this.data.inputs[key].value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.data.outputs) {\r\n      for (const key in this.data.outputs) {\r\n        if (this.data.outputs.hasOwnProperty(key)) {\r\n          if (!this.defaultComponentSubscriptions[key]) {\r\n            this.defaultComponentSubscriptions[key] = this.defaultComponentRef[key].subscribe(\r\n              value => {\r\n                this.data.outputs[key](value);\r\n              },\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setProvidedData() {\r\n    this.providedData = { ...this.data, inputs: {} };\r\n\r\n    if (!this.data.inputs) return;\r\n    Object.defineProperties(this.providedData.inputs, {\r\n      ...Object.keys(this.data.inputs).reduce(\r\n        (acc, key) => ({\r\n          ...acc,\r\n          [key]: {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => this.data.inputs[key].value,\r\n            ...(this.data.inputs[key].twoWay && {\r\n              set: newValue => {\r\n                this.data.inputs[key].value = newValue;\r\n                this.data.outputs[`${key}Change`](newValue);\r\n              },\r\n            }),\r\n          },\r\n        }),\r\n        {},\r\n      ),\r\n    });\r\n  }\r\n\r\n  resetDefaultComponent() {\r\n    Object.keys(this.defaultComponentSubscriptions).forEach(key => {\r\n      this.defaultComponentSubscriptions[key].unsubscribe();\r\n    });\r\n    this.defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n    this.defaultComponentRef = null;\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { SubscriptionService } from '../services/subscription.service';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[click.stop]',\r\n  providers: [SubscriptionService],\r\n})\r\nexport class StopPropagationDirective implements OnInit {\r\n  @Output('click.stop') readonly stopPropEvent = new EventEmitter<MouseEvent>();\r\n\r\n  constructor(private el: ElementRef, private subscription: SubscriptionService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.addOne(fromEvent(this.el.nativeElement, 'click'), (event: MouseEvent) => {\r\n      event.stopPropagation();\r\n      this.stopPropEvent.emit(event);\r\n    });\r\n  }\r\n}\r\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport snq from 'snq';\r\n\r\n/**\r\n *\r\n * @deprecated To be deleted in v3.3\r\n */\r\n@Directive({\r\n  selector: '[abpVisibility]',\r\n})\r\nexport class VisibilityDirective implements AfterViewInit {\r\n  @Input('abpVisibility')\r\n  focusedElement: HTMLElement;\r\n\r\n  completed$ = new Subject<boolean>();\r\n\r\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.focusedElement && this.elRef) {\r\n      this.focusedElement = this.elRef.nativeElement;\r\n    }\r\n\r\n    let observer: MutationObserver;\r\n    observer = new MutationObserver(mutations => {\r\n      mutations.forEach(mutation => {\r\n        if (!mutation.target) return;\r\n\r\n        const htmlNodes = snq(\r\n          () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\r\n          [],\r\n        );\r\n\r\n        if (!htmlNodes.length) {\r\n          this.removeFromDOM();\r\n        }\r\n      });\r\n    });\r\n\r\n    observer.observe(this.focusedElement, {\r\n      childList: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const htmlNodes = snq(\r\n        () =>\r\n          Array.from(this.focusedElement.childNodes).filter(node => node instanceof HTMLElement),\r\n        [],\r\n      );\r\n\r\n      if (!htmlNodes.length) this.removeFromDOM();\r\n    }, 0);\r\n\r\n    this.completed$.subscribe(() => observer.disconnect());\r\n  }\r\n\r\n  disconnect() {\r\n    this.completed$.next();\r\n    this.completed$.complete();\r\n  }\r\n\r\n  removeFromDOM() {\r\n    if (!this.elRef.nativeElement) return;\r\n\r\n    this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\r\n    this.disconnect();\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport compare from 'just-compare';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { SetEnvironment } from '../actions/config.actions';\r\nimport { ABP } from '../models/common';\r\nimport { CORE_OPTIONS } from '../tokens/options.token';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OAuthConfigurationHandler {\r\n  constructor(\r\n    private actions: Actions,\r\n    private oAuthService: OAuthService,\r\n    @Inject(CORE_OPTIONS) private options: ABP.Root,\r\n  ) {\r\n    this.listenToSetEnvironment();\r\n  }\r\n\r\n  private listenToSetEnvironment() {\r\n    this.actions\r\n      .pipe(ofActionSuccessful(SetEnvironment))\r\n      .pipe(\r\n        map(({ environment }: SetEnvironment) => environment.oAuthConfig),\r\n        filter(config => !compare(config, this.options.environment.oAuthConfig)),\r\n      )\r\n      .subscribe(config => {\r\n        this.oAuthService.configure(config);\r\n      });\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ABP } from '../models';\r\nimport { RoutesService } from '../services/routes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RoutesHandler {\r\n  constructor(private routes: RoutesService, @Optional() private router: Router) {\r\n    this.addRoutes();\r\n  }\r\n\r\n  addRoutes() {\r\n    this.router?.config?.forEach(({ path = '', data }) => {\r\n      if (!data?.routes) return;\r\n\r\n      if (Array.isArray(data.routes)) {\r\n        this.routes.add(data.routes);\r\n        return;\r\n      }\r\n\r\n      const routes = flatRoutes([{ path, ...data.routes }], { path: '' });\r\n      this.routes.add(routes);\r\n    });\r\n  }\r\n}\r\n\r\nfunction flatRoutes(routes: RouteDef[], parent: any) {\r\n  if (!routes) return [];\r\n\r\n  return routes.reduce((acc, route) => {\r\n    const { children, ...current } = {\r\n      ...route,\r\n      parentName: parent.name,\r\n      path: (parent.path + '/' + route.path).replace(/\\/\\//g, '/'),\r\n    };\r\n\r\n    acc.push(current, ...flatRoutes(children, current));\r\n\r\n    return acc;\r\n  }, []);\r\n}\r\n\r\ntype RouteDef = ABP.Route & { children: RouteDef[] };\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Store } from '@ngxs/store';\r\nimport { SessionState } from '../states';\r\nimport { StartLoader, StopLoader } from '../actions/loader.actions';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n  constructor(private oAuthService: OAuthService, private store: Store) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    this.store.dispatch(new StartLoader(request));\r\n\r\n    const headers = {} as any;\r\n\r\n    const token = this.oAuthService.getAccessToken();\r\n    if (!request.headers.has('Authorization') && token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\r\n    if (!request.headers.has('Accept-Language') && lang) {\r\n      headers['Accept-Language'] = lang;\r\n    }\r\n\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n    if (!request.headers.has('__tenant') && tenant) {\r\n      headers['__tenant'] = tenant.id;\r\n    }\r\n\r\n    return next\r\n      .handle(\r\n        request.clone({\r\n          setHeaders: headers,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => this.store.dispatch(new StopLoader(request))));\r\n  }\r\n}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Config } from '../models';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class LocalizationPipe implements PipeTransform {\r\n  constructor(private store: Store) {}\r\n\r\n  transform(\r\n    value: string | Config.LocalizationWithDefault = '',\r\n    ...interpolateParams: string[]\r\n  ): string {\r\n    return this.store.selectSnapshot(\r\n      ConfigState.getLocalization(\r\n        value,\r\n        ...interpolateParams.reduce(\r\n          (acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]),\r\n          [],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class MockLocalizationPipe implements PipeTransform {\r\n  transform(value: string | Config.LocalizationWithDefault = '', ..._: string[]) {\r\n    return typeof value === 'string' ? value : value.defaultValue;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { LocalizationPipe } from './pipes/localization.pipe';\r\n\r\n@NgModule({\r\n  exports: [LocalizationPipe],\r\n  declarations: [LocalizationPipe],\r\n})\r\nexport class LocalizationModule {}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nexport type SortOrder = 'asc' | 'desc';\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpSort',\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n  transform(\r\n    value: any[],\r\n    sortOrder: SortOrder | string = 'asc',\r\n    sortKey?: string,\r\n  ): any {\r\n    sortOrder = sortOrder && (sortOrder.toLowerCase() as any);\r\n\r\n    if (!value || (sortOrder !== 'asc' && sortOrder !== 'desc')) return value;\r\n\r\n    let numberArray = [];\r\n    let stringArray = [];\r\n\r\n    if (!sortKey) {\r\n      numberArray = value.filter(item => typeof item === 'number').sort();\r\n      stringArray = value.filter(item => typeof item === 'string').sort();\r\n    } else {\r\n      numberArray = value\r\n        .filter(item => typeof item[sortKey] === 'number')\r\n        .sort((a, b) => a[sortKey] - b[sortKey]);\r\n      stringArray = value\r\n        .filter(item => typeof item[sortKey] === 'string')\r\n        .sort((a, b) => {\r\n          if (a[sortKey] < b[sortKey]) return -1;\r\n          else if (a[sortKey] > b[sortKey]) return 1;\r\n          else return 0;\r\n        });\r\n    }\r\n    const sorted = [\r\n      ...numberArray,\r\n      ...stringArray,\r\n      ...value.filter(\r\n        item =>\r\n          typeof (sortKey ? item[sortKey] : item) !== 'number' &&\r\n          typeof (sortKey ? item[sortKey] : item) !== 'string',\r\n      ),\r\n    ];\r\n    return sortOrder === 'asc' ? sorted : sorted.reverse();\r\n  }\r\n}\r\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport {\r\n  actionMatcher,\r\n  InitState,\r\n  NgxsNextPluginFn,\r\n  NgxsPlugin,\r\n  setValue,\r\n  UpdateState,\r\n} from '@ngxs/store';\r\nimport { ABP } from '../models/common';\r\n\r\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\r\n\r\n@Injectable()\r\nexport class ConfigPlugin implements NgxsPlugin {\r\n  private initialized = false;\r\n\r\n  constructor(@Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root) {}\r\n\r\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\r\n    const matches = actionMatcher(event);\r\n    const isInitAction = matches(InitState) || matches(UpdateState);\r\n\r\n    if (isInitAction && !this.initialized) {\r\n      state = setValue(state, 'ConfigState', {\r\n        ...(state.ConfigState && { ...state.ConfigState }),\r\n        ...this.options,\r\n      });\r\n\r\n      this.initialized = true;\r\n    }\r\n\r\n    return next(state, event);\r\n  }\r\n}\r\n","import { LOCALE_ID, Provider } from '@angular/core';\r\nimport localesMapping from '../constants/different-locales';\r\nimport { LocalizationService } from '../services/localization.service';\r\n\r\nexport class LocaleId extends String {\r\n  constructor(private localizationService: LocalizationService) {\r\n    super();\r\n  }\r\n\r\n  toString(): string {\r\n    const { currentLang } = this.localizationService;\r\n    return localesMapping[currentLang] || currentLang;\r\n  }\r\n\r\n  valueOf(): string {\r\n    return this.toString();\r\n  }\r\n}\r\n\r\nexport const LocaleProvider: Provider = {\r\n  provide: LOCALE_ID,\r\n  useClass: LocaleId,\r\n  deps: [LocalizationService],\r\n};\r\n","import { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\r\nimport {\r\n  NgxsStoragePluginModule,\r\n  NGXS_STORAGE_PLUGIN_OPTIONS,\r\n  StorageOption,\r\n} from '@ngxs/storage-plugin';\r\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\r\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\r\nimport { AbstractNgModelComponent } from './abstracts/ng-model.component';\r\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\r\nimport { ReplaceableRouteContainerComponent } from './components/replaceable-route-container.component';\r\nimport { RouterOutletComponent } from './components/router-outlet.component';\r\nimport { AutofocusDirective } from './directives/autofocus.directive';\r\nimport { InputEventDebounceDirective } from './directives/debounce.directive';\r\nimport { EllipsisDirective } from './directives/ellipsis.directive';\r\nimport { ForDirective } from './directives/for.directive';\r\nimport { FormSubmitDirective } from './directives/form-submit.directive';\r\nimport { InitDirective } from './directives/init.directive';\r\nimport { PermissionDirective } from './directives/permission.directive';\r\nimport { ReplaceableTemplateDirective } from './directives/replaceable-template.directive';\r\nimport { StopPropagationDirective } from './directives/stop-propagation.directive';\r\nimport { VisibilityDirective } from './directives/visibility.directive';\r\nimport { OAuthConfigurationHandler } from './handlers/oauth-configuration.handler';\r\nimport { RoutesHandler } from './handlers/routes.handler';\r\nimport { ApiInterceptor } from './interceptors/api.interceptor';\r\nimport { LocalizationModule } from './localization.module';\r\nimport { ABP } from './models/common';\r\nimport { LocalizationPipe, MockLocalizationPipe } from './pipes/localization.pipe';\r\nimport { SortPipe } from './pipes/sort.pipe';\r\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config.plugin';\r\nimport { LocaleProvider } from './providers/locale.provider';\r\nimport { LocalizationService } from './services/localization.service';\r\nimport { ConfigState } from './states/config.state';\r\nimport { ProfileState } from './states/profile.state';\r\nimport { ReplaceableComponentsState } from './states/replaceable-components.state';\r\nimport { SessionState } from './states/session.state';\r\nimport { coreOptionsFactory, CORE_OPTIONS } from './tokens/options.token';\r\nimport { noop } from './utils/common-utils';\r\nimport './utils/date-extensions';\r\nimport { getInitialData, localeInitializer } from './utils/initial-utils';\r\nimport { oAuthStorage } from './strategies/auth-flow.strategy';\r\n\r\nexport function storageFactory(): OAuthStorage {\r\n  return oAuthStorage;\r\n}\r\n\r\n/**\r\n * BaseCoreModule is the module that holds\r\n * all imports, declarations, exports, and entryComponents\r\n * but not the providers.\r\n * This module will be imported and exported by all others.\r\n */\r\n@NgModule({\r\n  exports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n\r\n    AbstractNgModelComponent,\r\n    AutofocusDirective,\r\n    DynamicLayoutComponent,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    InputEventDebounceDirective,\r\n    PermissionDirective,\r\n    ReplaceableRouteContainerComponent,\r\n    ReplaceableTemplateDirective,\r\n    RouterOutletComponent,\r\n    SortPipe,\r\n    StopPropagationDirective,\r\n    VisibilityDirective,\r\n  ],\r\n  imports: [\r\n    OAuthModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    AbstractNgModelComponent,\r\n    AutofocusDirective,\r\n    DynamicLayoutComponent,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    InputEventDebounceDirective,\r\n    PermissionDirective,\r\n    ReplaceableRouteContainerComponent,\r\n    ReplaceableTemplateDirective,\r\n    RouterOutletComponent,\r\n    SortPipe,\r\n    StopPropagationDirective,\r\n    VisibilityDirective,\r\n  ],\r\n  entryComponents: [\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    ReplaceableRouteContainerComponent,\r\n  ],\r\n})\r\nexport class BaseCoreModule {}\r\n\r\n/**\r\n * RootCoreModule is the module that will be used at root level\r\n * and it introduces imports useful at root level (e.g. NGXS)\r\n */\r\n@NgModule({\r\n  exports: [BaseCoreModule, LocalizationModule],\r\n  imports: [\r\n    BaseCoreModule,\r\n    LocalizationModule,\r\n    NgxsModule.forFeature([ReplaceableComponentsState, ProfileState, SessionState, ConfigState]),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    NgxsStoragePluginModule.forRoot(),\r\n    OAuthModule.forRoot(),\r\n  ],\r\n})\r\nexport class RootCoreModule {}\r\n\r\n/**\r\n * TestCoreModule is the module that will be used in tests\r\n * and it provides mock alternatives\r\n */\r\n@NgModule({\r\n  exports: [RouterModule, BaseCoreModule, MockLocalizationPipe],\r\n  imports: [RouterModule.forRoot([]), BaseCoreModule],\r\n  declarations: [MockLocalizationPipe],\r\n})\r\nexport class TestCoreModule {}\r\n\r\n/**\r\n * CoreModule is the module that is publicly available\r\n */\r\n@NgModule({\r\n  exports: [BaseCoreModule, LocalizationModule],\r\n  imports: [BaseCoreModule, LocalizationModule],\r\n  providers: [LocalizationPipe],\r\n})\r\nexport class CoreModule {\r\n  static forTest({ baseHref = '/' } = {} as ABP.Test): ModuleWithProviders<TestCoreModule> {\r\n    return {\r\n      ngModule: TestCoreModule,\r\n      providers: [\r\n        { provide: APP_BASE_HREF, useValue: baseHref },\r\n        {\r\n          provide: LocalizationPipe,\r\n          useClass: MockLocalizationPipe,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders<RootCoreModule> {\r\n    return {\r\n      ngModule: RootCoreModule,\r\n      providers: [\r\n        LocaleProvider,\r\n        {\r\n          provide: NGXS_PLUGINS,\r\n          useClass: ConfigPlugin,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\r\n          useValue: { environment: options.environment },\r\n        },\r\n        {\r\n          provide: 'CORE_OPTIONS',\r\n          useValue: options,\r\n        },\r\n        {\r\n          provide: CORE_OPTIONS,\r\n          useFactory: coreOptionsFactory,\r\n          deps: ['CORE_OPTIONS'],\r\n        },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: ApiInterceptor,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [OAuthConfigurationHandler],\r\n          useFactory: noop,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: getInitialData,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: localeInitializer,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [LocalizationService],\r\n          useFactory: noop,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [RoutesHandler],\r\n          useFactory: noop,\r\n        },\r\n        { provide: OAuthStorage, useFactory: storageFactory },\r\n        {\r\n          provide: NGXS_STORAGE_PLUGIN_OPTIONS,\r\n          useValue: {\r\n            storage: StorageOption.LocalStorage,\r\n            serialize: JSON.stringify,\r\n            deserialize: JSON.parse,\r\n            beforeSerialize: ngxsStoragePluginSerialize,\r\n            afterDeserialize: ngxsStoragePluginSerialize,\r\n            ...options.ngxsStoragePluginOptions,\r\n            key: [...(options.ngxsStoragePluginOptions?.key || []), 'SessionState'],\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n\r\nexport function ngxsStoragePluginSerialize(data) {\r\n  return data;\r\n}\r\n","export {};\r\n\r\ndeclare global {\r\n  interface Date {\r\n    toLocalISOString?: () => string;\r\n  }\r\n}\r\n\r\nDate.prototype.toLocalISOString = function(this: Date): string {\r\n  const timezoneOffset = this.getTimezoneOffset();\r\n\r\n  return new Date(this.getTime() - timezoneOffset * 60000).toISOString();\r\n};\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private oauthService: OAuthService, private injector: Injector) {}\r\n\r\n  canActivate(\r\n    _: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean> | boolean | UrlTree {\r\n    const router = this.injector.get(Router);\r\n\r\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\r\n    if (hasValidAccessToken) {\r\n      return hasValidAccessToken;\r\n    }\r\n\r\n    router.navigate(['/account/login'], { state: { redirectUrl: state.url } });\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { RoutesService } from '../services/routes.service';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { findRoute, getRoutePath } from '../utils/route-utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionGuard implements CanActivate {\r\n  constructor(private router: Router, private routes: RoutesService, private store: Store) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    let { requiredPolicy } = route.data || {};\r\n\r\n    if (!requiredPolicy) {\r\n      const routeFound = findRoute(this.routes, getRoutePath(this.router, state.url));\r\n      requiredPolicy = routeFound?.requiredPolicy;\r\n    }\r\n\r\n    if (!requiredPolicy) return of(true);\r\n\r\n    return this.store.select(ConfigState.getGrantedPolicy(requiredPolicy)).pipe(\r\n      tap(access => {\r\n        if (!access) {\r\n          this.store.dispatch(new RestOccurError({ status: 403 }));\r\n        }\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ABP } from './common';\r\n\r\nexport class ListResultDto<T> {\r\n  items?: T[];\r\n\r\n  constructor(initialValues: Partial<ListResultDto<T>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultDto<T> extends ListResultDto<T> {\r\n  totalCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultDto<T>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class LimitedResultRequestDto {\r\n  maxResultCount = 10;\r\n\r\n  constructor(initialValues: Partial<LimitedResultRequestDto> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultRequestDto extends LimitedResultRequestDto {\r\n  skipCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class PagedAndSortedResultRequestDto extends PagedResultRequestDto {\r\n  sorting?: string;\r\n\r\n  constructor(initialValues: Partial<PagedAndSortedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class EntityDto<TKey = string> {\r\n  id?: TKey;\r\n\r\n  constructor(initialValues: Partial<EntityDto<TKey>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityDto<TPrimaryKey = string> extends EntityDto<TPrimaryKey> {\r\n  creationTime?: string | Date;\r\n  creatorId?: string;\r\n\r\n  constructor(initialValues: Partial<CreationAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n\r\n  constructor(\r\n    initialValues: Partial<CreationAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {},\r\n  ) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityDto<TPrimaryKey = string> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  lastModificationTime?: string | Date;\r\n  lastModifierId?: string;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityWithUserDto<TUserDto, TPrimaryKey = string> extends AuditedEntityDto<\r\n  TPrimaryKey\r\n> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityDto<TPrimaryKey = string> extends AuditedEntityDto<TPrimaryKey> {\r\n  isDeleted?: boolean;\r\n  deleterId?: string;\r\n  deletionTime?: Date | string;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends FullAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n  deleter?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleObject {\r\n  extraProperties: ABP.Dictionary<any>;\r\n\r\n  constructor(initialValues: Partial<ExtensibleObject> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class ExtensibleEntityDto<TKey = string> extends ExtensibleObject {\r\n  id: TKey;\r\n\r\n  constructor(initialValues: Partial<ExtensibleEntityDto<TKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleCreationAuditedEntityDto<TPrimaryKey = string> extends ExtensibleEntityDto<\r\n  TPrimaryKey\r\n> {\r\n  creationTime: Date | string;\r\n  creatorId?: string;\r\n\r\n  constructor(initialValues: Partial<ExtensibleCreationAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleAuditedEntityDto<\r\n  TPrimaryKey = string\r\n> extends ExtensibleCreationAuditedEntityDto<TPrimaryKey> {\r\n  lastModificationTime?: Date | string;\r\n  lastModifierId?: string;\r\n\r\n  constructor(initialValues: Partial<ExtensibleAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleAuditedEntityWithUserDto<\r\n  TPrimaryKey = string,\r\n  TUserDto = any\r\n> extends ExtensibleAuditedEntityDto<TPrimaryKey> {\r\n  creator: TUserDto;\r\n  lastModifier: TUserDto;\r\n\r\n  constructor(initialValues: Partial<ExtensibleAuditedEntityWithUserDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleCreationAuditedEntityWithUserDto<\r\n  TPrimaryKey = string,\r\n  TUserDto = any\r\n> extends ExtensibleCreationAuditedEntityDto<TPrimaryKey> {\r\n  creator: TUserDto;\r\n\r\n  constructor(\r\n    initialValues: Partial<ExtensibleCreationAuditedEntityWithUserDto<TPrimaryKey>> = {},\r\n  ) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleFullAuditedEntityDto<\r\n  TPrimaryKey = string\r\n> extends ExtensibleAuditedEntityDto<TPrimaryKey> {\r\n  isDeleted: boolean;\r\n  deleterId?: string;\r\n  deletionTime: Date | string;\r\n\r\n  constructor(initialValues: Partial<ExtensibleFullAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleFullAuditedEntityWithUserDto<\r\n  TPrimaryKey = string,\r\n  TUserDto = any\r\n> extends ExtensibleFullAuditedEntityDto<TPrimaryKey> {\r\n  creator: TUserDto;\r\n  lastModifier: TUserDto;\r\n  deleter: TUserDto;\r\n\r\n  constructor(initialValues: Partial<ExtensibleFullAuditedEntityWithUserDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n","\r\nexport class FindTenantResultDto  {\r\n  success: boolean;\r\n  tenantId?: string;\r\n  name: string;\r\n\r\n  constructor(initialValues: Partial<FindTenantResultDto> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Rest } from '../models/rest';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { RestService } from './rest.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationConfigurationService {\r\n  get apiName(): string {\r\n    return this.store.selectSnapshot(ConfigState.getDeep('environment.application.name'));\r\n  }\r\n\r\n  constructor(private rest: RestService, private store: Store) {}\r\n\r\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/abp/application-configuration',\r\n    };\r\n\r\n    return this.rest.request<null, ApplicationConfiguration.Response>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { GetAppConfiguration, SetEnvironment } from '../actions/config.actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConfigStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getAll() {\r\n    return this.store.selectSnapshot(ConfigState.getAll);\r\n  }\r\n\r\n  getApplicationInfo() {\r\n    return this.store.selectSnapshot(ConfigState.getApplicationInfo);\r\n  }\r\n\r\n  getOne(...args: Parameters<typeof ConfigState.getOne>) {\r\n    return this.store.selectSnapshot(ConfigState.getOne(...args));\r\n  }\r\n\r\n  getDeep(...args: Parameters<typeof ConfigState.getDeep>) {\r\n    return this.store.selectSnapshot(ConfigState.getDeep(...args));\r\n  }\r\n\r\n  getApiUrl(...args: Parameters<typeof ConfigState.getApiUrl>) {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(...args));\r\n  }\r\n\r\n  getFeature(...args: Parameters<typeof ConfigState.getFeature>) {\r\n    return this.store.selectSnapshot(ConfigState.getFeature(...args));\r\n  }\r\n\r\n  getSetting(...args: Parameters<typeof ConfigState.getSetting>) {\r\n    return this.store.selectSnapshot(ConfigState.getSetting(...args));\r\n  }\r\n\r\n  getSettings(...args: Parameters<typeof ConfigState.getSettings>) {\r\n    return this.store.selectSnapshot(ConfigState.getSettings(...args));\r\n  }\r\n\r\n  getGrantedPolicy(...args: Parameters<typeof ConfigState.getGrantedPolicy>) {\r\n    return this.store.selectSnapshot(ConfigState.getGrantedPolicy(...args));\r\n  }\r\n\r\n  getLocalization(...args: Parameters<typeof ConfigState.getLocalization>) {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(...args));\r\n  }\r\n\r\n  dispatchGetAppConfiguration() {\r\n    return this.store.dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  dispatchSetEnvironment(...args: ConstructorParameters<typeof SetEnvironment>) {\r\n    return this.store.dispatch(new SetEnvironment(...args));\r\n  }\r\n}\r\n","import { Injectable, Injector, TemplateRef, Type } from '@angular/core';\r\nimport { ProjectionStrategy } from '../strategies/projection.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentProjectionService {\r\n  constructor(private injector: Injector) {}\r\n\r\n  projectContent<T extends Type<any> | TemplateRef<any>>(\r\n    projectionStrategy: ProjectionStrategy<T>,\r\n    injector = this.injector,\r\n  ) {\r\n    return projectionStrategy.injectContent(injector);\r\n  }\r\n}\r\n","import {\r\n  Compiler,\r\n  Injector,\r\n  ModuleWithProviders,\r\n  NgModuleFactory,\r\n  NgModuleRef,\r\n  StaticProvider,\r\n  Type,\r\n} from '@angular/core';\r\n\r\nexport class LazyModuleFactory<T> extends NgModuleFactory<T> {\r\n  get moduleType(): Type<T> {\r\n    return this.moduleWithProviders.ngModule;\r\n  }\r\n\r\n  constructor(private moduleWithProviders: ModuleWithProviders<T>) {\r\n    super();\r\n  }\r\n\r\n  create(parentInjector: Injector | null): NgModuleRef<T> {\r\n    const injector = Injector.create({\r\n      parent: parentInjector,\r\n      providers: this.moduleWithProviders.providers as StaticProvider[],\r\n    });\r\n\r\n    const compiler = injector.get(Compiler);\r\n    const factory = compiler.compileModuleSync(this.moduleType);\r\n\r\n    return factory.create(injector);\r\n  }\r\n}\r\n","export function isNumber(value: string | number): boolean {\r\n  /* tslint:disable-next-line:triple-equals */\r\n  return value == Number(value);\r\n}\r\n","// tslint:disable: no-bitwise\r\n\r\nexport function uuid(a?: any): string {\r\n  return a\r\n    ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\r\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\r\n}\r\n\r\nexport function generateHash(value: string): number {\r\n  let hashed = 0;\r\n  let charCode: number;\r\n\r\n  for (let i = 0; i < value.length; i++) {\r\n    charCode = value.charCodeAt(i);\r\n    hashed = (hashed << 5) - hashed + charCode;\r\n    hashed |= 0;\r\n  }\r\n  return hashed;\r\n}\r\n\r\nexport function generatePassword(length = 8) {\r\n  length = Math.min(Math.max(4, length), 128);\r\n\r\n  const lowers = 'abcdefghijklmnopqrstuvwxyz';\r\n  const uppers = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  const numbers = '0123456789';\r\n  const specials = '!@#$%&*()_+{}<>?[]./';\r\n  const all = lowers + uppers + numbers + specials;\r\n\r\n  const getRandom = (chrSet: string) => chrSet[Math.floor(Math.random() * chrSet.length)];\r\n\r\n  const password = Array({ length });\r\n  password[0] = getRandom(lowers);\r\n  password[1] = getRandom(uppers);\r\n  password[2] = getRandom(numbers);\r\n  password[3] = getRandom(specials);\r\n\r\n  for (let i = 4; i < length; i++) {\r\n    password[i] = getRandom(all);\r\n  }\r\n\r\n  return password.sort(() => 0.5 - Math.random()).join('');\r\n}\r\n","export class CrossOriginStrategy {\r\n  constructor(public crossorigin: 'anonymous' | 'use-credentials', public integrity?: string) {}\r\n\r\n  setCrossOrigin<T extends HTMLElement>(element: T) {\r\n    if (this.integrity) element.setAttribute('integrity', this.integrity);\r\n    element.setAttribute('crossorigin', this.crossorigin);\r\n  }\r\n}\r\n\r\nexport const CROSS_ORIGIN_STRATEGY = {\r\n  Anonymous(integrity?: string) {\r\n    return new CrossOriginStrategy('anonymous', integrity);\r\n  },\r\n  UseCredentials(integrity?: string) {\r\n    return new CrossOriginStrategy('use-credentials', integrity);\r\n  },\r\n};\r\n","export class DomStrategy {\r\n  constructor(\r\n    public target: HTMLElement = document.head,\r\n    public position: InsertPosition = 'beforeend',\r\n  ) {}\r\n\r\n  insertElement<T extends HTMLElement>(element: T) {\r\n    this.target.insertAdjacentElement(this.position, element);\r\n  }\r\n}\r\n\r\nexport const DOM_STRATEGY = {\r\n  AfterElement(element: HTMLElement) {\r\n    return new DomStrategy(element, 'afterend');\r\n  },\r\n  AppendToBody() {\r\n    return new DomStrategy(document.body, 'beforeend');\r\n  },\r\n  AppendToHead() {\r\n    return new DomStrategy(document.head, 'beforeend');\r\n  },\r\n  BeforeElement(element: HTMLElement) {\r\n    return new DomStrategy(element, 'beforebegin');\r\n  },\r\n  PrependToHead() {\r\n    return new DomStrategy(document.head, 'afterbegin');\r\n  },\r\n};\r\n","import { Observable, Observer } from 'rxjs';\r\nimport { CrossOriginStrategy, CROSS_ORIGIN_STRATEGY } from '../strategies/cross-origin.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from '../strategies/dom.strategy';\r\n\r\nexport function fromLazyLoad<T extends Event>(\r\n  element: HTMLScriptElement | HTMLLinkElement,\r\n  domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n  crossOriginStrategy: CrossOriginStrategy = CROSS_ORIGIN_STRATEGY.Anonymous(),\r\n): Observable<T> {\r\n  crossOriginStrategy.setCrossOrigin(element);\r\n  domStrategy.insertElement(element);\r\n\r\n  return new Observable((observer: Observer<T>) => {\r\n    element.onload = (event: T) => {\r\n      clearCallbacks(element);\r\n      observer.next(event);\r\n      observer.complete();\r\n    };\r\n\r\n    const handleError = createErrorHandler(observer, element);\r\n\r\n    element.onerror = handleError;\r\n    element.onabort = handleError;\r\n    element.onemptied = handleError;\r\n    element.onstalled = handleError;\r\n    element.onsuspend = handleError;\r\n\r\n    return () => {\r\n      clearCallbacks(element);\r\n      observer.complete();\r\n    };\r\n  });\r\n}\r\n\r\nfunction createErrorHandler(observer: Observer<Event>, element: HTMLElement) {\r\n  /* tslint:disable-next-line:only-arrow-functions */\r\n  return function(event: Event | string) {\r\n    clearCallbacks(element);\r\n    element.parentNode.removeChild(element);\r\n    observer.error(event);\r\n  };\r\n}\r\n\r\nfunction clearCallbacks(element: HTMLElement) {\r\n  element.onload = null;\r\n  element.onerror = null;\r\n  element.onabort = null;\r\n  element.onemptied = null;\r\n  element.onstalled = null;\r\n  element.onsuspend = null;\r\n}\r\n","// tslint:disable: max-line-length\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nfunction isFunction(value) {\r\n  return typeof value === 'function';\r\n}\r\n\r\n/**\r\n * @deprecated no longer working, please use SubscriptionService (https://docs.abp.io/en/abp/latest/UI/Angular/Subscription-Service) instead.\r\n */\r\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\r\n  source: Observable<T>,\r\n) => {\r\n  const originalDestroy = componentInstance[destroyMethodName];\r\n  if (isFunction(originalDestroy) === false) {\r\n    throw new Error(\r\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`,\r\n    );\r\n  }\r\n  if (!componentInstance['__takeUntilDestroy']) {\r\n    componentInstance['__takeUntilDestroy'] = new Subject();\r\n\r\n    componentInstance[destroyMethodName] = function() {\r\n      // tslint:disable-next-line: no-unused-expression\r\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\r\n      componentInstance['__takeUntilDestroy'].next(true);\r\n      componentInstance['__takeUntilDestroy'].complete();\r\n    };\r\n  }\r\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { ContentStrategy } from '../strategies/content.strategy';\r\nimport { generateHash } from '../utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DomInsertionService {\r\n  private readonly inserted = new Set<number>();\r\n\r\n  insertContent<T extends HTMLScriptElement | HTMLStyleElement>(\r\n    contentStrategy: ContentStrategy<T>,\r\n  ): T {\r\n    const hash = generateHash(contentStrategy.content);\r\n\r\n    if (this.inserted.has(hash)) return;\r\n\r\n    const element = contentStrategy.insertElement();\r\n    this.inserted.add(hash);\r\n\r\n    return element;\r\n  }\r\n\r\n  removeContent(element: HTMLScriptElement | HTMLStyleElement) {\r\n    const hash = generateHash(element.textContent);\r\n    this.inserted.delete(hash);\r\n\r\n    element.parentNode.removeChild(element);\r\n  }\r\n\r\n  has(content: string): boolean {\r\n    const hash = generateHash(content);\r\n\r\n    return this.inserted.has(hash);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { concat, Observable, of, throwError } from 'rxjs';\r\nimport { delay, retryWhen, shareReplay, take, tap } from 'rxjs/operators';\r\nimport { LoadingStrategy } from '../strategies';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LazyLoadService {\r\n  readonly loaded = new Map<string, HTMLScriptElement | HTMLLinkElement>();\r\n\r\n  load(strategy: LoadingStrategy, retryTimes?: number, retryDelay?: number): Observable<Event> {\r\n    if (this.loaded.has(strategy.path)) return of(new CustomEvent('load'));\r\n\r\n    return strategy.createStream().pipe(\r\n      retryWhen(error$ =>\r\n        concat(\r\n          error$.pipe(delay(retryDelay), take(retryTimes)),\r\n          throwError(new CustomEvent('error')),\r\n        ),\r\n      ),\r\n      tap(() => this.loaded.set(strategy.path, strategy.element)),\r\n      delay(100),\r\n      shareReplay({ bufferSize: 1, refCount: true }),\r\n    );\r\n  }\r\n\r\n  remove(path: string): boolean {\r\n    const element = this.loaded.get(path);\r\n\r\n    if (!element) return false;\r\n\r\n    element.parentNode.removeChild(element);\r\n    this.loaded.delete(path);\r\n    return true;\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const LIST_QUERY_DEBOUNCE_TIME = new InjectionToken<number>('LIST_QUERY_DEBOUNCE_TIME');\r\n","import { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of, ReplaySubject, Subject } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  debounceTime,\r\n  filter,\r\n  shareReplay,\r\n  switchMap,\r\n  takeUntil,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { PagedResultDto } from '../models/dtos';\r\nimport { LIST_QUERY_DEBOUNCE_TIME } from '../tokens/list.token';\r\n\r\n@Injectable()\r\nexport class ListService<QueryParamsType = ABP.PageQueryParams> implements OnDestroy {\r\n  private _filter = '';\r\n  set filter(value: string) {\r\n    this._filter = value;\r\n    this.get();\r\n  }\r\n  get filter(): string {\r\n    return this._filter;\r\n  }\r\n\r\n  private _maxResultCount = 10;\r\n  set maxResultCount(value: number) {\r\n    this._maxResultCount = value;\r\n    this.get();\r\n  }\r\n  get maxResultCount(): number {\r\n    return this._maxResultCount;\r\n  }\r\n\r\n  private _page = 0;\r\n  set page(value: number) {\r\n    if (value === this._page) return;\r\n\r\n    this._page = value;\r\n    this.get();\r\n  }\r\n  get page(): number {\r\n    return this._page;\r\n  }\r\n\r\n  private _sortKey = '';\r\n  set sortKey(value: string) {\r\n    this._sortKey = value;\r\n    this.get();\r\n  }\r\n  get sortKey(): string {\r\n    return this._sortKey;\r\n  }\r\n\r\n  private _sortOrder = '';\r\n  set sortOrder(value: string) {\r\n    this._sortOrder = value;\r\n    this.get();\r\n  }\r\n  get sortOrder(): string {\r\n    return this._sortOrder;\r\n  }\r\n\r\n  private _query$ = new ReplaySubject<QueryParamsType>(1);\r\n\r\n  get query$(): Observable<QueryParamsType> {\r\n    return this._query$\r\n      .asObservable()\r\n      .pipe(debounceTime(this.delay || 300), shareReplay({ bufferSize: 1, refCount: true }));\r\n  }\r\n\r\n  private _isLoading$ = new BehaviorSubject(false);\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  get isLoading$(): Observable<boolean> {\r\n    return this._isLoading$.asObservable();\r\n  }\r\n\r\n  get = () => {\r\n    this._query$.next(({\r\n      filter: this._filter || undefined,\r\n      maxResultCount: this._maxResultCount,\r\n      skipCount: this._page * this._maxResultCount,\r\n      sorting: this._sortOrder ? `${this._sortKey} ${this._sortOrder}` : undefined,\r\n    } as any) as QueryParamsType);\r\n  };\r\n\r\n  constructor(@Optional() @Inject(LIST_QUERY_DEBOUNCE_TIME) private delay: number) {\r\n    this.get();\r\n  }\r\n\r\n  hookToQuery<T extends any>(\r\n    streamCreatorCallback: QueryStreamCreatorCallback<T, QueryParamsType>,\r\n  ): Observable<PagedResultDto<T>> {\r\n    this._isLoading$.next(true);\r\n\r\n    return this.query$.pipe(\r\n      switchMap(query => streamCreatorCallback(query).pipe(catchError(() => of(null)))),\r\n      filter(Boolean),\r\n      tap(() => this._isLoading$.next(false)),\r\n      shareReplay({ bufferSize: 1, refCount: true }),\r\n      takeUntil(this.destroy$),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n  }\r\n}\r\n\r\nexport type QueryStreamCreatorCallback<T, QueryParamsType = ABP.PageQueryParams> = (\r\n  query: QueryParamsType,\r\n) => Observable<PagedResultDto<T>>;\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ProfileState } from '../states';\r\nimport { Profile } from '../models';\r\nimport { GetProfile, UpdateProfile, ChangePassword } from '../actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getProfile() {\r\n    return this.store.selectSnapshot(ProfileState.getProfile);\r\n  }\r\n\r\n  dispatchGetProfile() {\r\n    return this.store.dispatch(new GetProfile());\r\n  }\r\n\r\n  dispatchUpdateProfile(...args: ConstructorParameters<typeof UpdateProfile>) {\r\n    return this.store.dispatch(new UpdateProfile(...args));\r\n  }\r\n\r\n  dispatchChangePassword(...args: ConstructorParameters<typeof ChangePassword>) {\r\n    return this.store.dispatch(new ChangePassword(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  SetLanguage,\r\n  SetRemember,\r\n  SetTenant,\r\n  ModifyOpenedTabCount,\r\n} from '../actions/session.actions';\r\nimport { SessionState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SessionStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getLanguage() {\r\n    return this.store.selectSnapshot(SessionState.getLanguage);\r\n  }\r\n\r\n  getTenant() {\r\n    return this.store.selectSnapshot(SessionState.getTenant);\r\n  }\r\n\r\n  getSessionDetail() {\r\n    return this.store.selectSnapshot(SessionState.getSessionDetail);\r\n  }\r\n\r\n  dispatchSetLanguage(...args: ConstructorParameters<typeof SetLanguage>) {\r\n    return this.store.dispatch(new SetLanguage(...args));\r\n  }\r\n\r\n  dispatchSetTenant(...args: ConstructorParameters<typeof SetTenant>) {\r\n    return this.store.dispatch(new SetTenant(...args));\r\n  }\r\n\r\n  dispatchSetRemember(...args: ConstructorParameters<typeof SetRemember>) {\r\n    return this.store.dispatch(new SetRemember(...args));\r\n  }\r\n\r\n  dispatchModifyOpenedTabCount(...args: ConstructorParameters<typeof ModifyOpenedTabCount>) {\r\n    return this.store.dispatch(new ModifyOpenedTabCount(...args));\r\n  }\r\n}\r\n","import { Injectable, TrackByFunction } from '@angular/core';\r\nimport { O } from 'ts-toolbelt';\r\n\r\nexport const trackBy = <T = any>(key: keyof T): TrackByFunction<T> => (_, item) => item[key];\r\n\r\nexport const trackByDeep = <T = any>(\r\n  ...keys: T extends object ? O.Paths<T> : never\r\n): TrackByFunction<T> => (_, item) => keys.reduce((acc, key) => acc[key], item);\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TrackByService<ItemType = any> {\r\n  by = trackBy;\r\n\r\n  byDeep = trackByDeep;\r\n}\r\n","import { ViewContainerRef } from '@angular/core';\r\n\r\nexport abstract class ContainerStrategy {\r\n  constructor(public containerRef: ViewContainerRef) {}\r\n\r\n  abstract getIndex(): number;\r\n\r\n  prepare(): void {}\r\n}\r\n\r\nexport class ClearContainerStrategy extends ContainerStrategy {\r\n  getIndex(): number {\r\n    return 0;\r\n  }\r\n\r\n  prepare() {\r\n    this.containerRef.clear();\r\n  }\r\n}\r\n\r\nexport class InsertIntoContainerStrategy extends ContainerStrategy {\r\n  constructor(containerRef: ViewContainerRef, private index: number) {\r\n    super(containerRef);\r\n  }\r\n\r\n  getIndex() {\r\n    return Math.min(Math.max(0, this.index), this.containerRef.length);\r\n  }\r\n}\r\n\r\nexport const CONTAINER_STRATEGY = {\r\n  Clear(containerRef: ViewContainerRef) {\r\n    return new ClearContainerStrategy(containerRef);\r\n  },\r\n  Append(containerRef: ViewContainerRef) {\r\n    return new InsertIntoContainerStrategy(containerRef, containerRef.length);\r\n  },\r\n  Prepend(containerRef: ViewContainerRef) {\r\n    return new InsertIntoContainerStrategy(containerRef, 0);\r\n  },\r\n  Insert(containerRef: ViewContainerRef, index: number) {\r\n    return new InsertIntoContainerStrategy(containerRef, index);\r\n  },\r\n};\r\n","export abstract class ContentSecurityStrategy {\r\n  constructor(public nonce?: string) {}\r\n\r\n  abstract applyCSP(element: HTMLScriptElement | HTMLStyleElement): void;\r\n}\r\n\r\nexport class LooseContentSecurityStrategy extends ContentSecurityStrategy {\r\n  constructor(nonce: string) {\r\n    super(nonce);\r\n  }\r\n\r\n  applyCSP(element: HTMLScriptElement | HTMLStyleElement) {\r\n    element.setAttribute('nonce', this.nonce);\r\n  }\r\n}\r\n\r\nexport class NoContentSecurityStrategy extends ContentSecurityStrategy {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  applyCSP(_: HTMLScriptElement | HTMLStyleElement) {}\r\n}\r\n\r\nexport const CONTENT_SECURITY_STRATEGY = {\r\n  Loose(nonce: string) {\r\n    return new LooseContentSecurityStrategy(nonce);\r\n  },\r\n  None() {\r\n    return new NoContentSecurityStrategy();\r\n  },\r\n};\r\n","import { ContentSecurityStrategy, CONTENT_SECURITY_STRATEGY } from './content-security.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class ContentStrategy<T extends HTMLScriptElement | HTMLStyleElement = any> {\r\n  constructor(\r\n    public content: string,\r\n    protected domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n    protected contentSecurityStrategy: ContentSecurityStrategy = CONTENT_SECURITY_STRATEGY.None(),\r\n  ) {}\r\n\r\n  abstract createElement(): T;\r\n\r\n  insertElement(): T {\r\n    const element = this.createElement();\r\n\r\n    this.contentSecurityStrategy.applyCSP(element);\r\n    this.domStrategy.insertElement(element);\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class StyleContentStrategy extends ContentStrategy<HTMLStyleElement> {\r\n  createElement(): HTMLStyleElement {\r\n    const element = document.createElement('style');\r\n    element.textContent = this.content;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class ScriptContentStrategy extends ContentStrategy<HTMLScriptElement> {\r\n  createElement(): HTMLScriptElement {\r\n    const element = document.createElement('script');\r\n    element.textContent = this.content;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport const CONTENT_STRATEGY = {\r\n  AppendScriptToBody(content: string) {\r\n    return new ScriptContentStrategy(content, DOM_STRATEGY.AppendToBody());\r\n  },\r\n  AppendScriptToHead(content: string) {\r\n    return new ScriptContentStrategy(content, DOM_STRATEGY.AppendToHead());\r\n  },\r\n  AppendStyleToHead(content: string) {\r\n    return new StyleContentStrategy(content, DOM_STRATEGY.AppendToHead());\r\n  },\r\n  PrependStyleToHead(content: string) {\r\n    return new StyleContentStrategy(content, DOM_STRATEGY.PrependToHead());\r\n  },\r\n};\r\n","import { ComponentRef, TemplateRef, Type } from '@angular/core';\r\nimport { InferredContextOf, InferredInstanceOf } from '../models';\r\n\r\nexport abstract class ContextStrategy<T = any> {\r\n  constructor(public context: Partial<ContextType<T>>) {}\r\n\r\n  /* tslint:disable-next-line:no-unused-variable */\r\n  setContext(componentRef?: ComponentRef<InferredInstanceOf<T>>): Partial<ContextType<T>> {\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport class NoContextStrategy<\r\n  T extends Type<any> | TemplateRef<any> = any\r\n> extends ContextStrategy<T> {\r\n  constructor() {\r\n    super(undefined);\r\n  }\r\n}\r\n\r\nexport class ComponentContextStrategy<T extends Type<any> = any> extends ContextStrategy<T> {\r\n  setContext(componentRef: ComponentRef<InferredInstanceOf<T>>): Partial<InferredInstanceOf<T>> {\r\n    Object.keys(this.context).forEach(key => (componentRef.instance[key] = this.context[key]));\r\n    componentRef.changeDetectorRef.detectChanges();\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport class TemplateContextStrategy<T extends TemplateRef<any> = any> extends ContextStrategy<T> {\r\n  setContext(): Partial<InferredContextOf<T>> {\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport const CONTEXT_STRATEGY = {\r\n  None<T extends Type<any> | TemplateRef<any> = any>() {\r\n    return new NoContextStrategy<T>();\r\n  },\r\n  Component<T extends Type<any> = any>(context: Partial<InferredInstanceOf<T>>) {\r\n    return new ComponentContextStrategy<T>(context);\r\n  },\r\n  Template<T extends TemplateRef<any> = any>(context: Partial<InferredContextOf<T>>) {\r\n    return new TemplateContextStrategy<T>(context);\r\n  },\r\n};\r\n\r\ntype ContextType<T> = T extends Type<infer U> | TemplateRef<infer U> ? U : never;\r\n","import { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { fromLazyLoad } from '../utils';\r\nimport { CrossOriginStrategy, CROSS_ORIGIN_STRATEGY } from './cross-origin.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class LoadingStrategy<T extends HTMLScriptElement | HTMLLinkElement = any> {\r\n  element: T;\r\n\r\n  constructor(\r\n    public path: string,\r\n    protected domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n    protected crossOriginStrategy: CrossOriginStrategy = CROSS_ORIGIN_STRATEGY.Anonymous(),\r\n  ) {}\r\n\r\n  abstract createElement(): T;\r\n\r\n  createStream<E extends Event>(): Observable<E> {\r\n    this.element = this.createElement();\r\n\r\n    return of(null).pipe(\r\n      switchMap(() => fromLazyLoad<E>(this.element, this.domStrategy, this.crossOriginStrategy)),\r\n    );\r\n  }\r\n}\r\n\r\nexport class ScriptLoadingStrategy extends LoadingStrategy<HTMLScriptElement> {\r\n  constructor(src: string, domStrategy?: DomStrategy, crossOriginStrategy?: CrossOriginStrategy) {\r\n    super(src, domStrategy, crossOriginStrategy);\r\n  }\r\n\r\n  createElement(): HTMLScriptElement {\r\n    const element = document.createElement('script');\r\n    element.src = this.path;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class StyleLoadingStrategy extends LoadingStrategy<HTMLLinkElement> {\r\n  constructor(href: string, domStrategy?: DomStrategy, crossOriginStrategy?: CrossOriginStrategy) {\r\n    super(href, domStrategy, crossOriginStrategy);\r\n  }\r\n\r\n  createElement(): HTMLLinkElement {\r\n    const element = document.createElement('link');\r\n    element.rel = 'stylesheet';\r\n    element.href = this.path;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport const LOADING_STRATEGY = {\r\n  AppendAnonymousScriptToBody(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToBody(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  AppendAnonymousScriptToHead(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  AppendAnonymousStyleToHead(src: string, integrity?: string) {\r\n    return new StyleLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  PrependAnonymousScriptToHead(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.PrependToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  PrependAnonymousStyleToHead(src: string, integrity?: string) {\r\n    return new StyleLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.PrependToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n};\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  Injector,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { InferredContextOf, InferredInstanceOf } from '../models/utility';\r\nimport { ContainerStrategy, CONTAINER_STRATEGY } from './container.strategy';\r\nimport { ContextStrategy, CONTEXT_STRATEGY } from './context.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class ProjectionStrategy<T = any> {\r\n  constructor(public content: T) {}\r\n\r\n  abstract injectContent(injector: Injector): ComponentRefOrEmbeddedViewRef<T>;\r\n}\r\n\r\nexport class ComponentProjectionStrategy<T extends Type<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    component: T,\r\n    private containerStrategy: ContainerStrategy,\r\n    private contextStrategy: ContextStrategy = CONTEXT_STRATEGY.None(),\r\n  ) {\r\n    super(component);\r\n  }\r\n\r\n  injectContent(injector: Injector) {\r\n    this.containerStrategy.prepare();\r\n\r\n    const resolver = injector.get(ComponentFactoryResolver) as ComponentFactoryResolver;\r\n    const factory = resolver.resolveComponentFactory<InferredInstanceOf<T>>(this.content);\r\n\r\n    const componentRef = this.containerStrategy.containerRef.createComponent(\r\n      factory,\r\n      this.containerStrategy.getIndex(),\r\n      injector,\r\n    );\r\n    this.contextStrategy.setContext(componentRef);\r\n\r\n    return componentRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport class RootComponentProjectionStrategy<T extends Type<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    component: T,\r\n    private contextStrategy: ContextStrategy = CONTEXT_STRATEGY.None(),\r\n    private domStrategy: DomStrategy = DOM_STRATEGY.AppendToBody(),\r\n  ) {\r\n    super(component);\r\n  }\r\n\r\n  injectContent(injector: Injector) {\r\n    const appRef = injector.get(ApplicationRef);\r\n    const resolver = injector.get(ComponentFactoryResolver) as ComponentFactoryResolver;\r\n    const componentRef = resolver\r\n      .resolveComponentFactory<InferredInstanceOf<T>>(this.content)\r\n      .create(injector);\r\n\r\n    this.contextStrategy.setContext(componentRef);\r\n\r\n    appRef.attachView(componentRef.hostView);\r\n    const element: HTMLElement = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0];\r\n    this.domStrategy.insertElement(element);\r\n\r\n    return componentRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport class TemplateProjectionStrategy<T extends TemplateRef<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    templateRef: T,\r\n    private containerStrategy: ContainerStrategy,\r\n    private contextStrategy = CONTEXT_STRATEGY.None(),\r\n  ) {\r\n    super(templateRef);\r\n  }\r\n\r\n  injectContent() {\r\n    this.containerStrategy.prepare();\r\n\r\n    const embeddedViewRef = this.containerStrategy.containerRef.createEmbeddedView(\r\n      this.content,\r\n      this.contextStrategy.context,\r\n      this.containerStrategy.getIndex(),\r\n    );\r\n    embeddedViewRef.detectChanges();\r\n\r\n    return embeddedViewRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport const PROJECTION_STRATEGY = {\r\n  AppendComponentToBody<T extends Type<unknown>>(\r\n    component: T,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new RootComponentProjectionStrategy<T>(\r\n      component,\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  AppendComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Append(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  AppendTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Append(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n  PrependComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Prepend(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  PrependTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Prepend(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n  ProjectComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Clear(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  ProjectTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Clear(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n};\r\n\r\ntype ComponentRefOrEmbeddedViewRef<T> = T extends Type<infer U>\r\n  ? ComponentRef<U>\r\n  : T extends TemplateRef<infer C>\r\n  ? EmbeddedViewRef<C>\r\n  : never;\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface MinAgeError {\r\n  minAge: {\r\n    age: number;\r\n  };\r\n}\r\n\r\nexport interface MinAgeOptions {\r\n  age?: number;\r\n}\r\n\r\nexport function validateMinAge({ age = 18 }: MinAgeOptions = {}): ValidatorFn {\r\n  return (control: AbstractControl): MinAgeError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    return isValidMinAge(control.value, age) ? null : { minAge: { age } };\r\n  };\r\n}\r\n\r\nfunction isValidMinAge(value: string | number, minAge: number) {\r\n  const date = new Date();\r\n  date.setFullYear(date.getFullYear() - minAge);\r\n  date.setHours(23, 59, 59, 999);\r\n\r\n  return Number(new Date(value)) <= date.valueOf();\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface CreditCardError {\r\n  creditCard: true;\r\n}\r\n\r\nexport function validateCreditCard(): ValidatorFn {\r\n  return (control: AbstractControl): CreditCardError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    return isValidCreditCard(String(control.value)) ? null : { creditCard: true };\r\n  };\r\n}\r\n\r\nfunction isValidCreditCard(value: string): boolean {\r\n  value = value.replace(/[ -]/g, '');\r\n\r\n  if (!/^[0-9]{13,19}$/.test(value)) return false;\r\n\r\n  let checksum = 0;\r\n  let multiplier = 1;\r\n\r\n  for (let i = value.length; i > 0; i--) {\r\n    const digit = Number(value[i - 1]) * multiplier;\r\n    /* tslint:disable-next-line:no-bitwise */\r\n    checksum += (digit % 10) + ~~(digit / 10);\r\n\r\n    multiplier = (multiplier * 2) % 3;\r\n  }\r\n\r\n  return checksum % 10 === 0;\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface RangeError {\r\n  range: {\r\n    max: number;\r\n    min: number;\r\n  };\r\n}\r\n\r\nexport interface RangeOptions {\r\n  maximum?: number;\r\n  minimum?: number;\r\n}\r\n\r\nexport function validateRange({ maximum = Infinity, minimum = 0 }: RangeOptions = {}): ValidatorFn {\r\n  return (control: AbstractControl): RangeError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    const value = Number(control.value);\r\n    return getMinError(value, minimum, maximum) || getMaxError(value, maximum, minimum);\r\n  };\r\n}\r\n\r\nfunction getMaxError(value: number, max: number, min: number): RangeError {\r\n  return value > max ? { range: { max, min } } : null;\r\n}\r\n\r\nfunction getMinError(value: number, min: number, max: number): RangeError {\r\n  return value < min ? { range: { min, max } } : null;\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface RequiredError {\r\n  required: true;\r\n}\r\n\r\nexport interface RequiredOptions {\r\n  allowEmptyStrings?: boolean;\r\n}\r\n\r\nexport function validateRequired({ allowEmptyStrings }: RequiredOptions = {}): ValidatorFn {\r\n  return (control: AbstractControl): RequiredError | null => {\r\n    return control.pristine || isValidRequired(control.value, allowEmptyStrings)\r\n      ? null\r\n      : { required: true };\r\n  };\r\n}\r\n\r\nfunction isValidRequired(value: any, allowEmptyStrings: boolean): boolean {\r\n  if (value || value === 0 || value === false) return true;\r\n\r\n  if (allowEmptyStrings && value === '') return true;\r\n\r\n  return false;\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface StringLengthError {\r\n  maxlength?: {\r\n    requiredLength: number;\r\n  };\r\n  minlength?: {\r\n    requiredLength: number;\r\n  };\r\n}\r\n\r\nexport interface StringLengthOptions {\r\n  maximumLength?: number;\r\n  minimumLength?: number;\r\n}\r\n\r\nexport function validateStringLength({\r\n  maximumLength = Infinity,\r\n  minimumLength = 0,\r\n}: StringLengthOptions = {}): ValidatorFn {\r\n  return (control: AbstractControl): StringLengthError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    const value = String(control.value);\r\n\r\n    return getMinLengthError(value, minimumLength) || getMaxLengthError(value, maximumLength);\r\n  };\r\n}\r\n\r\nfunction getMaxLengthError(value: string, requiredLength: number): StringLengthError {\r\n  return value.length > requiredLength ? { maxlength: { requiredLength } } : null;\r\n}\r\n\r\nfunction getMinLengthError(value: string, requiredLength: number): StringLengthError {\r\n  return value.length < requiredLength ? { minlength: { requiredLength } } : null;\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface UrlError {\r\n  url: true;\r\n}\r\n\r\nexport function validateUrl(): ValidatorFn {\r\n  return (control: AbstractControl): UrlError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    return isValidUrl(control.value) ? null : { url: true };\r\n  };\r\n}\r\n\r\nfunction isValidUrl(value: string): boolean {\r\n  if (/^http(s)?:\\/\\/[^/]/.test(value) || /^ftp:\\/\\/[^/]/.test(value)) {\r\n    const a = document.createElement('a');\r\n    a.href = value;\r\n    return !!a.host;\r\n  }\r\n\r\n  return false;\r\n}\r\n","import { Validators } from '@angular/forms';\r\nimport { validateMinAge } from './age.validator';\r\nimport { validateCreditCard } from './credit-card.validator';\r\nimport { validateRange } from './range.validator';\r\nimport { validateRequired } from './required.validator';\r\nimport { validateStringLength } from './string-length.validator';\r\nimport { validateUrl } from './url.validator';\r\nexport * from './age.validator';\r\nexport * from './credit-card.validator';\r\nexport * from './range.validator';\r\nexport * from './required.validator';\r\nexport * from './string-length.validator';\r\nexport * from './url.validator';\r\n\r\nexport const AbpValidators = {\r\n  creditCard: validateCreditCard,\r\n  emailAddress: () => Validators.email,\r\n  minAge: validateMinAge,\r\n  range: validateRange,\r\n  required: validateRequired,\r\n  stringLength: validateStringLength,\r\n  url: validateUrl,\r\n};\r\n","import { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { ConfigStateService } from '../services';\r\n\r\nexport function getShortDateFormat(configStateService: ConfigStateService) {\r\n  const dateTimeFormat = configStateService.getDeep(\r\n    'localization.currentCulture.dateTimeFormat',\r\n  ) as ApplicationConfiguration.DateTimeFormat;\r\n\r\n  return dateTimeFormat.shortDatePattern;\r\n}\r\n\r\nexport function getShortTimeFormat(configStateService: ConfigStateService) {\r\n  const dateTimeFormat = configStateService.getDeep(\r\n    'localization.currentCulture.dateTimeFormat',\r\n  ) as ApplicationConfiguration.DateTimeFormat;\r\n\r\n  return dateTimeFormat.shortTimePattern.replace('tt', 'a');\r\n}\r\n\r\nexport function getShortDateShortTimeFormat(configStateService: ConfigStateService) {\r\n  const dateTimeFormat = configStateService.getDeep(\r\n    'localization.currentCulture.dateTimeFormat',\r\n  ) as ApplicationConfiguration.DateTimeFormat;\r\n\r\n  return `${dateTimeFormat.shortDatePattern} ${dateTimeFormat.shortTimePattern.replace('tt', 'a')}`;\r\n}\r\n","import { ABP } from '../models/common';\r\nimport { isNumber } from './number-utils';\r\n\r\nexport function mapEnumToOptions<T>(_enum: T): ABP.Option<T>[] {\r\n  const options: ABP.Option<T>[] = [];\r\n\r\n  for (const member in _enum)\r\n    if (!isNumber(member))\r\n      options.push({\r\n        key: member,\r\n        value: _enum[member],\r\n      });\r\n\r\n  return options;\r\n}\r\n"]}