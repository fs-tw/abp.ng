{"version":3,"file":"abp-ng.core.js","sources":["../../../packages/core/src/lib/abstracts/ng-model.component.ts","../../../packages/core/src/lib/actions/config.actions.ts","../../../packages/core/src/lib/actions/loader.actions.ts","../../../packages/core/src/lib/actions/profile.actions.ts","../../../packages/core/src/lib/actions/replaceable-components.actions.ts","../../../packages/core/src/lib/actions/rest.actions.ts","../../../packages/core/src/lib/actions/session.actions.ts","../../../packages/core/src/lib/utils/string-utils.ts","../../../packages/core/src/lib/states/session.state.ts","../../../packages/core/src/lib/states/config.state.ts","../../../packages/core/src/lib/utils/common-utils.ts","../../../packages/core/src/lib/constants/different-locales.ts","../../../packages/core/src/lib/tokens/options.token.ts","../../../packages/core/src/lib/services/rest.service.ts","../../../packages/core/src/lib/strategies/auth-flow.strategy.ts","../../../packages/core/src/lib/services/auth.service.ts","../../../packages/core/src/lib/utils/object-utils.ts","../../../packages/core/src/lib/utils/environment-utils.ts","../../../packages/core/src/lib/services/multi-tenancy.service.ts","../../../packages/core/src/lib/utils/multi-tenancy-utils.ts","../../../packages/core/src/lib/utils/initial-utils.ts","../../../packages/core/src/lib/utils/localization-utils.ts","../../../packages/core/src/lib/services/localization.service.ts","../../../packages/core/src/lib/utils/array-utils.ts","../../../packages/core/src/lib/utils/tree-utils.ts","../../../packages/core/src/lib/services/routes.service.ts","../../../packages/core/src/lib/services/subscription.service.ts","../../../packages/core/src/lib/states/replaceable-components.state.ts","../../../packages/core/src/lib/utils/route-utils.ts","../../../packages/core/src/lib/components/dynamic-layout.component.ts","../../../packages/core/src/lib/components/replaceable-route-container.component.ts","../../../packages/core/src/lib/components/router-outlet.component.ts","../../../packages/core/src/lib/directives/autofocus.directive.ts","../../../packages/core/src/lib/directives/debounce.directive.ts","../../../packages/core/src/lib/directives/ellipsis.directive.ts","../../../packages/core/src/lib/directives/for.directive.ts","../../../packages/core/src/lib/directives/form-submit.directive.ts","../../../packages/core/src/lib/directives/init.directive.ts","../../../packages/core/src/lib/services/profile.service.ts","../../../packages/core/src/lib/states/profile.state.ts","../../../packages/core/src/lib/directives/permission.directive.ts","../../../packages/core/src/lib/directives/replaceable-template.directive.ts","../../../packages/core/src/lib/directives/stop-propagation.directive.ts","../../../packages/core/src/lib/directives/visibility.directive.ts","../../../packages/core/src/lib/handlers/oauth-configuration.handler.ts","../../../packages/core/src/lib/handlers/routes.handler.ts","../../../packages/core/src/lib/interceptors/api.interceptor.ts","../../../packages/core/src/lib/pipes/localization.pipe.ts","../../../packages/core/src/lib/localization.module.ts","../../../packages/core/src/lib/pipes/sort.pipe.ts","../../../packages/core/src/lib/plugins/config.plugin.ts","../../../packages/core/src/lib/providers/locale.provider.ts","../../../packages/core/src/lib/utils/date-extensions.ts","../../../packages/core/src/lib/core.module.ts","../../../packages/core/src/lib/guards/auth.guard.ts","../../../packages/core/src/lib/guards/permission.guard.ts","../../../packages/core/src/lib/models/dtos.ts","../../../packages/core/src/lib/models/find-tenant-result-dto.ts","../../../packages/core/src/lib/services/application-configuration.service.ts","../../../packages/core/src/lib/services/config-state.service.ts","../../../packages/core/src/lib/services/content-projection.service.ts","../../../packages/core/src/lib/utils/date-utils.ts","../../../packages/core/src/lib/utils/factory-utils.ts","../../../packages/core/src/lib/utils/number-utils.ts","../../../packages/core/src/lib/utils/form-utils.ts","../../../packages/core/src/lib/utils/generator-utils.ts","../../../packages/core/src/lib/strategies/cross-origin.strategy.ts","../../../packages/core/src/lib/strategies/dom.strategy.ts","../../../packages/core/src/lib/utils/lazy-load-utils.ts","../../../packages/core/src/lib/utils/rxjs-utils.ts","../../../packages/core/src/lib/services/dom-insertion.service.ts","../../../packages/core/src/lib/services/lazy-load.service.ts","../../../packages/core/src/lib/tokens/list.token.ts","../../../packages/core/src/lib/services/list.service.ts","../../../packages/core/src/lib/services/profile-state.service.ts","../../../packages/core/src/lib/services/session-state.service.ts","../../../packages/core/src/lib/services/track-by.service.ts","../../../packages/core/src/lib/strategies/container.strategy.ts","../../../packages/core/src/lib/strategies/content-security.strategy.ts","../../../packages/core/src/lib/strategies/content.strategy.ts","../../../packages/core/src/lib/strategies/context.strategy.ts","../../../packages/core/src/lib/strategies/loading.strategy.ts","../../../packages/core/src/lib/strategies/projection.strategy.ts","../../../packages/core/src/lib/validators/age.validator.ts","../../../packages/core/src/lib/validators/credit-card.validator.ts","../../../packages/core/src/lib/validators/range.validator.ts","../../../packages/core/src/lib/validators/required.validator.ts","../../../packages/core/src/lib/validators/string-length.validator.ts","../../../packages/core/src/lib/validators/url.validator.ts","../../../packages/core/src/lib/validators/index.ts","../../../packages/core/src/public-api.ts","../../../packages/core/src/abp-ng.core.ts"],"sourcesContent":["import { ControlValueAccessor } from '@angular/forms';\r\nimport { ChangeDetectorRef, Component, Injector, Input } from '@angular/core';\r\n\r\n// Not an abstract class on purpose. Do not change!\r\n// tslint:disable-next-line: use-component-selector\r\n@Component({ template: '' })\r\nexport class AbstractNgModelComponent<T = any, U = T> implements ControlValueAccessor {\r\n  protected _value: T;\r\n  protected cdRef: ChangeDetectorRef;\r\n  onChange: (value: T) => {};\r\n  onTouched: () => {};\r\n\r\n  @Input()\r\n  disabled: boolean;\r\n\r\n  @Input()\r\n  readonly: boolean;\r\n\r\n  @Input()\r\n  valueFn: (value: U, previousValue?: T) => T = value => (value as any) as T;\r\n\r\n  @Input()\r\n  valueLimitFn: (value: T, previousValue?: T) => any = value => false;\r\n\r\n  @Input()\r\n  set value(value: T) {\r\n    value = this.valueFn((value as any) as U, this._value);\r\n\r\n    if (this.valueLimitFn(value, this._value) !== false || this.readonly) return;\r\n\r\n    this._value = value;\r\n    this.notifyValueChange();\r\n  }\r\n\r\n  get value(): T {\r\n    return this._value || this.defaultValue;\r\n  }\r\n\r\n  get defaultValue(): T {\r\n    return this._value;\r\n  }\r\n\r\n  constructor(public injector: Injector) {\r\n    // tslint:disable-next-line: deprecation\r\n    this.cdRef = injector.get(ChangeDetectorRef);\r\n  }\r\n\r\n  notifyValueChange(): void {\r\n    if (this.onChange) {\r\n      this.onChange(this.value);\r\n    }\r\n  }\r\n\r\n  writeValue(value: T): void {\r\n    this._value = this.valueLimitFn(value, this._value) || value;\r\n    setTimeout(() => this.cdRef.markForCheck(), 0);\r\n  }\r\n\r\n  registerOnChange(fn: any): void {\r\n    this.onChange = fn;\r\n  }\r\n\r\n  registerOnTouched(fn: any): void {\r\n    this.onTouched = fn;\r\n  }\r\n\r\n  setDisabledState(isDisabled: boolean): void {\r\n    this.disabled = isDisabled;\r\n  }\r\n}\r\n","import { Config } from '../models/config';\r\n\r\nexport class GetAppConfiguration {\r\n  static readonly type = '[Config] Get App Configuration';\r\n}\r\n\r\nexport class SetEnvironment {\r\n  static readonly type = '[Config] Set Environment';\r\n  constructor(public environment: Config.Environment) {}\r\n}\r\n","import { HttpRequest } from '@angular/common/http';\r\n\r\nexport class StartLoader {\r\n  static readonly type = '[Loader] Start';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n\r\nexport class StopLoader {\r\n  static readonly type = '[Loader] Stop';\r\n  constructor(public payload: HttpRequest<any>) {}\r\n}\r\n","import { Profile } from '../models';\r\n\r\nexport class GetProfile {\r\n  static readonly type = '[Profile] Get';\r\n}\r\n\r\nexport class UpdateProfile {\r\n  static readonly type = '[Profile] Update';\r\n  constructor(public payload: Profile.Response) {}\r\n}\r\n\r\nexport class ChangePassword {\r\n  static readonly type = '[Profile] Change Password';\r\n  constructor(public payload: Profile.ChangePasswordRequest) {}\r\n}\r\n","import { ReplaceableComponents } from '../models/replaceable-components';\r\n\r\n/**\r\n * @see usage: https://github.com/abpframework/abp/pull/2522#issue-358333183\r\n */\r\nexport class AddReplaceableComponent {\r\n  static readonly type = '[ReplaceableComponents] Add';\r\n  constructor(\r\n    public payload: ReplaceableComponents.ReplaceableComponent,\r\n    public reload?: boolean,\r\n  ) {}\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\n\r\nexport class RestOccurError {\r\n  static readonly type = '[Rest] Error';\r\n  constructor(public payload: HttpErrorResponse | any) {}\r\n}\r\n","import { ABP } from '../models';\r\n\r\nexport class SetLanguage {\r\n  static readonly type = '[Session] Set Language';\r\n  constructor(public payload: string, public dispatchAppConfiguration?: boolean) {}\r\n}\r\nexport class SetTenant {\r\n  static readonly type = '[Session] Set Tenant';\r\n  constructor(public payload: ABP.BasicItem) {}\r\n}\r\nexport class ModifyOpenedTabCount {\r\n  static readonly type = '[Session] Modify Opened Tab Count';\r\n  constructor(public operation: 'increase' | 'decrease') {}\r\n}\r\nexport class SetRemember {\r\n  static readonly type = '[Session] Set Remember';\r\n  constructor(public payload: boolean) {}\r\n}\r\n","export function createTokenParser(format: string) {\r\n  return (string: string) => {\r\n    const tokens: string[] = [];\r\n    const regex = format.replace(/\\./g, '\\\\.').replace(/\\{\\s?([0-9a-zA-Z]+)\\s?\\}/g, (_, token) => {\r\n      tokens.push(token);\r\n      return '(.+)';\r\n    });\r\n\r\n    const matches = (string.match(regex) || []).slice(1);\r\n\r\n    return matches.reduce((acc, v, i) => {\r\n      const key = tokens[i];\r\n      acc[key] = [...(acc[key] || []), v].filter(Boolean);\r\n      return acc;\r\n    }, {} as Record<string, string[]>);\r\n  };\r\n}\r\n\r\nexport function interpolate(text: string, params: string[]) {\r\n  return text\r\n    .replace(/(['\"]?\\{\\s*(\\d+)\\s*\\}['\"]?)/g, (_, match, digit) => params[digit] ?? match)\r\n    .replace(/\\s+/g, ' ');\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  Action,\r\n  Actions,\r\n  ofActionSuccessful,\r\n  Selector,\r\n  State,\r\n  StateContext,\r\n  Store,\r\n} from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { fromEvent } from 'rxjs';\r\nimport { take } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport {\r\n  ModifyOpenedTabCount,\r\n  SetLanguage,\r\n  SetRemember,\r\n  SetTenant,\r\n} from '../actions/session.actions';\r\nimport { ABP, Session } from '../models';\r\n\r\n@State<Session.State>({\r\n  name: 'SessionState',\r\n  defaults: { sessionDetail: { openedTabCount: 0 } } as Session.State,\r\n})\r\n@Injectable()\r\nexport class SessionState {\r\n  @Selector()\r\n  static getLanguage({ language }: Session.State): string {\r\n    return language;\r\n  }\r\n\r\n  @Selector()\r\n  static getTenant({ tenant }: Session.State): ABP.BasicItem {\r\n    return tenant;\r\n  }\r\n\r\n  @Selector()\r\n  static getSessionDetail({ sessionDetail }: Session.State): Session.SessionDetail {\r\n    return sessionDetail;\r\n  }\r\n\r\n  constructor(private oAuthService: OAuthService, private store: Store, private actions: Actions) {\r\n    actions\r\n      .pipe(ofActionSuccessful(GetAppConfiguration))\r\n      .pipe(take(1))\r\n      .subscribe(() => {\r\n        const sessionDetail = this.store.selectSnapshot(SessionState)?.sessionDetail || {};\r\n\r\n        const fiveMinutesBefore = new Date().valueOf() - 5 * 60 * 1000;\r\n\r\n        if (\r\n          sessionDetail.lastExitTime &&\r\n          sessionDetail.openedTabCount === 0 &&\r\n          this.oAuthService.hasValidAccessToken() &&\r\n          sessionDetail.remember === false &&\r\n          sessionDetail.lastExitTime < fiveMinutesBefore\r\n        ) {\r\n          this.oAuthService.logOut();\r\n        }\r\n\r\n        this.store.dispatch(new ModifyOpenedTabCount('increase'));\r\n\r\n        fromEvent(window, 'unload').subscribe(event => {\r\n          this.store.dispatch(new ModifyOpenedTabCount('decrease'));\r\n        });\r\n      });\r\n  }\r\n\r\n  @Action(SetLanguage)\r\n  setLanguage(\r\n    { patchState, dispatch }: StateContext<Session.State>,\r\n    { payload, dispatchAppConfiguration = true }: SetLanguage,\r\n  ) {\r\n    patchState({\r\n      language: payload,\r\n    });\r\n\r\n    if (dispatchAppConfiguration) return dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  @Action(SetTenant)\r\n  setTenant({ patchState }: StateContext<Session.State>, { payload }: SetTenant) {\r\n    patchState({\r\n      tenant: payload,\r\n    });\r\n  }\r\n\r\n  @Action(SetRemember)\r\n  setRemember(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { payload: remember }: SetRemember,\r\n  ) {\r\n    const { sessionDetail } = getState();\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        ...sessionDetail,\r\n        remember,\r\n      },\r\n    });\r\n  }\r\n\r\n  @Action(ModifyOpenedTabCount)\r\n  modifyOpenedTabCount(\r\n    { getState, patchState }: StateContext<Session.State>,\r\n    { operation }: ModifyOpenedTabCount,\r\n  ) {\r\n    // tslint:disable-next-line: prefer-const\r\n    let { openedTabCount, lastExitTime, ...detail } =\r\n      getState().sessionDetail || ({ openedTabCount: 0 } as Session.SessionDetail);\r\n\r\n    if (operation === 'increase') {\r\n      openedTabCount++;\r\n    } else if (operation === 'decrease') {\r\n      openedTabCount--;\r\n      lastExitTime = new Date().valueOf();\r\n    }\r\n\r\n    if (!openedTabCount || openedTabCount < 0) {\r\n      openedTabCount = 0;\r\n    }\r\n\r\n    patchState({\r\n      sessionDetail: {\r\n        openedTabCount,\r\n        lastExitTime,\r\n        ...detail,\r\n      },\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Action, createSelector, Selector, State, StateContext, Store } from '@ngxs/store';\r\nimport { of, throwError } from 'rxjs';\r\nimport { catchError, switchMap, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { GetAppConfiguration, SetEnvironment } from '../actions/config.actions';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { SetLanguage } from '../actions/session.actions';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { Config } from '../models/config';\r\nimport { interpolate } from '../utils/string-utils';\r\nimport { SessionState } from './session.state';\r\n\r\n@State<Config.State>({\r\n  name: 'ConfigState',\r\n  defaults: {} as Config.State,\r\n})\r\n@Injectable()\r\nexport class ConfigState {\r\n  @Selector()\r\n  static getAll(state: Config.State) {\r\n    return state;\r\n  }\r\n\r\n  @Selector()\r\n  static getApplicationInfo(state: Config.State): Config.Application {\r\n    return state.environment.application || ({} as Config.Application);\r\n  }\r\n\r\n  static getOne(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return state[key];\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getDeep(keys: string[] | string) {\r\n    if (typeof keys === 'string') {\r\n      keys = keys.split('.');\r\n    }\r\n\r\n    if (!Array.isArray(keys)) {\r\n      throw new Error('The argument must be a dot string or an string array.');\r\n    }\r\n\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return (keys as string[]).reduce((acc, val) => {\r\n        if (acc) {\r\n          return acc[val];\r\n        }\r\n\r\n        return undefined;\r\n      }, state);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getApiUrl(key?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): string => {\r\n      return (state.environment.apis[key || 'default'] || state.environment.apis.default).url;\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getFeature(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return snq(() => state.features.values[key]);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSetting(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      return snq(() => state.setting.values[key]);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getSettings(keyword?: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State) => {\r\n      const settings = snq(() => state.setting.values, {});\r\n\r\n      if (!keyword) return settings;\r\n\r\n      const keysFound = Object.keys(settings).filter(key => key.indexOf(keyword) > -1);\r\n\r\n      return keysFound.reduce((acc, key) => {\r\n        acc[key] = settings[key];\r\n        return acc;\r\n      }, {});\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getGrantedPolicy(key: string) {\r\n    const selector = createSelector([ConfigState], (state: Config.State): boolean => {\r\n      if (!key) return true;\r\n      const getPolicy = (k: string) => snq(() => state.auth.grantedPolicies[k], false);\r\n\r\n      const orRegexp = /\\|\\|/g;\r\n      const andRegexp = /&&/g;\r\n\r\n      // TODO: Allow combination of ANDs & ORs\r\n      if (orRegexp.test(key)) {\r\n        const keys = key.split('||').filter(Boolean);\r\n\r\n        if (keys.length < 2) return false;\r\n\r\n        return keys.some(k => getPolicy(k.trim()));\r\n      } else if (andRegexp.test(key)) {\r\n        const keys = key.split('&&').filter(Boolean);\r\n\r\n        if (keys.length < 2) return false;\r\n\r\n        return keys.every(k => getPolicy(k.trim()));\r\n      }\r\n\r\n      return getPolicy(key);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  static getLocalization(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ) {\r\n    if (!key) key = '';\r\n    let defaultValue: string;\r\n\r\n    if (typeof key !== 'string') {\r\n      defaultValue = key.defaultValue;\r\n      key = key.key;\r\n    }\r\n\r\n    const keys = key.split('::') as string[];\r\n    const selector = createSelector([ConfigState], (state: Config.State): string => {\r\n      const warn = (message: string) => {\r\n        if (!state.environment.production) console.warn(message);\r\n      };\r\n\r\n      if (keys.length < 2) {\r\n        warn('The localization source separator (::) not found.');\r\n        return defaultValue || (key as string);\r\n      }\r\n      if (!state.localization) return defaultValue || keys[1];\r\n\r\n      const sourceName =\r\n        keys[0] ||\r\n        snq(() => state.environment.localization.defaultResourceName) ||\r\n        state.localization.defaultResourceName;\r\n      const sourceKey = keys[1];\r\n\r\n      if (sourceName === '_') {\r\n        return defaultValue || sourceKey;\r\n      }\r\n\r\n      if (!sourceName) {\r\n        warn(\r\n          'Localization source name is not specified and the defaultResourceName was not defined!',\r\n        );\r\n\r\n        return defaultValue || sourceKey;\r\n      }\r\n\r\n      const source = state.localization.values[sourceName];\r\n      if (!source) {\r\n        warn('Could not find localization source: ' + sourceName);\r\n        return defaultValue || sourceKey;\r\n      }\r\n\r\n      let localization = source[sourceKey];\r\n      if (typeof localization === 'undefined') {\r\n        return defaultValue || sourceKey;\r\n      }\r\n\r\n      // [TODO]: next line should be removed in v3.2, breaking change!!!\r\n      interpolateParams = interpolateParams.filter(params => params != null);\r\n      if (localization) localization = interpolate(localization, interpolateParams);\r\n\r\n      if (typeof localization !== 'string') localization = '';\r\n\r\n      return localization || defaultValue || (key as string);\r\n    });\r\n\r\n    return selector;\r\n  }\r\n\r\n  constructor(private http: HttpClient, private store: Store) {}\r\n\r\n  @Action(GetAppConfiguration)\r\n  addData({ patchState, dispatch }: StateContext<Config.State>) {\r\n    const apiName = 'default';\r\n    const api = this.store.selectSnapshot(ConfigState.getApiUrl(apiName));\r\n    return this.http\r\n      .get<ApplicationConfiguration.Response>(`${api}/api/abp/application-configuration`)\r\n      .pipe(\r\n        tap(configuration =>\r\n          patchState({\r\n            ...configuration,\r\n          }),\r\n        ),\r\n        switchMap(configuration => {\r\n          let defaultLang: string =\r\n            configuration.setting.values['Abp.Localization.DefaultLanguage'];\r\n\r\n          if (defaultLang.includes(';')) {\r\n            defaultLang = defaultLang.split(';')[0];\r\n          }\r\n\r\n          document.documentElement.setAttribute(\r\n            'lang',\r\n            configuration.localization.currentCulture.cultureName,\r\n          );\r\n          return this.store.selectSnapshot(SessionState.getLanguage)\r\n            ? of(null)\r\n            : dispatch(new SetLanguage(defaultLang, false));\r\n        }),\r\n        catchError((err: HttpErrorResponse) => {\r\n          dispatch(new RestOccurError(err));\r\n          return throwError(err);\r\n        }),\r\n      );\r\n  }\r\n\r\n  @Action(SetEnvironment)\r\n  setEnvironment({ patchState }: StateContext<Config.State>, { environment }: SetEnvironment) {\r\n    return patchState({ environment });\r\n  }\r\n}\r\n","export function noop() {\r\n  // tslint:disable-next-line: only-arrow-functions\r\n  const fn = function() {};\r\n  return fn;\r\n}\r\n\r\nexport function isUndefinedOrEmptyString(value: unknown): boolean {\r\n  return value === undefined || value === '';\r\n}\r\n\r\nexport function isNullOrUndefined(obj) {\r\n  return obj === null || obj === undefined;\r\n}\r\n\r\nexport function exists(obj) {\r\n  return !isNullOrUndefined(obj);\r\n}\r\n\r\nexport function isObject(obj) {\r\n  return obj instanceof Object;\r\n}\r\n\r\nexport function isArray(obj) {\r\n  return Array.isArray(obj);\r\n}\r\n\r\nexport function isObjectAndNotArray(obj) {\r\n  return isObject(obj) && !isArray(obj);\r\n}\r\n","// Different locales from .NET\r\n// Key is .NET locale, value is Angular locale\r\n\r\nexport default {\r\n  'ar-sa': 'ar-SA',\r\n  'ca-ES-valencia': 'ca-ES-VALENCIA',\r\n  'de-de': 'de',\r\n  'es-ES': 'es',\r\n  'en-US': 'en',\r\n  'fil-Latn': 'en',\r\n  'ku-Arab': 'en',\r\n  'ky-Cyrl': 'en',\r\n  'mi-Latn': 'en',\r\n  'prs-Arab': 'en',\r\n  'qut-Latn': 'en',\r\n  nso: 'en',\r\n  quz: 'en',\r\n  'fr-FR': 'fr',\r\n  'gd-Latn': 'gd',\r\n  'ha-Latn': 'ha',\r\n  'ig-Latn': 'ig',\r\n  'it-it': 'it',\r\n  'mn-Cyrl': 'mn',\r\n  'pt-BR': 'pt',\r\n  'sd-Arab': 'pa-Arab',\r\n  'sr-Cyrl-RS': 'sr-Cyrl',\r\n  'sr-Latn-RS': 'sr-Latn',\r\n  'tg-Cyrl': 'tg',\r\n  'tk-Latn': 'tk',\r\n  'tt-Cyrl': 'tt',\r\n  'ug-Arab': 'ug',\r\n  'yo-Latn': 'yo',\r\n};\r\n","import { InjectionToken } from '@angular/core';\r\nimport differentLocales from '../constants/different-locales';\r\nimport { ABP } from '../models/common';\r\n\r\nexport const CORE_OPTIONS = new InjectionToken<ABP.Root>('CORE_OPTIONS');\r\n\r\nexport function coreOptionsFactory({ cultureNameLocaleFileMap = {}, ...options }: ABP.Root) {\r\n  return {\r\n    ...options,\r\n    cultureNameLocaleFileMap: { ...differentLocales, ...cultureNameLocaleFileMap },\r\n  } as ABP.Root;\r\n}\r\n","import { HttpClient, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, Inject } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { Rest } from '../models/rest';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { isUndefinedOrEmptyString } from '../utils/common-utils';\r\nimport { ABP } from '../models/common';\r\nimport { CORE_OPTIONS } from '../tokens/options.token';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RestService {\r\n  constructor(\r\n    @Inject(CORE_OPTIONS) private options: ABP.Root,\r\n    private http: HttpClient,\r\n    private store: Store,\r\n  ) {}\r\n\r\n  private getApiFromStore(apiName: string): string {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(apiName));\r\n  }\r\n\r\n  handleError(err: any): Observable<any> {\r\n    this.store.dispatch(new RestOccurError(err));\r\n    return throwError(err);\r\n  }\r\n\r\n  // TODO: Deprecate service or improve interface in v3.0\r\n  request<T, R>(\r\n    request: HttpRequest<T> | Rest.Request<T>,\r\n    config?: Rest.Config,\r\n    api?: string,\r\n  ): Observable<R> {\r\n    config = config || ({} as Rest.Config);\r\n    api = api || this.getApiFromStore(config.apiName);\r\n    const { method, params, ...options } = request;\r\n    const { observe = Rest.Observe.Body, skipHandleError } = config;\r\n\r\n    return this.http\r\n      .request<R>(method, api + request.url, {\r\n        observe,\r\n        ...(params && {\r\n          params: Object.keys(params).reduce((acc, key) => {\r\n            const value = params[key];\r\n\r\n            if (isUndefinedOrEmptyString(value)) return acc;\r\n            if (value === null && !this.options.sendNullsAsQueryParam) return acc;\r\n\r\n            acc[key] = value;\r\n            return acc;\r\n          }, {}),\r\n        }),\r\n        ...options,\r\n      } as any)\r\n      .pipe(catchError(err => (skipHandleError ? throwError(err) : this.handleError(err))));\r\n  }\r\n}\r\n","import { Injector } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { AuthConfig, OAuthService, OAuthStorage } from 'angular-oauth2-oidc';\r\nimport { Observable, of } from 'rxjs';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { RestService } from '../services/rest.service';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\nexport const oAuthStorage = localStorage;\r\n\r\nexport abstract class AuthFlowStrategy {\r\n  abstract readonly isInternalAuth: boolean;\r\n\r\n  protected store: Store;\r\n  protected oAuthService: OAuthService;\r\n  protected oAuthConfig: AuthConfig;\r\n  abstract checkIfInternalAuth(): boolean;\r\n  abstract login(): void;\r\n  abstract logout(): Observable<any>;\r\n  abstract destroy(): void;\r\n\r\n  private catchError = err => this.store.dispatch(new RestOccurError(err));\r\n\r\n  constructor(protected injector: Injector) {\r\n    this.store = injector.get(Store);\r\n    this.oAuthService = injector.get(OAuthService);\r\n    this.oAuthConfig = this.store.selectSnapshot(ConfigState.getDeep('environment.oAuthConfig'));\r\n  }\r\n\r\n  async init(): Promise<any> {\r\n    const shouldClear = shouldStorageClear(\r\n      this.store.selectSnapshot(ConfigState.getDeep('environment.oAuthConfig.clientId')),\r\n      oAuthStorage,\r\n    );\r\n    if (shouldClear) clearOAuthStorage(oAuthStorage);\r\n\r\n    this.oAuthService.configure(this.oAuthConfig);\r\n    return this.oAuthService.loadDiscoveryDocument().catch(this.catchError);\r\n  }\r\n}\r\n\r\nexport class AuthCodeFlowStrategy extends AuthFlowStrategy {\r\n  readonly isInternalAuth = false;\r\n\r\n  async init() {\r\n    return super\r\n      .init()\r\n      .then(() => this.oAuthService.tryLogin())\r\n      .then(() => {\r\n        if (this.oAuthService.hasValidAccessToken() || !this.oAuthService.getRefreshToken()) {\r\n          return Promise.resolve();\r\n        }\r\n\r\n        return this.oAuthService.refreshToken() as Promise<any>;\r\n      })\r\n      .then(() => this.oAuthService.setupAutomaticSilentRefresh({}, 'access_token'));\r\n  }\r\n\r\n  login() {\r\n    this.oAuthService.initCodeFlow();\r\n  }\r\n\r\n  checkIfInternalAuth() {\r\n    this.oAuthService.initCodeFlow();\r\n    return false;\r\n  }\r\n\r\n  logout() {\r\n    this.oAuthService.logOut();\r\n    return of(null);\r\n  }\r\n\r\n  destroy() {}\r\n}\r\n\r\nexport class AuthPasswordFlowStrategy extends AuthFlowStrategy {\r\n  readonly isInternalAuth = true;\r\n\r\n  login() {\r\n    const router = this.injector.get(Router);\r\n    router.navigateByUrl('/account/login');\r\n  }\r\n\r\n  checkIfInternalAuth() {\r\n    return true;\r\n  }\r\n\r\n  logout() {\r\n    const rest = this.injector.get(RestService);\r\n\r\n    const issuer = this.store.selectSnapshot(ConfigState.getDeep('environment.oAuthConfig.issuer'));\r\n    return rest\r\n      .request(\r\n        {\r\n          method: 'GET',\r\n          url: '/api/account/logout',\r\n        },\r\n        null,\r\n        issuer,\r\n      )\r\n      .pipe(\r\n        tap(() => this.oAuthService.logOut()),\r\n        switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n      );\r\n  }\r\n\r\n  destroy() {}\r\n}\r\n\r\nexport const AUTH_FLOW_STRATEGY = {\r\n  Code(injector: Injector) {\r\n    return new AuthCodeFlowStrategy(injector);\r\n  },\r\n  Password(injector: Injector) {\r\n    return new AuthPasswordFlowStrategy(injector);\r\n  },\r\n};\r\n\r\nfunction clearOAuthStorage(storage: OAuthStorage) {\r\n  const keys = [\r\n    'access_token',\r\n    'id_token',\r\n    'refresh_token',\r\n    'nonce',\r\n    'PKCE_verifier',\r\n    'expires_at',\r\n    'id_token_claims_obj',\r\n    'id_token_expires_at',\r\n    'id_token_stored_at',\r\n    'access_token_stored_at',\r\n    'granted_scopes',\r\n    'session_state',\r\n  ];\r\n\r\n  keys.forEach(key => storage.removeItem(key));\r\n}\r\n\r\nfunction shouldStorageClear(clientId: string, storage: OAuthStorage): boolean {\r\n  const key = 'abpOAuthClientId';\r\n  if (!storage.getItem(key)) {\r\n    storage.setItem(key, clientId);\r\n    return false;\r\n  }\r\n\r\n  const shouldClear = storage.getItem(key) !== clientId;\r\n  if (shouldClear) storage.setItem(key, clientId);\r\n  return shouldClear;\r\n}\r\n","import { HttpHeaders } from '@angular/common/http';\r\nimport { Inject, Injectable, Injector, Optional } from '@angular/core';\r\nimport { Navigate } from '@ngxs/router-plugin';\r\nimport { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { from, Observable } from 'rxjs';\r\nimport { switchMap, take, tap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { GetAppConfiguration, SetEnvironment } from '../actions/config.actions';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { SessionState } from '../states/session.state';\r\nimport { AuthFlowStrategy, AUTH_FLOW_STRATEGY } from '../strategies/auth-flow.strategy';\r\nimport { RestService } from './rest.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthService {\r\n  private flow: string;\r\n  private strategy: AuthFlowStrategy;\r\n\r\n  get isInternalAuth() {\r\n    return this.strategy.isInternalAuth;\r\n  }\r\n\r\n  constructor(\r\n    private actions: Actions,\r\n    private injector: Injector,\r\n    private rest: RestService,\r\n    private oAuthService: OAuthService,\r\n    private store: Store,\r\n    @Optional() @Inject('ACCOUNT_OPTIONS') private options: any,\r\n  ) {\r\n    this.setStrategy();\r\n    this.listenToSetEnvironment();\r\n  }\r\n\r\n  private setStrategy = () => {\r\n    const flow =\r\n      this.store.selectSnapshot(ConfigState.getDeep('environment.oAuthConfig.responseType')) ||\r\n      'password';\r\n    if (this.flow === flow) return;\r\n\r\n    if (this.strategy) this.strategy.destroy();\r\n\r\n    this.flow = flow;\r\n    this.strategy =\r\n      this.flow === 'code'\r\n        ? AUTH_FLOW_STRATEGY.Code(this.injector)\r\n        : AUTH_FLOW_STRATEGY.Password(this.injector);\r\n  };\r\n\r\n  private listenToSetEnvironment() {\r\n    this.actions.pipe(ofActionSuccessful(SetEnvironment)).subscribe(this.setStrategy);\r\n  }\r\n\r\n  login(username: string, password: string): Observable<any> {\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n\r\n    return from(\r\n      this.oAuthService.fetchTokenUsingPasswordFlow(\r\n        username,\r\n        password,\r\n        new HttpHeaders({ ...(tenant && tenant.id && { __tenant: tenant.id }) }),\r\n      ),\r\n    ).pipe(\r\n      switchMap(() => this.store.dispatch(new GetAppConfiguration())),\r\n      tap(() => {\r\n        const redirectUrl =\r\n          snq(() => window.history.state.redirectUrl) || (this.options || {}).redirectUrl || '/';\r\n        this.store.dispatch(new Navigate([redirectUrl]));\r\n      }),\r\n      take(1),\r\n    );\r\n  }\r\n\r\n  async init() {\r\n    return await this.strategy.init();\r\n  }\r\n\r\n  logout(): Observable<any> {\r\n    return this.strategy.logout();\r\n  }\r\n\r\n  initLogin() {\r\n    this.strategy.login();\r\n  }\r\n}\r\n","import { isObjectAndNotArray, isNullOrUndefined, exists, isArray, isObject } from './common-utils';\r\n\r\nexport function deepMerge(target, source) {\r\n  if (isObjectAndNotArray(target) && isObjectAndNotArray(source)) {\r\n    return deepMergeRecursively(target, source);\r\n  } else if (isNullOrUndefined(target) && isNullOrUndefined(source)) {\r\n    return {};\r\n  } else {\r\n    return exists(source) ? source : target;\r\n  }\r\n}\r\n\r\nfunction deepMergeRecursively(target, source) {\r\n  const shouldNotRecurse =\r\n    isNullOrUndefined(target) ||\r\n    isNullOrUndefined(source) || // at least one not defined\r\n    isArray(target) ||\r\n    isArray(source) || // at least one array\r\n    !isObject(target) ||\r\n    !isObject(source); // at least one not an object\r\n\r\n  /**\r\n   * if we will not recurse any further,\r\n   * we will prioritize source if it is a defined value.\r\n   */\r\n  if (shouldNotRecurse) {\r\n    return exists(source) ? source : target;\r\n  }\r\n\r\n  const keysOfTarget = Object.keys(target);\r\n  const keysOfSource = Object.keys(source);\r\n  const uniqueKeys = new Set(keysOfTarget.concat(keysOfSource));\r\n  return [...uniqueKeys].reduce((retVal, key) => {\r\n    retVal[key] = deepMergeRecursively(target[key], source[key]);\r\n    return retVal;\r\n  }, {});\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { catchError, switchMap } from 'rxjs/operators';\r\nimport { SetEnvironment } from '../actions/config.actions';\r\nimport { Config } from '../models/config';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { deepMerge } from './object-utils';\r\n\r\nexport function getRemoteEnv(injector: Injector, environment: Partial<Config.Environment>) {\r\n  const { remoteEnv } = environment;\r\n  const { headers = {}, method = 'GET', url } = remoteEnv || ({} as Config.RemoteEnv);\r\n  if (!url) return Promise.resolve();\r\n\r\n  const http = injector.get(HttpClient);\r\n  const store = injector.get(Store);\r\n\r\n  return http\r\n    .request<Config.Environment>(method, url, { headers })\r\n    .pipe(\r\n      catchError(err => store.dispatch(new RestOccurError(err))), // TODO: Condiser get handle function from a provider\r\n      switchMap(env => store.dispatch(mergeEnvironments(environment, env, remoteEnv))),\r\n    )\r\n    .toPromise();\r\n}\r\n\r\nfunction mergeEnvironments(\r\n  local: Partial<Config.Environment>,\r\n  remote: any,\r\n  config: Config.RemoteEnv,\r\n) {\r\n  switch (config.mergeStrategy) {\r\n    case 'deepmerge':\r\n      return new SetEnvironment(deepMerge(local, remote));\r\n    case 'overwrite':\r\n    case null:\r\n    case undefined:\r\n      return new SetEnvironment(remote);\r\n    default:\r\n      return new SetEnvironment(config.mergeStrategy(local, remote));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { SetTenant } from '../actions/session.actions';\r\nimport { ABP } from '../models/common';\r\nimport { FindTenantResultDto } from '../models/find-tenant-result-dto';\r\nimport { RestService } from './rest.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class MultiTenancyService {\r\n  private _domainTenant: ABP.BasicItem = null;\r\n\r\n  set domainTenant(value: ABP.BasicItem) {\r\n    this._domainTenant = value;\r\n    this.store.dispatch(new SetTenant(value));\r\n  }\r\n\r\n  get domainTenant() {\r\n    return this._domainTenant;\r\n  }\r\n\r\n  isTenantBoxVisible = true;\r\n\r\n  apiName = 'abp';\r\n\r\n  constructor(private restService: RestService, private store: Store) {}\r\n\r\n  findTenantByName(name: string, headers: ABP.Dictionary<string>): Observable<FindTenantResultDto> {\r\n    return this.restService.request(\r\n      {\r\n        url: `/api/abp/multi-tenancy/tenants/by-name/${name}`,\r\n        method: 'GET',\r\n        headers,\r\n      },\r\n      { apiName: this.apiName },\r\n    );\r\n  }\r\n\r\n  findTenantById(id: string, headers: ABP.Dictionary<string>): Observable<FindTenantResultDto> {\r\n    return this.restService.request(\r\n      { url: `/api/abp/multi-tenancy/tenants/by-id/${id}`, method: 'GET', headers },\r\n      { apiName: this.apiName },\r\n    );\r\n  }\r\n}\r\n","import { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport clone from 'just-clone';\r\nimport { switchMap, tap } from 'rxjs/operators';\r\nimport { SetEnvironment } from '../actions';\r\nimport { Config } from '../models/config';\r\nimport { MultiTenancyService } from '../services/multi-tenancy.service';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { createTokenParser } from './string-utils';\r\n\r\nconst tenancyPlaceholder = '{0}';\r\n\r\nfunction getCurrentTenancyName(appBaseUrl: string): string {\r\n  if (appBaseUrl.charAt(appBaseUrl.length - 1) !== '/') appBaseUrl += '/';\r\n\r\n  const parseTokens = createTokenParser(appBaseUrl);\r\n  const token = tenancyPlaceholder.replace(/[}{]/g, '');\r\n  return parseTokens(window.location.href)[token]?.[0];\r\n}\r\n\r\nexport async function parseTenantFromUrl(injector: Injector) {\r\n  const store: Store = injector.get(Store);\r\n  const multiTenancyService = injector.get(MultiTenancyService);\r\n  const environment = store.selectSnapshot(ConfigState.getOne('environment')) as Config.Environment;\r\n\r\n  const { baseUrl = '' } = environment.application;\r\n  const tenancyName = getCurrentTenancyName(baseUrl);\r\n\r\n  if (tenancyName) {\r\n    multiTenancyService.isTenantBoxVisible = false;\r\n\r\n    return setEnvironment(store, tenancyName)\r\n      .pipe(\r\n        switchMap(() => multiTenancyService.findTenantByName(tenancyName, { __tenant: '' })),\r\n        tap(res => {\r\n          multiTenancyService.domainTenant = res.success\r\n            ? { id: res.tenantId, name: res.name }\r\n            : null;\r\n        }),\r\n      )\r\n      .toPromise();\r\n  }\r\n\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction setEnvironment(store: Store, tenancyName: string) {\r\n  const environment = clone(\r\n    store.selectSnapshot(ConfigState.getOne('environment')),\r\n  ) as Config.Environment;\r\n\r\n  if (environment.application.baseUrl) {\r\n    environment.application.baseUrl = environment.application.baseUrl.replace(\r\n      tenancyPlaceholder,\r\n      tenancyName,\r\n    );\r\n  }\r\n\r\n  environment.oAuthConfig.issuer = environment.oAuthConfig.issuer.replace(\r\n    tenancyPlaceholder,\r\n    tenancyName,\r\n  );\r\n\r\n  Object.keys(environment.apis).forEach(api => {\r\n    Object.keys(environment.apis[api]).forEach(key => {\r\n      environment.apis[api][key] = environment.apis[api][key].replace(\r\n        tenancyPlaceholder,\r\n        tenancyName,\r\n      );\r\n    });\r\n  });\r\n\r\n  return store.dispatch(new SetEnvironment(environment));\r\n}\r\n","import { registerLocaleData } from '@angular/common';\r\nimport { Injector } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { tap } from 'rxjs/operators';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { ABP } from '../models/common';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { CORE_OPTIONS } from '../tokens/options.token';\r\nimport { getRemoteEnv } from './environment-utils';\r\nimport { parseTenantFromUrl } from './multi-tenancy-utils';\r\n\r\nexport function getInitialData(injector: Injector) {\r\n  const fn = async () => {\r\n    const store: Store = injector.get(Store);\r\n    const options = injector.get(CORE_OPTIONS) as ABP.Root;\r\n\r\n    await getRemoteEnv(injector, options.environment);\r\n    await parseTenantFromUrl(injector);\r\n    await injector.get(AuthService).init();\r\n\r\n    if (options.skipGetAppConfiguration) return;\r\n\r\n    return store\r\n      .dispatch(new GetAppConfiguration())\r\n      .pipe(tap(res => checkAccessToken(store, injector)))\r\n      .toPromise();\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function checkAccessToken(store: Store, injector: Injector) {\r\n  const oAuth = injector.get(OAuthService);\r\n  if (oAuth.hasValidAccessToken() && !store.selectSnapshot(ConfigState.getDeep('currentUser.id'))) {\r\n    oAuth.logOut();\r\n  }\r\n}\r\n\r\nexport function localeInitializer(injector: Injector) {\r\n  const fn = () => {\r\n    const store: Store = injector.get(Store);\r\n    const options = injector.get(CORE_OPTIONS);\r\n\r\n    const lang = store.selectSnapshot(state => state.SessionState.language) || 'en';\r\n\r\n    return new Promise((resolve, reject) => {\r\n      registerLocale(lang, options.cultureNameLocaleFileMap).then(\r\n        () => resolve('resolved'),\r\n        reject,\r\n      );\r\n    });\r\n  };\r\n\r\n  return fn;\r\n}\r\n\r\nexport function registerLocale(locale: string, localeNameMap: ABP.Dictionary<string>) {\r\n  return import(\r\n    /* webpackChunkName: \"_locale-[request]\"*/\r\n    `@angular/common/locales/${localeNameMap[locale] || locale}.js`\r\n  ).then(module => {\r\n    registerLocaleData(module.default);\r\n  });\r\n}\r\n","import { ApplicationConfiguration } from '../models/application-configuration';\r\n\r\n// This will not be necessary when only Angukar 9.1+ is supported\r\nexport function getLocaleDirection(locale: string): 'ltr' | 'rtl' {\r\n  return /^(ar(-[A-Z]{2})?|ckb(-IR)?|fa(-AF)?|he|ks|lrc(-IQ)?|mzn|pa-Arab|ps(-PK)?|sd|ug|ur(-IN)?|uz-Arab|yi)$/.test(\r\n    locale,\r\n  )\r\n    ? 'rtl'\r\n    : 'ltr';\r\n}\r\n\r\nexport function createLocalizer(localization: ApplicationConfiguration.Localization) {\r\n  return (resourceName: string, key: string, defaultValue: string) => {\r\n    if (resourceName === '_') return key;\r\n\r\n    const resource = localization.values[resourceName];\r\n\r\n    if (!resource) return defaultValue;\r\n\r\n    return resource[key] || defaultValue;\r\n  };\r\n}\r\n\r\nexport function createLocalizerWithFallback(localization: ApplicationConfiguration.Localization) {\r\n  const findLocalization = createLocalizationFinder(localization);\r\n\r\n  return (resourceNames: string[], keys: string[], defaultValue: string) => {\r\n    const { localized } = findLocalization(resourceNames, keys);\r\n    return localized || defaultValue;\r\n  };\r\n}\r\n\r\nexport function createLocalizationPipeKeyGenerator(\r\n  localization: ApplicationConfiguration.Localization,\r\n) {\r\n  const findLocalization = createLocalizationFinder(localization);\r\n\r\n  return (resourceNames: string[], keys: string[], defaultKey: string) => {\r\n    const { resourceName, key } = findLocalization(resourceNames, keys);\r\n    return !resourceName ? defaultKey : resourceName === '_' ? key : `${resourceName}::${key}`;\r\n  };\r\n}\r\n\r\nfunction createLocalizationFinder(localization: ApplicationConfiguration.Localization) {\r\n  const localize = createLocalizer(localization);\r\n\r\n  return (resourceNames: string[], keys: string[]) => {\r\n    resourceNames = resourceNames.concat(localization.defaultResourceName).filter(Boolean);\r\n\r\n    const resourceCount = resourceNames.length;\r\n    const keyCount = keys.length;\r\n\r\n    for (let i = 0; i < resourceCount; i++) {\r\n      const resourceName = resourceNames[i];\r\n\r\n      for (let j = 0; j < keyCount; j++) {\r\n        const key = keys[j];\r\n        const localized = localize(resourceName, key, null);\r\n        if (localized) return { resourceName, key, localized };\r\n      }\r\n    }\r\n\r\n    return { resourceName: undefined, key: undefined, localized: undefined };\r\n  };\r\n}\r\n","import { Injectable, Injector, NgZone, Optional, SkipSelf } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, Router } from '@angular/router';\r\nimport { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { noop, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { SetLanguage } from '../actions/session.actions';\r\nimport { Config } from '../models/config';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { registerLocale } from '../utils/initial-utils';\r\nimport { createLocalizer, createLocalizerWithFallback } from '../utils/localization-utils';\r\nimport { CORE_OPTIONS } from '../tokens/options.token';\r\n\r\ntype ShouldReuseRoute = (future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot) => boolean;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class LocalizationService {\r\n  /**\r\n   * Returns currently selected language\r\n   */\r\n  get currentLang(): string {\r\n    return this.store.selectSnapshot(state => state.SessionState.language);\r\n  }\r\n\r\n  get languageChange(): Observable<SetLanguage> {\r\n    return this.actions.pipe(ofActionSuccessful(SetLanguage));\r\n  }\r\n\r\n  constructor(\r\n    private actions: Actions,\r\n    private store: Store,\r\n    private injector: Injector,\r\n    private ngZone: NgZone,\r\n    @Optional()\r\n    @SkipSelf()\r\n    otherInstance: LocalizationService,\r\n  ) {\r\n    if (otherInstance) throw new Error('LocalizationService should have only one instance.');\r\n\r\n    this.listenToSetLanguage();\r\n  }\r\n\r\n  private listenToSetLanguage() {\r\n    this.languageChange.subscribe(({ payload }) => this.registerLocale(payload));\r\n  }\r\n\r\n  registerLocale(locale: string) {\r\n    const router = this.injector.get(Router);\r\n    const { cultureNameLocaleFileMap } = this.injector.get(CORE_OPTIONS);\r\n    const { shouldReuseRoute } = router.routeReuseStrategy;\r\n    router.routeReuseStrategy.shouldReuseRoute = () => false;\r\n    router.navigated = false;\r\n\r\n    return registerLocale(locale, cultureNameLocaleFileMap).then(() => {\r\n      this.ngZone.run(async () => {\r\n        await router.navigateByUrl(router.url).catch(noop);\r\n        router.routeReuseStrategy.shouldReuseRoute = shouldReuseRoute;\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns an observable localized text with the given interpolation parameters in current language.\r\n   * @param key Localizaton key to replace with localized text\r\n   * @param interpolateParams Values to interpolate\r\n   */\r\n  get(\r\n    key: string | Config.LocalizationWithDefault,\r\n    ...interpolateParams: string[]\r\n  ): Observable<string> {\r\n    return this.store.select(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n\r\n  /**\r\n   * Returns localized text with the given interpolation parameters in current language.\r\n   * @param key Localization key to replace with localized text\r\n   * @param interpolateParams Values to intepolate.\r\n   */\r\n  instant(key: string | Config.LocalizationWithDefault, ...interpolateParams: string[]): string {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(key, ...interpolateParams));\r\n  }\r\n\r\n  localize(resourceName: string, key: string, defaultValue: string): Observable<string> {\r\n    return this.store.select(ConfigState.getOne('localization')).pipe(\r\n      map(createLocalizer),\r\n      map(localize => localize(resourceName, key, defaultValue)),\r\n    );\r\n  }\r\n\r\n  localizeSync(resourceName: string, key: string, defaultValue: string): string {\r\n    const localization = this.store.selectSnapshot(ConfigState.getOne('localization'));\r\n    return createLocalizer(localization)(resourceName, key, defaultValue);\r\n  }\r\n\r\n  localizeWithFallback(\r\n    resourceNames: string[],\r\n    keys: string[],\r\n    defaultValue: string,\r\n  ): Observable<string> {\r\n    return this.store.select(ConfigState.getOne('localization')).pipe(\r\n      map(createLocalizerWithFallback),\r\n      map(localizeWithFallback => localizeWithFallback(resourceNames, keys, defaultValue)),\r\n    );\r\n  }\r\n\r\n  localizeWithFallbackSync(resourceNames: string[], keys: string[], defaultValue: string): string {\r\n    const localization = this.store.selectSnapshot(ConfigState.getOne('localization'));\r\n    return createLocalizerWithFallback(localization)(resourceNames, keys, defaultValue);\r\n  }\r\n}\r\n","export function pushValueTo<T extends any>(array: T[]) {\r\n  return (element: T) => {\r\n    array.push(element);\r\n    return array;\r\n  };\r\n}\r\n","export class BaseTreeNode<T extends object> {\r\n  children: TreeNode<T>[] = [];\r\n  isLeaf = true;\r\n  parent: TreeNode<T>;\r\n\r\n  constructor(props: T) {\r\n    Object.assign(this, props);\r\n  }\r\n\r\n  static create<T extends object>(props: T) {\r\n    return new BaseTreeNode<T>(props) as TreeNode<T>;\r\n  }\r\n}\r\n\r\nexport function createTreeFromList<T extends object, R extends unknown>(\r\n  list: T[],\r\n  keySelector: (item: T) => number | string | symbol,\r\n  parentKeySelector: typeof keySelector,\r\n  valueMapper: (item: T) => R,\r\n) {\r\n  const map = createMapFromList(list, keySelector, valueMapper);\r\n  const tree: NodeValue<T, typeof valueMapper>[] = [];\r\n\r\n  list.forEach(row => {\r\n    const id = keySelector(row);\r\n    const parentId = parentKeySelector(row);\r\n    const node = map.get(id);\r\n\r\n    if (parentId) {\r\n      const parent = map.get(parentId);\r\n      if (!parent) return;\r\n      (parent as any).children.push(node);\r\n      (parent as any).isLeaf = false;\r\n      (node as any).parent = parent;\r\n    } else {\r\n      tree.push(node);\r\n    }\r\n  });\r\n\r\n  return tree;\r\n}\r\n\r\nexport function createMapFromList<T extends object, R extends unknown>(\r\n  list: T[],\r\n  keySelector: (item: T) => number | string | symbol,\r\n  valueMapper: (item: T) => R,\r\n) {\r\n  type Key = ReturnType<typeof keySelector>;\r\n  type Value = NodeValue<T, typeof valueMapper>;\r\n  const map = new Map<Key, Value>();\r\n  list.forEach(row => map.set(keySelector(row), valueMapper(row)));\r\n  return map;\r\n}\r\n\r\nexport type TreeNode<T extends object> = {\r\n  [K in keyof T]: T[K];\r\n} & {\r\n  children: TreeNode<T>[];\r\n  isLeaf: boolean;\r\n  parent?: TreeNode<T>;\r\n};\r\n\r\ntype NodeValue<T extends object, F extends (...args: any) => any> = F extends undefined\r\n  ? TreeNode<T>\r\n  : ReturnType<F>;\r\n","import { Injectable, OnDestroy } from '@angular/core';\r\nimport { Actions, ofActionSuccessful, Store } from '@ngxs/store';\r\nimport { BehaviorSubject, Observable, Subscription } from 'rxjs';\r\nimport { GetAppConfiguration } from '../actions/config.actions';\r\nimport { ABP } from '../models/common';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { pushValueTo } from '../utils/array-utils';\r\nimport { BaseTreeNode, createTreeFromList, TreeNode } from '../utils/tree-utils';\r\n\r\nexport abstract class AbstractTreeService<T extends object> {\r\n  abstract id: string;\r\n  abstract parentId: string;\r\n  abstract hide: (item: T) => boolean;\r\n  abstract sort: (a: T, b: T) => number;\r\n\r\n  private _flat$ = new BehaviorSubject<T[]>([]);\r\n  private _tree$ = new BehaviorSubject<TreeNode<T>[]>([]);\r\n  private _visible$ = new BehaviorSubject<TreeNode<T>[]>([]);\r\n\r\n  get flat(): T[] {\r\n    return this._flat$.value;\r\n  }\r\n\r\n  get flat$(): Observable<T[]> {\r\n    return this._flat$.asObservable();\r\n  }\r\n\r\n  get tree(): TreeNode<T>[] {\r\n    return this._tree$.value;\r\n  }\r\n\r\n  get tree$(): Observable<TreeNode<T>[]> {\r\n    return this._tree$.asObservable();\r\n  }\r\n\r\n  get visible(): TreeNode<T>[] {\r\n    return this._visible$.value;\r\n  }\r\n\r\n  get visible$(): Observable<TreeNode<T>[]> {\r\n    return this._visible$.asObservable();\r\n  }\r\n\r\n  protected createTree(items: T[]): TreeNode<T>[] {\r\n    return createTreeFromList<T, TreeNode<T>>(\r\n      items,\r\n      item => item[this.id],\r\n      item => item[this.parentId],\r\n      item => BaseTreeNode.create(item),\r\n    );\r\n  }\r\n\r\n  private filterWith(setOrMap: Set<string> | Map<string, T>): T[] {\r\n    return this._flat$.value.filter(\r\n      item => !setOrMap.has(item[this.id]) && !setOrMap.has(item[this.parentId]),\r\n    );\r\n  }\r\n\r\n  private publish(flatItems: T[], visibleItems: T[]): T[] {\r\n    this._flat$.next(flatItems);\r\n    this._tree$.next(this.createTree(flatItems));\r\n    this._visible$.next(this.createTree(visibleItems));\r\n    return flatItems;\r\n  }\r\n\r\n  add(items: T[]): T[] {\r\n    const map = new Map<string, T>();\r\n    items.forEach(item => map.set(item[this.id], item));\r\n\r\n    const flatItems = this.filterWith(map);\r\n    map.forEach(pushValueTo(flatItems));\r\n\r\n    flatItems.sort(this.sort);\r\n    const visibleItems = flatItems.filter(item => !this.hide(item));\r\n\r\n    return this.publish(flatItems, visibleItems);\r\n  }\r\n\r\n  find(predicate: (item: TreeNode<T>) => boolean, tree = this.tree): TreeNode<T> | null {\r\n    return tree.reduce(\r\n      (acc, node) => (acc ? acc : predicate(node) ? node : this.find(predicate, node.children)),\r\n      null,\r\n    );\r\n  }\r\n\r\n  patch(identifier: string, props: Partial<T>): T[] | false {\r\n    const flatItems = this._flat$.value;\r\n    const index = flatItems.findIndex(item => item[this.id] === identifier);\r\n    if (index < 0) return false;\r\n\r\n    flatItems[index] = { ...flatItems[index], ...props };\r\n\r\n    flatItems.sort(this.sort);\r\n    const visibleItems = flatItems.filter(item => !this.hide(item));\r\n\r\n    return this.publish(flatItems, visibleItems);\r\n  }\r\n\r\n  refresh(): T[] {\r\n    return this.add([]);\r\n  }\r\n\r\n  remove(identifiers: string[]): T[] {\r\n    const set = new Set<string>();\r\n    identifiers.forEach(id => set.add(id));\r\n\r\n    const flatItems = this.filterWith(set);\r\n    const visibleItems = flatItems.filter(item => !this.hide(item));\r\n\r\n    return this.publish(flatItems, visibleItems);\r\n  }\r\n\r\n  search(params: Partial<T>, tree = this.tree): TreeNode<T> | null {\r\n    const searchKeys = Object.keys(params);\r\n\r\n    return tree.reduce(\r\n      (acc, node) =>\r\n        acc\r\n          ? acc\r\n          : searchKeys.every(key => node[key] === params[key])\r\n          ? node\r\n          : this.search(params, node.children),\r\n      null,\r\n    );\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport abstract class AbstractNavTreeService<T extends ABP.Nav> extends AbstractTreeService<T>\r\n  implements OnDestroy {\r\n  private subscription: Subscription;\r\n  readonly id = 'name';\r\n  readonly parentId = 'parentName';\r\n  readonly hide = (item: T) => item.invisible || !this.isGranted(item);\r\n  readonly sort = (a: T, b: T) => {\r\n    if (!Number.isInteger(a.order)) return 1;\r\n    if (!Number.isInteger(b.order)) return -1;\r\n\r\n    return a.order - b.order;\r\n  };\r\n\r\n  constructor(protected actions: Actions, protected store: Store) {\r\n    super();\r\n\r\n    this.subscription = this.actions\r\n      .pipe(ofActionSuccessful(GetAppConfiguration))\r\n      .subscribe(() => this.refresh());\r\n  }\r\n\r\n  protected isGranted({ requiredPolicy }: T): boolean {\r\n    return this.store.selectSnapshot(ConfigState.getGrantedPolicy(requiredPolicy));\r\n  }\r\n\r\n  hasChildren(identifier: string): boolean {\r\n    const node = this.find(item => item[this.id] === identifier);\r\n    return Boolean(node?.children?.length);\r\n  }\r\n\r\n  hasInvisibleChild(identifier: string): boolean {\r\n    const node = this.find(item => item[this.id] === identifier);\r\n    return node?.children?.some(child => child.invisible);\r\n  }\r\n\r\n  /* istanbul ignore next */\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class RoutesService extends AbstractNavTreeService<ABP.Route> {}\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class SettingTabsService extends AbstractNavTreeService<ABP.Tab> {}\r\n","import { Injectable } from '@angular/core';\r\nimport type { OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport type { Observable, PartialObserver } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class SubscriptionService implements OnDestroy {\r\n  private subscription = new Subscription();\r\n\r\n  get isClosed() {\r\n    return this.subscription.closed;\r\n  }\r\n\r\n  addOne<T extends unknown>(\r\n    source$: Observable<T>,\r\n    next?: (value: T) => void,\r\n    error?: (error: any) => void,\r\n  ): Subscription;\r\n  addOne<T extends unknown>(source$: Observable<T>, observer?: PartialObserver<T>): Subscription;\r\n  addOne<T extends unknown>(\r\n    source$: Observable<T>,\r\n    nextOrObserver?: PartialObserver<T> | Next<T>,\r\n    error?: (error: any) => void,\r\n  ): Subscription {\r\n    const subscription = source$.subscribe(nextOrObserver as Next<T>, error);\r\n    this.subscription.add(subscription);\r\n    return subscription;\r\n  }\r\n\r\n  closeAll() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  closeOne(subscription: Subscription | undefined | null) {\r\n    this.removeOne(subscription);\r\n    subscription.unsubscribe();\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  removeOne(subscription: Subscription | undefined | null) {\r\n    if (!subscription) return;\r\n    this.subscription.remove(subscription);\r\n  }\r\n\r\n  reset() {\r\n    this.subscription.unsubscribe();\r\n    this.subscription = new Subscription();\r\n  }\r\n}\r\n\r\ntype Next<T> = (value: T) => void;\r\n","import { Injectable, NgZone } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Action, createSelector, Selector, State, StateContext } from '@ngxs/store';\r\nimport snq from 'snq';\r\nimport { AddReplaceableComponent } from '../actions/replaceable-components.actions';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { noop } from '../utils/common-utils';\r\n\r\n@State<ReplaceableComponents.State>({\r\n  name: 'ReplaceableComponentsState',\r\n  defaults: { replaceableComponents: [] } as ReplaceableComponents.State,\r\n})\r\n@Injectable()\r\nexport class ReplaceableComponentsState {\r\n  @Selector()\r\n  static getAll({\r\n    replaceableComponents,\r\n  }: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent[] {\r\n    return replaceableComponents || [];\r\n  }\r\n\r\n  static getComponent(key: string) {\r\n    const selector = createSelector(\r\n      [ReplaceableComponentsState],\r\n      (state: ReplaceableComponents.State): ReplaceableComponents.ReplaceableComponent => {\r\n        return snq(() => state.replaceableComponents.find(component => component.key === key));\r\n      },\r\n    );\r\n\r\n    return selector;\r\n  }\r\n\r\n  constructor(private ngZone: NgZone, private router: Router) {}\r\n\r\n  // TODO: Create a shared service for route reload and more\r\n  private reloadRoute() {\r\n    const { shouldReuseRoute } = this.router.routeReuseStrategy;\r\n    const setRouteReuse = (reuse: typeof shouldReuseRoute) => {\r\n      this.router.routeReuseStrategy.shouldReuseRoute = reuse;\r\n    };\r\n\r\n    setRouteReuse(() => false);\r\n    this.router.navigated = false;\r\n\r\n    this.ngZone.run(async () => {\r\n      await this.router.navigateByUrl(this.router.url).catch(noop);\r\n      setRouteReuse(shouldReuseRoute);\r\n    });\r\n  }\r\n\r\n  @Action(AddReplaceableComponent)\r\n  replaceableComponentsAction(\r\n    { getState, patchState }: StateContext<ReplaceableComponents.State>,\r\n    { payload, reload }: AddReplaceableComponent,\r\n  ) {\r\n    let { replaceableComponents } = getState();\r\n\r\n    const index = snq(\r\n      () => replaceableComponents.findIndex(component => component.key === payload.key),\r\n      -1,\r\n    );\r\n    if (index > -1) {\r\n      replaceableComponents[index] = payload;\r\n    } else {\r\n      replaceableComponents = [...replaceableComponents, payload];\r\n    }\r\n\r\n    patchState({\r\n      replaceableComponents,\r\n    });\r\n\r\n    if (reload) this.reloadRoute();\r\n  }\r\n}\r\n","import { PRIMARY_OUTLET, Router, UrlSegmentGroup } from '@angular/router';\r\nimport { ABP } from '../models/common';\r\nimport { RoutesService } from '../services/routes.service';\r\nimport { TreeNode } from './tree-utils';\r\n\r\nexport function findRoute(routes: RoutesService, path: string): TreeNode<ABP.Route> {\r\n  const node = routes.find(route => route.path === path);\r\n\r\n  return node || path === '/'\r\n    ? node\r\n    : findRoute(\r\n        routes,\r\n        path\r\n          .split('/')\r\n          .slice(0, -1)\r\n          .join('/'),\r\n      );\r\n}\r\n\r\nexport function getRoutePath(router: Router, url = router.url) {\r\n  const emptyGroup = { segments: [] } as UrlSegmentGroup;\r\n  const primaryGroup = router.parseUrl(url).root.children[PRIMARY_OUTLET];\r\n\r\n  return '/' + (primaryGroup || emptyGroup).segments.map(({ path }) => path).join('/');\r\n}\r\n","import { Component, Injector, Optional, SkipSelf, Type } from '@angular/core';\r\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { eLayoutType } from '../enums/common';\r\nimport { ABP } from '../models';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { LocalizationService } from '../services/localization.service';\r\nimport { RoutesService } from '../services/routes.service';\r\nimport { SubscriptionService } from '../services/subscription.service';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\nimport { findRoute, getRoutePath } from '../utils/route-utils';\r\nimport { TreeNode } from '../utils/tree-utils';\r\n\r\n@Component({\r\n  selector: 'abp-dynamic-layout',\r\n  template: `\r\n    <ng-container *ngTemplateOutlet=\"layout ? componentOutlet : routerOutlet\"></ng-container>\r\n    <ng-template #routerOutlet><router-outlet></router-outlet></ng-template>\r\n    <ng-template #componentOutlet\r\n      ><ng-container *ngIf=\"isLayoutVisible\" [ngComponentOutlet]=\"layout\"></ng-container\r\n    ></ng-template>\r\n  `,\r\n  providers: [SubscriptionService],\r\n})\r\nexport class DynamicLayoutComponent {\r\n  layout: Type<any>;\r\n\r\n  // TODO: Consider a shared enum (eThemeSharedComponents) for known layouts\r\n  readonly layouts = new Map([\r\n    ['application', 'Theme.ApplicationLayoutComponent'],\r\n    ['account', 'Theme.AccountLayoutComponent'],\r\n    ['empty', 'Theme.EmptyLayoutComponent'],\r\n  ]);\r\n\r\n  isLayoutVisible = true;\r\n\r\n  constructor(\r\n    injector: Injector,\r\n    private localizationService: LocalizationService,\r\n    private store: Store,\r\n    private subscription: SubscriptionService,\r\n    @Optional() @SkipSelf() dynamicLayoutComponent: DynamicLayoutComponent,\r\n  ) {\r\n    if (dynamicLayoutComponent) return;\r\n    const route = injector.get(ActivatedRoute);\r\n    const router = injector.get(Router);\r\n    const routes = injector.get(RoutesService);\r\n\r\n    this.subscription.addOne(router.events, event => {\r\n      if (event instanceof NavigationEnd) {\r\n        let expectedLayout = (route.snapshot.data || {}).layout;\r\n\r\n        if (!expectedLayout) {\r\n          let node = findRoute(routes, getRoutePath(router));\r\n          node = { parent: node } as TreeNode<ABP.Route>;\r\n\r\n          while (node.parent) {\r\n            node = node.parent;\r\n\r\n            if (node.layout) {\r\n              expectedLayout = node.layout;\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        if (!expectedLayout) expectedLayout = eLayoutType.empty;\r\n\r\n        const key = this.layouts.get(expectedLayout);\r\n        this.layout = this.getComponent(key).component;\r\n      }\r\n    });\r\n\r\n    this.listenToLanguageChange();\r\n  }\r\n\r\n  private listenToLanguageChange() {\r\n    this.subscription.addOne(this.localizationService.languageChange, () => {\r\n      this.isLayoutVisible = false;\r\n      setTimeout(() => (this.isLayoutVisible = true), 0);\r\n    });\r\n  }\r\n\r\n  private getComponent(key: string): ReplaceableComponents.ReplaceableComponent {\r\n    return this.store.selectSnapshot(ReplaceableComponentsState.getComponent(key));\r\n  }\r\n}\r\n","import { Component, OnInit, Type } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { distinctUntilChanged } from 'rxjs/operators';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { SubscriptionService } from '../services/subscription.service';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\n\r\n@Component({\r\n  selector: 'abp-replaceable-route-container',\r\n  template: `\r\n    <ng-container *ngComponentOutlet=\"externalComponent || defaultComponent\"></ng-container>\r\n  `,\r\n  providers: [SubscriptionService],\r\n})\r\nexport class ReplaceableRouteContainerComponent implements OnInit {\r\n  defaultComponent: Type<any>;\r\n\r\n  componentKey: string;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private store: Store,\r\n    private subscription: SubscriptionService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.defaultComponent = this.route.snapshot.data.replaceableComponent.defaultComponent;\r\n    this.componentKey = (this.route.snapshot.data\r\n      .replaceableComponent as ReplaceableComponents.RouteData).key;\r\n\r\n    const component$ = this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.componentKey))\r\n      .pipe(distinctUntilChanged());\r\n\r\n    this.subscription.addOne(\r\n      component$,\r\n      (res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.externalComponent = res.component;\r\n      },\r\n    );\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'abp-router-outlet',\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `,\r\n})\r\nexport class RouterOutletComponent {}\r\n","import { Directive, ElementRef, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[autofocus]'\r\n})\r\nexport class AutofocusDirective implements AfterViewInit {\r\n  @Input('autofocus')\r\n  delay = 0;\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit(): void {\r\n    setTimeout(() => this.elRef.nativeElement.focus(), this.delay);\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { SubscriptionService } from '../services/subscription.service';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[input.debounce]',\r\n  providers: [SubscriptionService],\r\n})\r\nexport class InputEventDebounceDirective implements OnInit {\r\n  @Input() debounce = 300;\r\n\r\n  @Output('input.debounce') readonly debounceEvent = new EventEmitter<Event>();\r\n\r\n  constructor(private el: ElementRef, private subscription: SubscriptionService) {}\r\n\r\n  ngOnInit(): void {\r\n    const input$ = fromEvent(this.el.nativeElement, 'input').pipe(debounceTime(this.debounce));\r\n\r\n    this.subscription.addOne(input$, (event: Event) => {\r\n      this.debounceEvent.emit(event);\r\n    });\r\n  }\r\n}\r\n","import { AfterViewInit, ChangeDetectorRef, Directive, ElementRef, HostBinding, Input } from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[abpEllipsis]',\r\n})\r\nexport class EllipsisDirective implements AfterViewInit {\r\n  @Input('abpEllipsis')\r\n  width: string;\r\n\r\n  @HostBinding('title')\r\n  @Input()\r\n  title: string;\r\n\r\n  @Input('abpEllipsisEnabled')\r\n  enabled = true;\r\n\r\n  @HostBinding('class.abp-ellipsis-inline')\r\n  get inlineClass() {\r\n    return this.enabled && this.width;\r\n  }\r\n\r\n  @HostBinding('class.abp-ellipsis')\r\n  get class() {\r\n    return this.enabled && !this.width;\r\n  }\r\n\r\n  @HostBinding('style.max-width')\r\n  get maxWidth() {\r\n    return this.enabled && this.width ? this.width || '170px' : undefined;\r\n  }\r\n\r\n  constructor(private cdRef: ChangeDetectorRef, private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.title = this.title || (this.elRef.nativeElement as HTMLElement).innerText;\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  EmbeddedViewRef,\r\n  Input,\r\n  IterableChangeRecord,\r\n  IterableChanges,\r\n  IterableDiffer,\r\n  IterableDiffers,\r\n  OnChanges,\r\n  TemplateRef,\r\n  TrackByFunction,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport compare from 'just-compare';\r\nimport clone from 'just-clone';\r\n\r\nexport type CompareFn<T = any> = (value: T, comparison: T) => boolean;\r\n\r\nclass AbpForContext {\r\n  constructor(public $implicit: any, public index: number, public count: number, public list: any[]) {}\r\n}\r\n\r\nclass RecordView {\r\n  constructor(public record: IterableChangeRecord<any>, public view: EmbeddedViewRef<AbpForContext>) {}\r\n}\r\n\r\n@Directive({\r\n  selector: '[abpFor]',\r\n})\r\nexport class ForDirective implements OnChanges {\r\n  @Input('abpForOf')\r\n  items: any[];\r\n\r\n  @Input('abpForOrderBy')\r\n  orderBy: string;\r\n\r\n  @Input('abpForOrderDir')\r\n  orderDir: 'ASC' | 'DESC';\r\n\r\n  @Input('abpForFilterBy')\r\n  filterBy: string;\r\n\r\n  @Input('abpForFilterVal')\r\n  filterVal: any;\r\n\r\n  @Input('abpForTrackBy')\r\n  trackBy;\r\n\r\n  @Input('abpForCompareBy')\r\n  compareBy: CompareFn;\r\n\r\n  @Input('abpForEmptyRef')\r\n  emptyRef: TemplateRef<any>;\r\n\r\n  private differ: IterableDiffer<any>;\r\n\r\n  private isShowEmptyRef: boolean;\r\n\r\n  get compareFn(): CompareFn {\r\n    return this.compareBy || compare;\r\n  }\r\n\r\n  get trackByFn(): TrackByFunction<any> {\r\n    return this.trackBy || ((index: number, item: any) => (item as any).id || index);\r\n  }\r\n\r\n  constructor(\r\n    private tempRef: TemplateRef<AbpForContext>,\r\n    private vcRef: ViewContainerRef,\r\n    private differs: IterableDiffers,\r\n  ) {}\r\n\r\n  private iterateOverAppliedOperations(changes: IterableChanges<any>) {\r\n    const rw: RecordView[] = [];\r\n\r\n    changes.forEachOperation((record: IterableChangeRecord<any>, previousIndex: number, currentIndex: number) => {\r\n      if (record.previousIndex == null) {\r\n        const view = this.vcRef.createEmbeddedView(\r\n          this.tempRef,\r\n          new AbpForContext(null, -1, -1, this.items),\r\n          currentIndex,\r\n        );\r\n\r\n        rw.push(new RecordView(record, view));\r\n      } else if (currentIndex == null) {\r\n        this.vcRef.remove(previousIndex);\r\n      } else {\r\n        const view = this.vcRef.get(previousIndex);\r\n        this.vcRef.move(view, currentIndex);\r\n\r\n        rw.push(new RecordView(record, view as EmbeddedViewRef<AbpForContext>));\r\n      }\r\n    });\r\n\r\n    for (let i = 0, l = rw.length; i < l; i++) {\r\n      rw[i].view.context.$implicit = rw[i].record.item;\r\n    }\r\n  }\r\n\r\n  private iterateOverAttachedViews(changes: IterableChanges<any>) {\r\n    for (let i = 0, l = this.vcRef.length; i < l; i++) {\r\n      const viewRef = this.vcRef.get(i) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.index = i;\r\n      viewRef.context.count = l;\r\n      viewRef.context.list = this.items;\r\n    }\r\n\r\n    changes.forEachIdentityChange((record: IterableChangeRecord<any>) => {\r\n      const viewRef = this.vcRef.get(record.currentIndex) as EmbeddedViewRef<AbpForContext>;\r\n      viewRef.context.$implicit = record.item;\r\n    });\r\n  }\r\n\r\n  private projectItems(items: any[]): void {\r\n    if (!items.length && this.emptyRef) {\r\n      this.vcRef.clear();\r\n      // tslint:disable-next-line: no-unused-expression\r\n      this.vcRef.createEmbeddedView(this.emptyRef).rootNodes;\r\n      this.isShowEmptyRef = true;\r\n      this.differ = null;\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.emptyRef && this.isShowEmptyRef) {\r\n      this.vcRef.clear();\r\n      this.isShowEmptyRef = false;\r\n    }\r\n\r\n    if (!this.differ && items) {\r\n      this.differ = this.differs.find(items).create(this.trackByFn);\r\n    }\r\n\r\n    if (this.differ) {\r\n      const changes = this.differ.diff(items);\r\n\r\n      if (changes) {\r\n        this.iterateOverAppliedOperations(changes);\r\n        this.iterateOverAttachedViews(changes);\r\n      }\r\n    }\r\n  }\r\n\r\n  private sortItems(items: any[]) {\r\n    if (this.orderBy) {\r\n      items.sort((a, b) => (a[this.orderBy] > b[this.orderBy] ? 1 : a[this.orderBy] < b[this.orderBy] ? -1 : 0));\r\n    } else {\r\n      items.sort();\r\n    }\r\n  }\r\n\r\n  ngOnChanges() {\r\n    let items = clone(this.items) as any[];\r\n    if (!Array.isArray(items)) return;\r\n\r\n    const compareFn = this.compareFn;\r\n\r\n    if (typeof this.filterBy !== 'undefined' && typeof this.filterVal !== 'undefined' && this.filterVal !== '') {\r\n      items = items.filter(item => compareFn(item[this.filterBy], this.filterVal));\r\n    }\r\n\r\n    switch (this.orderDir) {\r\n      case 'ASC':\r\n        this.sortItems(items);\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      case 'DESC':\r\n        this.sortItems(items);\r\n        items.reverse();\r\n        this.projectItems(items);\r\n        break;\r\n\r\n      default:\r\n        this.projectItems(items);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ChangeDetectorRef,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  Self,\r\n} from '@angular/core';\r\nimport { FormControl, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, filter } from 'rxjs/operators';\r\nimport { SubscriptionService } from '../services/subscription.service';\r\n\r\ntype Controls = { [key: string]: FormControl } | FormGroup[];\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: 'form[ngSubmit][formGroup]',\r\n  providers: [SubscriptionService],\r\n})\r\nexport class FormSubmitDirective implements OnInit {\r\n  @Input()\r\n  debounce = 200;\r\n\r\n  @Input()\r\n  notValidateOnSubmit: string | boolean;\r\n\r\n  @Output() readonly ngSubmit = new EventEmitter();\r\n\r\n  executedNgSubmit = false;\r\n\r\n  constructor(\r\n    @Self() private formGroupDirective: FormGroupDirective,\r\n    private host: ElementRef<HTMLFormElement>,\r\n    private cdRef: ChangeDetectorRef,\r\n    private subscription: SubscriptionService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.addOne(this.formGroupDirective.ngSubmit, () => {\r\n      this.markAsDirty();\r\n      this.executedNgSubmit = true;\r\n    });\r\n\r\n    const keyup$ = fromEvent(this.host.nativeElement as HTMLElement, 'keyup').pipe(\r\n      debounceTime(this.debounce),\r\n      filter((key: KeyboardEvent) => key && key.key === 'Enter'),\r\n    );\r\n\r\n    this.subscription.addOne(keyup$, () => {\r\n      if (!this.executedNgSubmit) {\r\n        this.host.nativeElement.dispatchEvent(\r\n          new Event('submit', { bubbles: true, cancelable: true }),\r\n        );\r\n      }\r\n\r\n      this.executedNgSubmit = false;\r\n    });\r\n  }\r\n\r\n  markAsDirty() {\r\n    const { form } = this.formGroupDirective;\r\n\r\n    setDirty(form.controls as { [key: string]: FormControl });\r\n    form.markAsDirty();\r\n\r\n    this.cdRef.detectChanges();\r\n  }\r\n}\r\n\r\nfunction setDirty(controls: Controls) {\r\n  if (Array.isArray(controls)) {\r\n    controls.forEach(group => {\r\n      setDirty(group.controls as { [key: string]: FormControl });\r\n    });\r\n    return;\r\n  }\r\n\r\n  Object.keys(controls).forEach(key => {\r\n    controls[key].markAsDirty();\r\n    controls[key].updateValueAndValidity();\r\n  });\r\n}\r\n","import { Directive, Output, EventEmitter, ElementRef, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({ selector: '[abpInit]' })\r\nexport class InitDirective implements AfterViewInit {\r\n  @Output('abpInit') readonly init = new EventEmitter<ElementRef<any>>();\r\n\r\n  constructor(private elRef: ElementRef) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.init.emit(this.elRef);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService } from './rest.service';\r\nimport { Profile, Rest } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileService {\r\n  apiName = 'AbpIdentity';\r\n\r\n  constructor(private rest: RestService) {}\r\n\r\n  get(): Observable<Profile.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/identity/my-profile',\r\n    };\r\n\r\n    return this.rest.request<null, Profile.Response>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  update(body: Profile.Response): Observable<Profile.Response> {\r\n    const request: Rest.Request<Profile.Response> = {\r\n      method: 'PUT',\r\n      url: '/api/identity/my-profile',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.Response, Profile.Response>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n\r\n  changePassword(\r\n    body: Profile.ChangePasswordRequest,\r\n    skipHandleError: boolean = false,\r\n  ): Observable<null> {\r\n    const request: Rest.Request<Profile.ChangePasswordRequest> = {\r\n      method: 'POST',\r\n      url: '/api/identity/my-profile/change-password',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<Profile.ChangePasswordRequest, null>(request, {\r\n      skipHandleError,\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ChangePassword, GetProfile, UpdateProfile } from '../actions/profile.actions';\r\nimport { Profile } from '../models/profile';\r\nimport { ProfileService } from '../services/profile.service';\r\n\r\n@State<Profile.State>({\r\n  name: 'ProfileState',\r\n  defaults: {} as Profile.State,\r\n})\r\n@Injectable()\r\nexport class ProfileState {\r\n  @Selector()\r\n  static getProfile({ profile }: Profile.State): Profile.Response {\r\n    return profile;\r\n  }\r\n\r\n  constructor(private profileService: ProfileService) {}\r\n\r\n  @Action(GetProfile)\r\n  getProfile({ patchState }: StateContext<Profile.State>) {\r\n    return this.profileService.get().pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(UpdateProfile)\r\n  updateProfile({ patchState }: StateContext<Profile.State>, { payload }: UpdateProfile) {\r\n    return this.profileService.update(payload).pipe(\r\n      tap(profile =>\r\n        patchState({\r\n          profile,\r\n        }),\r\n      ),\r\n    );\r\n  }\r\n\r\n  @Action(ChangePassword)\r\n  changePassword(_, { payload }: ChangePassword) {\r\n    return this.profileService.changePassword(payload, true);\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  ElementRef,\r\n  Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Optional,\r\n  Renderer2,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Subscription } from 'rxjs';\r\nimport { ConfigState } from '../states';\r\n\r\n@Directive({\r\n  selector: '[abpPermission]',\r\n})\r\nexport class PermissionDirective implements OnInit, OnDestroy, OnChanges {\r\n  @Input('abpPermission') condition: string;\r\n\r\n  subscription: Subscription;\r\n\r\n  constructor(\r\n    private elRef: ElementRef,\r\n    private renderer: Renderer2,\r\n    private store: Store,\r\n    @Optional() private templateRef: TemplateRef<any>,\r\n    private vcRef: ViewContainerRef,\r\n  ) {}\r\n\r\n  private check() {\r\n    if (this.subscription) {\r\n      this.subscription.unsubscribe();\r\n    }\r\n\r\n    this.subscription = this.store\r\n      .select(ConfigState.getGrantedPolicy(this.condition))\r\n      .subscribe(isGranted => {\r\n        if (this.templateRef && isGranted) {\r\n          this.vcRef.clear();\r\n          this.vcRef.createEmbeddedView(this.templateRef);\r\n        } else if (this.templateRef && !isGranted) {\r\n          this.vcRef.clear();\r\n        } else if (!isGranted && !this.templateRef) {\r\n          this.renderer.removeChild(\r\n            (this.elRef.nativeElement as HTMLElement).parentElement,\r\n            this.elRef.nativeElement,\r\n          );\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.templateRef && !this.condition) {\r\n      this.vcRef.createEmbeddedView(this.templateRef);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    if (this.subscription) this.subscription.unsubscribe();\r\n  }\r\n\r\n  ngOnChanges({ condition }: SimpleChanges) {\r\n    if ((condition || { currentValue: null }).currentValue) {\r\n      this.check();\r\n    }\r\n  }\r\n}\r\n","import {\r\n  ComponentFactoryResolver,\r\n  Directive,\r\n  Injector,\r\n  Input,\r\n  OnChanges,\r\n  OnInit,\r\n  SimpleChanges,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport compare from 'just-compare';\r\nimport { Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { ABP } from '../models/common';\r\nimport { ReplaceableComponents } from '../models/replaceable-components';\r\nimport { SubscriptionService } from '../services/subscription.service';\r\nimport { ReplaceableComponentsState } from '../states/replaceable-components.state';\r\n\r\n@Directive({ selector: '[abpReplaceableTemplate]', providers: [SubscriptionService] })\r\nexport class ReplaceableTemplateDirective implements OnInit, OnChanges {\r\n  @Input('abpReplaceableTemplate')\r\n  data: ReplaceableComponents.ReplaceableTemplateDirectiveInput<any, any>;\r\n\r\n  providedData = { inputs: {}, outputs: {} } as ReplaceableComponents.ReplaceableTemplateData<\r\n    any,\r\n    any\r\n  >;\r\n\r\n  context = {} as any;\r\n\r\n  externalComponent: Type<any>;\r\n\r\n  defaultComponentRef: any;\r\n\r\n  defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n\r\n  initialized = false;\r\n\r\n  constructor(\r\n    private injector: Injector,\r\n    private templateRef: TemplateRef<any>,\r\n    private cfRes: ComponentFactoryResolver,\r\n    private vcRef: ViewContainerRef,\r\n    private store: Store,\r\n    private subscription: SubscriptionService,\r\n  ) {\r\n    this.context = {\r\n      initTemplate: ref => {\r\n        this.resetDefaultComponent();\r\n        this.defaultComponentRef = ref;\r\n        this.setDefaultComponentInputs();\r\n      },\r\n    };\r\n  }\r\n\r\n  ngOnInit() {\r\n    const component$ = this.store\r\n      .select(ReplaceableComponentsState.getComponent(this.data.componentKey))\r\n      .pipe(\r\n        filter(\r\n          (res = {} as ReplaceableComponents.ReplaceableComponent) =>\r\n            !this.initialized || !compare(res.component, this.externalComponent),\r\n        ),\r\n      );\r\n\r\n    this.subscription.addOne(\r\n      component$,\r\n      (res = {} as ReplaceableComponents.ReplaceableComponent) => {\r\n        this.vcRef.clear();\r\n        this.externalComponent = res.component;\r\n        if (this.defaultComponentRef) {\r\n          this.resetDefaultComponent();\r\n        }\r\n\r\n        if (res.component) {\r\n          this.setProvidedData();\r\n          const customInjector = Injector.create({\r\n            providers: [{ provide: 'REPLACEABLE_DATA', useValue: this.providedData }],\r\n            parent: this.injector,\r\n          });\r\n          this.vcRef.createComponent(\r\n            this.cfRes.resolveComponentFactory(res.component),\r\n            0,\r\n            customInjector,\r\n          );\r\n        } else {\r\n          this.vcRef.createEmbeddedView(this.templateRef, this.context);\r\n        }\r\n\r\n        this.initialized = true;\r\n      },\r\n    );\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (snq(() => changes.data.currentValue.inputs) && this.defaultComponentRef) {\r\n      this.setDefaultComponentInputs();\r\n    }\r\n  }\r\n\r\n  setDefaultComponentInputs() {\r\n    if (!this.defaultComponentRef || (!this.data.inputs && !this.data.outputs)) return;\r\n\r\n    if (this.data.inputs) {\r\n      for (const key in this.data.inputs) {\r\n        if (this.data.inputs.hasOwnProperty(key)) {\r\n          if (!compare(this.defaultComponentRef[key], this.data.inputs[key].value)) {\r\n            this.defaultComponentRef[key] = this.data.inputs[key].value;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.data.outputs) {\r\n      for (const key in this.data.outputs) {\r\n        if (this.data.outputs.hasOwnProperty(key)) {\r\n          if (!this.defaultComponentSubscriptions[key]) {\r\n            this.defaultComponentSubscriptions[key] = this.defaultComponentRef[key].subscribe(\r\n              value => {\r\n                this.data.outputs[key](value);\r\n              },\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  setProvidedData() {\r\n    this.providedData = { ...this.data, inputs: {} };\r\n\r\n    if (!this.data.inputs) return;\r\n    Object.defineProperties(this.providedData.inputs, {\r\n      ...Object.keys(this.data.inputs).reduce(\r\n        (acc, key) => ({\r\n          ...acc,\r\n          [key]: {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => this.data.inputs[key].value,\r\n            ...(this.data.inputs[key].twoWay && {\r\n              set: newValue => {\r\n                this.data.inputs[key].value = newValue;\r\n                this.data.outputs[`${key}Change`](newValue);\r\n              },\r\n            }),\r\n          },\r\n        }),\r\n        {},\r\n      ),\r\n    });\r\n  }\r\n\r\n  resetDefaultComponent() {\r\n    Object.keys(this.defaultComponentSubscriptions).forEach(key => {\r\n      this.defaultComponentSubscriptions[key].unsubscribe();\r\n    });\r\n    this.defaultComponentSubscriptions = {} as ABP.Dictionary<Subscription>;\r\n    this.defaultComponentRef = null;\r\n  }\r\n}\r\n","import { Directive, ElementRef, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { fromEvent } from 'rxjs';\r\nimport { SubscriptionService } from '../services/subscription.service';\r\n\r\n@Directive({\r\n  // tslint:disable-next-line: directive-selector\r\n  selector: '[click.stop]',\r\n  providers: [SubscriptionService],\r\n})\r\nexport class StopPropagationDirective implements OnInit {\r\n  @Output('click.stop') readonly stopPropEvent = new EventEmitter<MouseEvent>();\r\n\r\n  constructor(private el: ElementRef, private subscription: SubscriptionService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.subscription.addOne(fromEvent(this.el.nativeElement, 'click'), (event: MouseEvent) => {\r\n      event.stopPropagation();\r\n      this.stopPropEvent.emit(event);\r\n    });\r\n  }\r\n}\r\n","import { Directive, Input, Optional, ElementRef, Renderer2, AfterViewInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport snq from 'snq';\r\n\r\n/**\r\n *\r\n * @deprecated To be deleted in v3.3\r\n */\r\n@Directive({\r\n  selector: '[abpVisibility]',\r\n})\r\nexport class VisibilityDirective implements AfterViewInit {\r\n  @Input('abpVisibility')\r\n  focusedElement: HTMLElement;\r\n\r\n  completed$ = new Subject<boolean>();\r\n\r\n  constructor(@Optional() private elRef: ElementRef, private renderer: Renderer2) {}\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.focusedElement && this.elRef) {\r\n      this.focusedElement = this.elRef.nativeElement;\r\n    }\r\n\r\n    let observer: MutationObserver;\r\n    observer = new MutationObserver(mutations => {\r\n      mutations.forEach(mutation => {\r\n        if (!mutation.target) return;\r\n\r\n        const htmlNodes = snq(\r\n          () => Array.from(mutation.target.childNodes).filter(node => node instanceof HTMLElement),\r\n          [],\r\n        );\r\n\r\n        if (!htmlNodes.length) {\r\n          this.removeFromDOM();\r\n        }\r\n      });\r\n    });\r\n\r\n    observer.observe(this.focusedElement, {\r\n      childList: true,\r\n    });\r\n\r\n    setTimeout(() => {\r\n      const htmlNodes = snq(\r\n        () =>\r\n          Array.from(this.focusedElement.childNodes).filter(node => node instanceof HTMLElement),\r\n        [],\r\n      );\r\n\r\n      if (!htmlNodes.length) this.removeFromDOM();\r\n    }, 0);\r\n\r\n    this.completed$.subscribe(() => observer.disconnect());\r\n  }\r\n\r\n  disconnect() {\r\n    this.completed$.next();\r\n    this.completed$.complete();\r\n  }\r\n\r\n  removeFromDOM() {\r\n    if (!this.elRef.nativeElement) return;\r\n\r\n    this.renderer.removeChild(this.elRef.nativeElement.parentElement, this.elRef.nativeElement);\r\n    this.disconnect();\r\n  }\r\n}\r\n","import { Inject, Injectable } from '@angular/core';\r\nimport { Actions, ofActionSuccessful } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport compare from 'just-compare';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { SetEnvironment } from '../actions/config.actions';\r\nimport { ABP } from '../models/common';\r\nimport { CORE_OPTIONS } from '../tokens/options.token';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class OAuthConfigurationHandler {\r\n  constructor(\r\n    private actions: Actions,\r\n    private oAuthService: OAuthService,\r\n    @Inject(CORE_OPTIONS) private options: ABP.Root,\r\n  ) {\r\n    this.listenToSetEnvironment();\r\n  }\r\n\r\n  private listenToSetEnvironment() {\r\n    this.actions\r\n      .pipe(ofActionSuccessful(SetEnvironment))\r\n      .pipe(\r\n        map(({ environment }: SetEnvironment) => environment.oAuthConfig),\r\n        filter(config => !compare(config, this.options.environment.oAuthConfig)),\r\n      )\r\n      .subscribe(config => {\r\n        this.oAuthService.configure(config);\r\n      });\r\n  }\r\n}\r\n","import { Injectable, Optional } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { ABP } from '../models';\r\nimport { RoutesService } from '../services/routes.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class RoutesHandler {\r\n  constructor(private routes: RoutesService, @Optional() private router: Router) {\r\n    this.addRoutes();\r\n  }\r\n\r\n  addRoutes() {\r\n    this.router?.config?.forEach(({ path = '', data }) => {\r\n      if (!data?.routes) return;\r\n\r\n      if (Array.isArray(data.routes)) {\r\n        this.routes.add(data.routes);\r\n        return;\r\n      }\r\n\r\n      const routes = flatRoutes([{ path, ...data.routes }], { path: '' });\r\n      this.routes.add(routes);\r\n    });\r\n  }\r\n}\r\n\r\nfunction flatRoutes(routes: RouteDef[], parent: any) {\r\n  if (!routes) return [];\r\n\r\n  return routes.reduce((acc, route) => {\r\n    const { children, ...current } = {\r\n      ...route,\r\n      parentName: parent.name,\r\n      path: (parent.path + '/' + route.path).replace(/\\/\\//g, '/'),\r\n    };\r\n\r\n    acc.push(current, ...flatRoutes(children, current));\r\n\r\n    return acc;\r\n  }, []);\r\n}\r\n\r\ntype RouteDef = ABP.Route & { children: RouteDef[] };\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Store } from '@ngxs/store';\r\nimport { SessionState } from '../states';\r\nimport { StartLoader, StopLoader } from '../actions/loader.actions';\r\nimport { finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class ApiInterceptor implements HttpInterceptor {\r\n  constructor(private oAuthService: OAuthService, private store: Store) {}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler) {\r\n    this.store.dispatch(new StartLoader(request));\r\n\r\n    const headers = {} as any;\r\n\r\n    const token = this.oAuthService.getAccessToken();\r\n    if (!request.headers.has('Authorization') && token) {\r\n      headers['Authorization'] = `Bearer ${token}`;\r\n    }\r\n\r\n    const lang = this.store.selectSnapshot(SessionState.getLanguage);\r\n    if (!request.headers.has('Accept-Language') && lang) {\r\n      headers['Accept-Language'] = lang;\r\n    }\r\n\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n    if (!request.headers.has('__tenant') && tenant) {\r\n      headers['__tenant'] = tenant.id;\r\n    }\r\n\r\n    return next\r\n      .handle(\r\n        request.clone({\r\n          setHeaders: headers,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => this.store.dispatch(new StopLoader(request))));\r\n  }\r\n}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { Config } from '../models';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class LocalizationPipe implements PipeTransform {\r\n  constructor(private store: Store) {}\r\n\r\n  transform(\r\n    value: string | Config.LocalizationWithDefault = '',\r\n    ...interpolateParams: string[]\r\n  ): string {\r\n    return this.store.selectSnapshot(\r\n      ConfigState.getLocalization(\r\n        value,\r\n        ...interpolateParams.reduce(\r\n          (acc, val) => (Array.isArray(val) ? [...acc, ...val] : [...acc, val]),\r\n          [],\r\n        ),\r\n      ),\r\n    );\r\n  }\r\n}\r\n\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpLocalization',\r\n})\r\nexport class MockLocalizationPipe implements PipeTransform {\r\n  transform(value: string | Config.LocalizationWithDefault = '', ..._: string[]) {\r\n    return typeof value === 'string' ? value : value.defaultValue;\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { LocalizationPipe } from './pipes/localization.pipe';\r\n\r\n@NgModule({\r\n  exports: [LocalizationPipe],\r\n  declarations: [LocalizationPipe],\r\n})\r\nexport class LocalizationModule {}\r\n","import { Injectable, Pipe, PipeTransform } from '@angular/core';\r\nexport type SortOrder = 'asc' | 'desc';\r\n@Injectable()\r\n@Pipe({\r\n  name: 'abpSort',\r\n})\r\nexport class SortPipe implements PipeTransform {\r\n  transform(\r\n    value: any[],\r\n    sortOrder: SortOrder | string = 'asc',\r\n    sortKey?: string,\r\n  ): any {\r\n    sortOrder = sortOrder && (sortOrder.toLowerCase() as any);\r\n\r\n    if (!value || (sortOrder !== 'asc' && sortOrder !== 'desc')) return value;\r\n\r\n    let numberArray = [];\r\n    let stringArray = [];\r\n\r\n    if (!sortKey) {\r\n      numberArray = value.filter(item => typeof item === 'number').sort();\r\n      stringArray = value.filter(item => typeof item === 'string').sort();\r\n    } else {\r\n      numberArray = value\r\n        .filter(item => typeof item[sortKey] === 'number')\r\n        .sort((a, b) => a[sortKey] - b[sortKey]);\r\n      stringArray = value\r\n        .filter(item => typeof item[sortKey] === 'string')\r\n        .sort((a, b) => {\r\n          if (a[sortKey] < b[sortKey]) return -1;\r\n          else if (a[sortKey] > b[sortKey]) return 1;\r\n          else return 0;\r\n        });\r\n    }\r\n    const sorted = [\r\n      ...numberArray,\r\n      ...stringArray,\r\n      ...value.filter(\r\n        item =>\r\n          typeof (sortKey ? item[sortKey] : item) !== 'number' &&\r\n          typeof (sortKey ? item[sortKey] : item) !== 'string',\r\n      ),\r\n    ];\r\n    return sortOrder === 'asc' ? sorted : sorted.reverse();\r\n  }\r\n}\r\n","import { Inject, Injectable, InjectionToken } from '@angular/core';\r\nimport {\r\n  actionMatcher,\r\n  InitState,\r\n  NgxsNextPluginFn,\r\n  NgxsPlugin,\r\n  setValue,\r\n  UpdateState,\r\n} from '@ngxs/store';\r\nimport { ABP } from '../models/common';\r\n\r\nexport const NGXS_CONFIG_PLUGIN_OPTIONS = new InjectionToken('NGXS_CONFIG_PLUGIN_OPTIONS');\r\n\r\n@Injectable()\r\nexport class ConfigPlugin implements NgxsPlugin {\r\n  private initialized = false;\r\n\r\n  constructor(@Inject(NGXS_CONFIG_PLUGIN_OPTIONS) private options: ABP.Root) {}\r\n\r\n  handle(state: any, event: any, next: NgxsNextPluginFn) {\r\n    const matches = actionMatcher(event);\r\n    const isInitAction = matches(InitState) || matches(UpdateState);\r\n\r\n    if (isInitAction && !this.initialized) {\r\n      state = setValue(state, 'ConfigState', {\r\n        ...(state.ConfigState && { ...state.ConfigState }),\r\n        ...this.options,\r\n      });\r\n\r\n      this.initialized = true;\r\n    }\r\n\r\n    return next(state, event);\r\n  }\r\n}\r\n","import { LOCALE_ID, Provider } from '@angular/core';\r\nimport localesMapping from '../constants/different-locales';\r\nimport { LocalizationService } from '../services/localization.service';\r\n\r\nexport class LocaleId extends String {\r\n  constructor(private localizationService: LocalizationService) {\r\n    super();\r\n  }\r\n\r\n  toString(): string {\r\n    const { currentLang } = this.localizationService;\r\n    return localesMapping[currentLang] || currentLang;\r\n  }\r\n\r\n  valueOf(): string {\r\n    return this.toString();\r\n  }\r\n}\r\n\r\nexport const LocaleProvider: Provider = {\r\n  provide: LOCALE_ID,\r\n  useClass: LocaleId,\r\n  deps: [LocalizationService],\r\n};\r\n","export {};\r\n\r\ndeclare global {\r\n  interface Date {\r\n    toLocalISOString?: () => string;\r\n  }\r\n}\r\n\r\nDate.prototype.toLocalISOString = function(this: Date): string {\r\n  const timezoneOffset = this.getTimezoneOffset();\r\n\r\n  return new Date(this.getTime() - timezoneOffset * 60000).toISOString();\r\n};\r\n","import { APP_BASE_HREF, CommonModule } from '@angular/common';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { APP_INITIALIZER, Injector, ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxsRouterPluginModule } from '@ngxs/router-plugin';\r\nimport {\r\n  NgxsStoragePluginModule,\r\n  NGXS_STORAGE_PLUGIN_OPTIONS,\r\n  StorageOption,\r\n} from '@ngxs/storage-plugin';\r\nimport { NgxsModule, NGXS_PLUGINS } from '@ngxs/store';\r\nimport { OAuthModule, OAuthStorage } from 'angular-oauth2-oidc';\r\nimport { AbstractNgModelComponent } from './abstracts/ng-model.component';\r\nimport { DynamicLayoutComponent } from './components/dynamic-layout.component';\r\nimport { ReplaceableRouteContainerComponent } from './components/replaceable-route-container.component';\r\nimport { RouterOutletComponent } from './components/router-outlet.component';\r\nimport { AutofocusDirective } from './directives/autofocus.directive';\r\nimport { InputEventDebounceDirective } from './directives/debounce.directive';\r\nimport { EllipsisDirective } from './directives/ellipsis.directive';\r\nimport { ForDirective } from './directives/for.directive';\r\nimport { FormSubmitDirective } from './directives/form-submit.directive';\r\nimport { InitDirective } from './directives/init.directive';\r\nimport { PermissionDirective } from './directives/permission.directive';\r\nimport { ReplaceableTemplateDirective } from './directives/replaceable-template.directive';\r\nimport { StopPropagationDirective } from './directives/stop-propagation.directive';\r\nimport { VisibilityDirective } from './directives/visibility.directive';\r\nimport { OAuthConfigurationHandler } from './handlers/oauth-configuration.handler';\r\nimport { RoutesHandler } from './handlers/routes.handler';\r\nimport { ApiInterceptor } from './interceptors/api.interceptor';\r\nimport { LocalizationModule } from './localization.module';\r\nimport { ABP } from './models/common';\r\nimport { LocalizationPipe, MockLocalizationPipe } from './pipes/localization.pipe';\r\nimport { SortPipe } from './pipes/sort.pipe';\r\nimport { ConfigPlugin, NGXS_CONFIG_PLUGIN_OPTIONS } from './plugins/config.plugin';\r\nimport { LocaleProvider } from './providers/locale.provider';\r\nimport { LocalizationService } from './services/localization.service';\r\nimport { ConfigState } from './states/config.state';\r\nimport { ProfileState } from './states/profile.state';\r\nimport { ReplaceableComponentsState } from './states/replaceable-components.state';\r\nimport { SessionState } from './states/session.state';\r\nimport { coreOptionsFactory, CORE_OPTIONS } from './tokens/options.token';\r\nimport { noop } from './utils/common-utils';\r\nimport './utils/date-extensions';\r\nimport { getInitialData, localeInitializer } from './utils/initial-utils';\r\nimport { oAuthStorage } from './strategies/auth-flow.strategy';\r\n\r\nexport function storageFactory(): OAuthStorage {\r\n  return oAuthStorage;\r\n}\r\n\r\n/**\r\n * BaseCoreModule is the module that holds\r\n * all imports, declarations, exports, and entryComponents\r\n * but not the providers.\r\n * This module will be imported and exported by all others.\r\n */\r\n@NgModule({\r\n  exports: [\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n\r\n    AbstractNgModelComponent,\r\n    AutofocusDirective,\r\n    DynamicLayoutComponent,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    InputEventDebounceDirective,\r\n    PermissionDirective,\r\n    ReplaceableRouteContainerComponent,\r\n    ReplaceableTemplateDirective,\r\n    RouterOutletComponent,\r\n    SortPipe,\r\n    StopPropagationDirective,\r\n    VisibilityDirective,\r\n  ],\r\n  imports: [\r\n    OAuthModule,\r\n    CommonModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    RouterModule,\r\n  ],\r\n  declarations: [\r\n    AbstractNgModelComponent,\r\n    AutofocusDirective,\r\n    DynamicLayoutComponent,\r\n    EllipsisDirective,\r\n    ForDirective,\r\n    FormSubmitDirective,\r\n    InitDirective,\r\n    InputEventDebounceDirective,\r\n    PermissionDirective,\r\n    ReplaceableRouteContainerComponent,\r\n    ReplaceableTemplateDirective,\r\n    RouterOutletComponent,\r\n    SortPipe,\r\n    StopPropagationDirective,\r\n    VisibilityDirective,\r\n  ],\r\n  entryComponents: [\r\n    RouterOutletComponent,\r\n    DynamicLayoutComponent,\r\n    ReplaceableRouteContainerComponent,\r\n  ],\r\n})\r\nexport class BaseCoreModule {}\r\n\r\n/**\r\n * RootCoreModule is the module that will be used at root level\r\n * and it introduces imports useful at root level (e.g. NGXS)\r\n */\r\n@NgModule({\r\n  exports: [BaseCoreModule, LocalizationModule],\r\n  imports: [\r\n    BaseCoreModule,\r\n    LocalizationModule,\r\n    NgxsModule.forFeature([ReplaceableComponentsState, ProfileState, SessionState, ConfigState]),\r\n    NgxsRouterPluginModule.forRoot(),\r\n    NgxsStoragePluginModule.forRoot(),\r\n    OAuthModule.forRoot(),\r\n  ],\r\n})\r\nexport class RootCoreModule {}\r\n\r\n/**\r\n * TestCoreModule is the module that will be used in tests\r\n * and it provides mock alternatives\r\n */\r\n@NgModule({\r\n  exports: [RouterModule, BaseCoreModule, MockLocalizationPipe],\r\n  imports: [RouterModule.forRoot([]), BaseCoreModule],\r\n  declarations: [MockLocalizationPipe],\r\n})\r\nexport class TestCoreModule {}\r\n\r\n/**\r\n * CoreModule is the module that is publicly available\r\n */\r\n@NgModule({\r\n  exports: [BaseCoreModule, LocalizationModule],\r\n  imports: [BaseCoreModule, LocalizationModule],\r\n  providers: [LocalizationPipe],\r\n})\r\nexport class CoreModule {\r\n  static forTest({ baseHref = '/' } = {} as ABP.Test): ModuleWithProviders<TestCoreModule> {\r\n    return {\r\n      ngModule: TestCoreModule,\r\n      providers: [\r\n        { provide: APP_BASE_HREF, useValue: baseHref },\r\n        {\r\n          provide: LocalizationPipe,\r\n          useClass: MockLocalizationPipe,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forRoot(options = {} as ABP.Root): ModuleWithProviders<RootCoreModule> {\r\n    return {\r\n      ngModule: RootCoreModule,\r\n      providers: [\r\n        LocaleProvider,\r\n        {\r\n          provide: NGXS_PLUGINS,\r\n          useClass: ConfigPlugin,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: NGXS_CONFIG_PLUGIN_OPTIONS,\r\n          useValue: { environment: options.environment },\r\n        },\r\n        {\r\n          provide: 'CORE_OPTIONS',\r\n          useValue: options,\r\n        },\r\n        {\r\n          provide: CORE_OPTIONS,\r\n          useFactory: coreOptionsFactory,\r\n          deps: ['CORE_OPTIONS'],\r\n        },\r\n        {\r\n          provide: HTTP_INTERCEPTORS,\r\n          useClass: ApiInterceptor,\r\n          multi: true,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [OAuthConfigurationHandler],\r\n          useFactory: noop,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: getInitialData,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [Injector],\r\n          useFactory: localeInitializer,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [LocalizationService],\r\n          useFactory: noop,\r\n        },\r\n        {\r\n          provide: APP_INITIALIZER,\r\n          multi: true,\r\n          deps: [RoutesHandler],\r\n          useFactory: noop,\r\n        },\r\n        { provide: OAuthStorage, useFactory: storageFactory },\r\n        {\r\n          provide: NGXS_STORAGE_PLUGIN_OPTIONS,\r\n          useValue: {\r\n            storage: StorageOption.LocalStorage,\r\n            serialize: JSON.stringify,\r\n            deserialize: JSON.parse,\r\n            beforeSerialize: ngxsStoragePluginSerialize,\r\n            afterDeserialize: ngxsStoragePluginSerialize,\r\n            ...options.ngxsStoragePluginOptions,\r\n            key: [...(options.ngxsStoragePluginOptions?.key || []), 'SessionState'],\r\n          },\r\n        },\r\n      ],\r\n    };\r\n  }\r\n}\r\n\r\nexport function ngxsStoragePluginSerialize(data) {\r\n  return data;\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree,\r\n} from '@angular/router';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private oauthService: OAuthService, private injector: Injector) {}\r\n\r\n  canActivate(\r\n    _: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot,\r\n  ): Observable<boolean> | boolean | UrlTree {\r\n    const router = this.injector.get(Router);\r\n\r\n    const hasValidAccessToken = this.oauthService.hasValidAccessToken();\r\n    if (hasValidAccessToken) {\r\n      return hasValidAccessToken;\r\n    }\r\n\r\n    router.navigate(['/account/login'], { state: { redirectUrl: state.url } });\r\n    return true;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Store } from '@ngxs/store';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { RestOccurError } from '../actions/rest.actions';\r\nimport { RoutesService } from '../services/routes.service';\r\nimport { ConfigState } from '../states/config.state';\r\nimport { findRoute, getRoutePath } from '../utils/route-utils';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class PermissionGuard implements CanActivate {\r\n  constructor(private router: Router, private routes: RoutesService, private store: Store) {}\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> {\r\n    let { requiredPolicy } = route.data || {};\r\n\r\n    if (!requiredPolicy) {\r\n      const routeFound = findRoute(this.routes, getRoutePath(this.router, state.url));\r\n      requiredPolicy = routeFound?.requiredPolicy;\r\n    }\r\n\r\n    if (!requiredPolicy) return of(true);\r\n\r\n    return this.store.select(ConfigState.getGrantedPolicy(requiredPolicy)).pipe(\r\n      tap(access => {\r\n        if (!access) {\r\n          this.store.dispatch(new RestOccurError({ status: 403 }));\r\n        }\r\n      }),\r\n    );\r\n  }\r\n}\r\n","import { ABP } from './common';\r\n\r\nexport class ListResultDto<T> {\r\n  items?: T[];\r\n\r\n  constructor(initialValues: Partial<ListResultDto<T>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultDto<T> extends ListResultDto<T> {\r\n  totalCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultDto<T>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class LimitedResultRequestDto {\r\n  maxResultCount = 10;\r\n\r\n  constructor(initialValues: Partial<LimitedResultRequestDto> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class PagedResultRequestDto extends LimitedResultRequestDto {\r\n  skipCount?: number;\r\n\r\n  constructor(initialValues: Partial<PagedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class PagedAndSortedResultRequestDto extends PagedResultRequestDto {\r\n  sorting?: string;\r\n\r\n  constructor(initialValues: Partial<PagedAndSortedResultRequestDto> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class EntityDto<TKey = string> {\r\n  id?: TKey;\r\n\r\n  constructor(initialValues: Partial<EntityDto<TKey>> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityDto<TPrimaryKey = string> extends EntityDto<TPrimaryKey> {\r\n  creationTime?: string | Date;\r\n  creatorId?: string;\r\n\r\n  constructor(initialValues: Partial<CreationAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class CreationAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n\r\n  constructor(\r\n    initialValues: Partial<CreationAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {},\r\n  ) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityDto<TPrimaryKey = string> extends CreationAuditedEntityDto<TPrimaryKey> {\r\n  lastModificationTime?: string | Date;\r\n  lastModifierId?: string;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class AuditedEntityWithUserDto<TUserDto, TPrimaryKey = string> extends AuditedEntityDto<\r\n  TPrimaryKey\r\n> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<AuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityDto<TPrimaryKey = string> extends AuditedEntityDto<TPrimaryKey> {\r\n  isDeleted?: boolean;\r\n  deleterId?: string;\r\n  deletionTime?: Date | string;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class FullAuditedEntityWithUserDto<\r\n  TUserDto,\r\n  TPrimaryKey = string\r\n> extends FullAuditedEntityDto<TPrimaryKey> {\r\n  creator?: TUserDto;\r\n  lastModifier?: TUserDto;\r\n  deleter?: TUserDto;\r\n\r\n  constructor(initialValues: Partial<FullAuditedEntityWithUserDto<TUserDto, TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleObject {\r\n  extraProperties: ABP.Dictionary<any>;\r\n\r\n  constructor(initialValues: Partial<ExtensibleObject> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class ExtensibleEntityDto<TKey = string> extends ExtensibleObject {\r\n  id: TKey;\r\n\r\n  constructor(initialValues: Partial<ExtensibleEntityDto<TKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleCreationAuditedEntityDto<TPrimaryKey = string> extends ExtensibleEntityDto<\r\n  TPrimaryKey\r\n> {\r\n  creationTime: Date | string;\r\n  creatorId?: string;\r\n\r\n  constructor(initialValues: Partial<ExtensibleCreationAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleAuditedEntityDto<\r\n  TPrimaryKey = string\r\n> extends ExtensibleCreationAuditedEntityDto<TPrimaryKey> {\r\n  lastModificationTime?: Date | string;\r\n  lastModifierId?: string;\r\n\r\n  constructor(initialValues: Partial<ExtensibleAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleAuditedEntityWithUserDto<\r\n  TPrimaryKey = string,\r\n  TUserDto = any\r\n> extends ExtensibleAuditedEntityDto<TPrimaryKey> {\r\n  creator: TUserDto;\r\n  lastModifier: TUserDto;\r\n\r\n  constructor(initialValues: Partial<ExtensibleAuditedEntityWithUserDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleCreationAuditedEntityWithUserDto<\r\n  TPrimaryKey = string,\r\n  TUserDto = any\r\n> extends ExtensibleCreationAuditedEntityDto<TPrimaryKey> {\r\n  creator: TUserDto;\r\n\r\n  constructor(\r\n    initialValues: Partial<ExtensibleCreationAuditedEntityWithUserDto<TPrimaryKey>> = {},\r\n  ) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleFullAuditedEntityDto<\r\n  TPrimaryKey = string\r\n> extends ExtensibleAuditedEntityDto<TPrimaryKey> {\r\n  isDeleted: boolean;\r\n  deleterId?: string;\r\n  deletionTime: Date | string;\r\n\r\n  constructor(initialValues: Partial<ExtensibleFullAuditedEntityDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n\r\nexport class ExtensibleFullAuditedEntityWithUserDto<\r\n  TPrimaryKey = string,\r\n  TUserDto = any\r\n> extends ExtensibleFullAuditedEntityDto<TPrimaryKey> {\r\n  creator: TUserDto;\r\n  lastModifier: TUserDto;\r\n  deleter: TUserDto;\r\n\r\n  constructor(initialValues: Partial<ExtensibleFullAuditedEntityWithUserDto<TPrimaryKey>> = {}) {\r\n    super(initialValues);\r\n  }\r\n}\r\n","\r\nexport class FindTenantResultDto  {\r\n  success: boolean;\r\n  tenantId?: string;\r\n  name: string;\r\n\r\n  constructor(initialValues: Partial<FindTenantResultDto> = {}) {\r\n    for (const key in initialValues) {\r\n      if (initialValues.hasOwnProperty(key)) {\r\n        this[key] = initialValues[key];\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Rest } from '../models/rest';\r\nimport { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { RestService } from './rest.service';\r\nimport { Store } from '@ngxs/store';\r\nimport { ConfigState } from '../states/config.state';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ApplicationConfigurationService {\r\n  get apiName(): string {\r\n    return this.store.selectSnapshot(ConfigState.getDeep('environment.application.name'));\r\n  }\r\n\r\n  constructor(private rest: RestService, private store: Store) {}\r\n\r\n  getConfiguration(): Observable<ApplicationConfiguration.Response> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: '/api/abp/application-configuration',\r\n    };\r\n\r\n    return this.rest.request<null, ApplicationConfiguration.Response>(request, {\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { GetAppConfiguration, SetEnvironment } from '../actions/config.actions';\r\nimport { ConfigState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ConfigStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getAll() {\r\n    return this.store.selectSnapshot(ConfigState.getAll);\r\n  }\r\n\r\n  getApplicationInfo() {\r\n    return this.store.selectSnapshot(ConfigState.getApplicationInfo);\r\n  }\r\n\r\n  getOne(...args: Parameters<typeof ConfigState.getOne>) {\r\n    return this.store.selectSnapshot(ConfigState.getOne(...args));\r\n  }\r\n\r\n  getDeep(...args: Parameters<typeof ConfigState.getDeep>) {\r\n    return this.store.selectSnapshot(ConfigState.getDeep(...args));\r\n  }\r\n\r\n  getApiUrl(...args: Parameters<typeof ConfigState.getApiUrl>) {\r\n    return this.store.selectSnapshot(ConfigState.getApiUrl(...args));\r\n  }\r\n\r\n  getFeature(...args: Parameters<typeof ConfigState.getFeature>) {\r\n    return this.store.selectSnapshot(ConfigState.getFeature(...args));\r\n  }\r\n\r\n  getSetting(...args: Parameters<typeof ConfigState.getSetting>) {\r\n    return this.store.selectSnapshot(ConfigState.getSetting(...args));\r\n  }\r\n\r\n  getSettings(...args: Parameters<typeof ConfigState.getSettings>) {\r\n    return this.store.selectSnapshot(ConfigState.getSettings(...args));\r\n  }\r\n\r\n  getGrantedPolicy(...args: Parameters<typeof ConfigState.getGrantedPolicy>) {\r\n    return this.store.selectSnapshot(ConfigState.getGrantedPolicy(...args));\r\n  }\r\n\r\n  getLocalization(...args: Parameters<typeof ConfigState.getLocalization>) {\r\n    return this.store.selectSnapshot(ConfigState.getLocalization(...args));\r\n  }\r\n\r\n  dispatchGetAppConfiguration() {\r\n    return this.store.dispatch(new GetAppConfiguration());\r\n  }\r\n\r\n  dispatchSetEnvironment(...args: ConstructorParameters<typeof SetEnvironment>) {\r\n    return this.store.dispatch(new SetEnvironment(...args));\r\n  }\r\n}\r\n","import { Injectable, Injector, TemplateRef, Type } from '@angular/core';\r\nimport { ProjectionStrategy } from '../strategies/projection.strategy';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ContentProjectionService {\r\n  constructor(private injector: Injector) {}\r\n\r\n  projectContent<T extends Type<any> | TemplateRef<any>>(\r\n    projectionStrategy: ProjectionStrategy<T>,\r\n    injector = this.injector,\r\n  ) {\r\n    return projectionStrategy.injectContent(injector);\r\n  }\r\n}\r\n","import { ApplicationConfiguration } from '../models/application-configuration';\r\nimport { ConfigStateService } from '../services';\r\n\r\nexport function getShortDateFormat(configStateService: ConfigStateService) {\r\n  const dateTimeFormat = configStateService.getDeep(\r\n    'localization.currentCulture.dateTimeFormat',\r\n  ) as ApplicationConfiguration.DateTimeFormat;\r\n\r\n  return dateTimeFormat.shortDatePattern;\r\n}\r\n\r\nexport function getShortTimeFormat(configStateService: ConfigStateService) {\r\n  const dateTimeFormat = configStateService.getDeep(\r\n    'localization.currentCulture.dateTimeFormat',\r\n  ) as ApplicationConfiguration.DateTimeFormat;\r\n\r\n  return dateTimeFormat.shortTimePattern.replace('tt', 'a');\r\n}\r\n\r\nexport function getShortDateShortTimeFormat(configStateService: ConfigStateService) {\r\n  const dateTimeFormat = configStateService.getDeep(\r\n    'localization.currentCulture.dateTimeFormat',\r\n  ) as ApplicationConfiguration.DateTimeFormat;\r\n\r\n  return `${dateTimeFormat.shortDatePattern} ${dateTimeFormat.shortTimePattern.replace('tt', 'a')}`;\r\n}\r\n","import {\r\n  Compiler,\r\n  Injector,\r\n  ModuleWithProviders,\r\n  NgModuleFactory,\r\n  NgModuleRef,\r\n  StaticProvider,\r\n  Type,\r\n} from '@angular/core';\r\n\r\nexport class LazyModuleFactory<T> extends NgModuleFactory<T> {\r\n  get moduleType(): Type<T> {\r\n    return this.moduleWithProviders.ngModule;\r\n  }\r\n\r\n  constructor(private moduleWithProviders: ModuleWithProviders<T>) {\r\n    super();\r\n  }\r\n\r\n  create(parentInjector: Injector | null): NgModuleRef<T> {\r\n    const injector = Injector.create({\r\n      parent: parentInjector,\r\n      providers: this.moduleWithProviders.providers as StaticProvider[],\r\n    });\r\n\r\n    const compiler = injector.get(Compiler);\r\n    const factory = compiler.compileModuleSync(this.moduleType);\r\n\r\n    return factory.create(injector);\r\n  }\r\n}\r\n","export function isNumber(value: string | number): boolean {\r\n  /* tslint:disable-next-line:triple-equals */\r\n  return value == Number(value);\r\n}\r\n","import { ABP } from '../models/common';\r\nimport { isNumber } from './number-utils';\r\n\r\nexport function mapEnumToOptions<T>(_enum: T): ABP.Option<T>[] {\r\n  const options: ABP.Option<T>[] = [];\r\n\r\n  for (const member in _enum)\r\n    if (!isNumber(member))\r\n      options.push({\r\n        key: member,\r\n        value: _enum[member],\r\n      });\r\n\r\n  return options;\r\n}\r\n","// tslint:disable: no-bitwise\r\n\r\nexport function uuid(a?: any): string {\r\n  return a\r\n    ? (a ^ ((Math.random() * 16) >> (a / 4))).toString(16)\r\n    : ('' + 1e7 + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, uuid);\r\n}\r\n\r\nexport function generateHash(value: string): number {\r\n  let hashed = 0;\r\n  let charCode: number;\r\n\r\n  for (let i = 0; i < value.length; i++) {\r\n    charCode = value.charCodeAt(i);\r\n    hashed = (hashed << 5) - hashed + charCode;\r\n    hashed |= 0;\r\n  }\r\n  return hashed;\r\n}\r\n\r\nexport function generatePassword(length = 8) {\r\n  length = Math.min(Math.max(4, length), 128);\r\n\r\n  const lowers = 'abcdefghijklmnopqrstuvwxyz';\r\n  const uppers = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  const numbers = '0123456789';\r\n  const specials = '!@#$%&*()_+{}<>?[]./';\r\n  const all = lowers + uppers + numbers + specials;\r\n\r\n  const getRandom = (chrSet: string) => chrSet[Math.floor(Math.random() * chrSet.length)];\r\n\r\n  const password = Array({ length });\r\n  password[0] = getRandom(lowers);\r\n  password[1] = getRandom(uppers);\r\n  password[2] = getRandom(numbers);\r\n  password[3] = getRandom(specials);\r\n\r\n  for (let i = 4; i < length; i++) {\r\n    password[i] = getRandom(all);\r\n  }\r\n\r\n  return password.sort(() => 0.5 - Math.random()).join('');\r\n}\r\n","export class CrossOriginStrategy {\r\n  constructor(public crossorigin: 'anonymous' | 'use-credentials', public integrity?: string) {}\r\n\r\n  setCrossOrigin<T extends HTMLElement>(element: T) {\r\n    if (this.integrity) element.setAttribute('integrity', this.integrity);\r\n    element.setAttribute('crossorigin', this.crossorigin);\r\n  }\r\n}\r\n\r\nexport const CROSS_ORIGIN_STRATEGY = {\r\n  Anonymous(integrity?: string) {\r\n    return new CrossOriginStrategy('anonymous', integrity);\r\n  },\r\n  UseCredentials(integrity?: string) {\r\n    return new CrossOriginStrategy('use-credentials', integrity);\r\n  },\r\n};\r\n","export class DomStrategy {\r\n  constructor(\r\n    public target: HTMLElement = document.head,\r\n    public position: InsertPosition = 'beforeend',\r\n  ) {}\r\n\r\n  insertElement<T extends HTMLElement>(element: T) {\r\n    this.target.insertAdjacentElement(this.position, element);\r\n  }\r\n}\r\n\r\nexport const DOM_STRATEGY = {\r\n  AfterElement(element: HTMLElement) {\r\n    return new DomStrategy(element, 'afterend');\r\n  },\r\n  AppendToBody() {\r\n    return new DomStrategy(document.body, 'beforeend');\r\n  },\r\n  AppendToHead() {\r\n    return new DomStrategy(document.head, 'beforeend');\r\n  },\r\n  BeforeElement(element: HTMLElement) {\r\n    return new DomStrategy(element, 'beforebegin');\r\n  },\r\n  PrependToHead() {\r\n    return new DomStrategy(document.head, 'afterbegin');\r\n  },\r\n};\r\n","import { Observable, Observer } from 'rxjs';\r\nimport { CrossOriginStrategy, CROSS_ORIGIN_STRATEGY } from '../strategies/cross-origin.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from '../strategies/dom.strategy';\r\n\r\nexport function fromLazyLoad<T extends Event>(\r\n  element: HTMLScriptElement | HTMLLinkElement,\r\n  domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n  crossOriginStrategy: CrossOriginStrategy = CROSS_ORIGIN_STRATEGY.Anonymous(),\r\n): Observable<T> {\r\n  crossOriginStrategy.setCrossOrigin(element);\r\n  domStrategy.insertElement(element);\r\n\r\n  return new Observable((observer: Observer<T>) => {\r\n    element.onload = (event: T) => {\r\n      clearCallbacks(element);\r\n      observer.next(event);\r\n      observer.complete();\r\n    };\r\n\r\n    const handleError = createErrorHandler(observer, element);\r\n\r\n    element.onerror = handleError;\r\n    element.onabort = handleError;\r\n    element.onemptied = handleError;\r\n    element.onstalled = handleError;\r\n    element.onsuspend = handleError;\r\n\r\n    return () => {\r\n      clearCallbacks(element);\r\n      observer.complete();\r\n    };\r\n  });\r\n}\r\n\r\nfunction createErrorHandler(observer: Observer<Event>, element: HTMLElement) {\r\n  /* tslint:disable-next-line:only-arrow-functions */\r\n  return function(event: Event | string) {\r\n    clearCallbacks(element);\r\n    element.parentNode.removeChild(element);\r\n    observer.error(event);\r\n  };\r\n}\r\n\r\nfunction clearCallbacks(element: HTMLElement) {\r\n  element.onload = null;\r\n  element.onerror = null;\r\n  element.onabort = null;\r\n  element.onemptied = null;\r\n  element.onstalled = null;\r\n  element.onsuspend = null;\r\n}\r\n","// tslint:disable: max-line-length\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { takeUntil } from 'rxjs/operators';\r\n\r\nfunction isFunction(value) {\r\n  return typeof value === 'function';\r\n}\r\n\r\n/**\r\n * @deprecated no longer working, please use SubscriptionService (https://docs.abp.io/en/abp/latest/UI/Angular/Subscription-Service) instead.\r\n */\r\nexport const takeUntilDestroy = (componentInstance, destroyMethodName = 'ngOnDestroy') => <T>(\r\n  source: Observable<T>,\r\n) => {\r\n  const originalDestroy = componentInstance[destroyMethodName];\r\n  if (isFunction(originalDestroy) === false) {\r\n    throw new Error(\r\n      `${componentInstance.constructor.name} is using untilDestroyed but doesn't implement ${destroyMethodName}`,\r\n    );\r\n  }\r\n  if (!componentInstance['__takeUntilDestroy']) {\r\n    componentInstance['__takeUntilDestroy'] = new Subject();\r\n\r\n    componentInstance[destroyMethodName] = function() {\r\n      // tslint:disable-next-line: no-unused-expression\r\n      isFunction(originalDestroy) && originalDestroy.apply(this, arguments);\r\n      componentInstance['__takeUntilDestroy'].next(true);\r\n      componentInstance['__takeUntilDestroy'].complete();\r\n    };\r\n  }\r\n  return source.pipe(takeUntil<T>(componentInstance['__takeUntilDestroy']));\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { ContentStrategy } from '../strategies/content.strategy';\r\nimport { generateHash } from '../utils';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class DomInsertionService {\r\n  private readonly inserted = new Set<number>();\r\n\r\n  insertContent<T extends HTMLScriptElement | HTMLStyleElement>(\r\n    contentStrategy: ContentStrategy<T>,\r\n  ): T {\r\n    const hash = generateHash(contentStrategy.content);\r\n\r\n    if (this.inserted.has(hash)) return;\r\n\r\n    const element = contentStrategy.insertElement();\r\n    this.inserted.add(hash);\r\n\r\n    return element;\r\n  }\r\n\r\n  removeContent(element: HTMLScriptElement | HTMLStyleElement) {\r\n    const hash = generateHash(element.textContent);\r\n    this.inserted.delete(hash);\r\n\r\n    element.parentNode.removeChild(element);\r\n  }\r\n\r\n  has(content: string): boolean {\r\n    const hash = generateHash(content);\r\n\r\n    return this.inserted.has(hash);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { concat, Observable, of, throwError } from 'rxjs';\r\nimport { delay, retryWhen, shareReplay, take, tap } from 'rxjs/operators';\r\nimport { LoadingStrategy } from '../strategies';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LazyLoadService {\r\n  readonly loaded = new Map<string, HTMLScriptElement | HTMLLinkElement>();\r\n\r\n  load(strategy: LoadingStrategy, retryTimes?: number, retryDelay?: number): Observable<Event> {\r\n    if (this.loaded.has(strategy.path)) return of(new CustomEvent('load'));\r\n\r\n    return strategy.createStream().pipe(\r\n      retryWhen(error$ =>\r\n        concat(\r\n          error$.pipe(delay(retryDelay), take(retryTimes)),\r\n          throwError(new CustomEvent('error')),\r\n        ),\r\n      ),\r\n      tap(() => this.loaded.set(strategy.path, strategy.element)),\r\n      delay(100),\r\n      shareReplay({ bufferSize: 1, refCount: true }),\r\n    );\r\n  }\r\n\r\n  remove(path: string): boolean {\r\n    const element = this.loaded.get(path);\r\n\r\n    if (!element) return false;\r\n\r\n    element.parentNode.removeChild(element);\r\n    this.loaded.delete(path);\r\n    return true;\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const LIST_QUERY_DEBOUNCE_TIME = new InjectionToken<number>('LIST_QUERY_DEBOUNCE_TIME');\r\n","import { Inject, Injectable, OnDestroy, Optional } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of, ReplaySubject, Subject } from 'rxjs';\r\nimport {\r\n  catchError,\r\n  debounceTime,\r\n  filter,\r\n  shareReplay,\r\n  switchMap,\r\n  takeUntil,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { ABP } from '../models/common';\r\nimport { PagedResultDto } from '../models/dtos';\r\nimport { LIST_QUERY_DEBOUNCE_TIME } from '../tokens/list.token';\r\n\r\n@Injectable()\r\nexport class ListService<QueryParamsType = ABP.PageQueryParams> implements OnDestroy {\r\n  private _filter = '';\r\n  set filter(value: string) {\r\n    this._filter = value;\r\n    this.get();\r\n  }\r\n  get filter(): string {\r\n    return this._filter;\r\n  }\r\n\r\n  private _maxResultCount = 10;\r\n  set maxResultCount(value: number) {\r\n    this._maxResultCount = value;\r\n    this.get();\r\n  }\r\n  get maxResultCount(): number {\r\n    return this._maxResultCount;\r\n  }\r\n\r\n  private _page = 0;\r\n  set page(value: number) {\r\n    if (value === this._page) return;\r\n\r\n    this._page = value;\r\n    this.get();\r\n  }\r\n  get page(): number {\r\n    return this._page;\r\n  }\r\n\r\n  private _sortKey = '';\r\n  set sortKey(value: string) {\r\n    this._sortKey = value;\r\n    this.get();\r\n  }\r\n  get sortKey(): string {\r\n    return this._sortKey;\r\n  }\r\n\r\n  private _sortOrder = '';\r\n  set sortOrder(value: string) {\r\n    this._sortOrder = value;\r\n    this.get();\r\n  }\r\n  get sortOrder(): string {\r\n    return this._sortOrder;\r\n  }\r\n\r\n  private _query$ = new ReplaySubject<QueryParamsType>(1);\r\n\r\n  get query$(): Observable<QueryParamsType> {\r\n    return this._query$\r\n      .asObservable()\r\n      .pipe(debounceTime(this.delay || 300), shareReplay({ bufferSize: 1, refCount: true }));\r\n  }\r\n\r\n  private _isLoading$ = new BehaviorSubject(false);\r\n\r\n  private destroy$ = new Subject();\r\n\r\n  get isLoading$(): Observable<boolean> {\r\n    return this._isLoading$.asObservable();\r\n  }\r\n\r\n  get = () => {\r\n    this._query$.next(({\r\n      filter: this._filter || undefined,\r\n      maxResultCount: this._maxResultCount,\r\n      skipCount: this._page * this._maxResultCount,\r\n      sorting: this._sortOrder ? `${this._sortKey} ${this._sortOrder}` : undefined,\r\n    } as any) as QueryParamsType);\r\n  };\r\n\r\n  constructor(@Optional() @Inject(LIST_QUERY_DEBOUNCE_TIME) private delay: number) {\r\n    this.get();\r\n  }\r\n\r\n  hookToQuery<T extends any>(\r\n    streamCreatorCallback: QueryStreamCreatorCallback<T, QueryParamsType>,\r\n  ): Observable<PagedResultDto<T>> {\r\n    this._isLoading$.next(true);\r\n\r\n    return this.query$.pipe(\r\n      switchMap(query => streamCreatorCallback(query).pipe(catchError(() => of(null)))),\r\n      filter(Boolean),\r\n      tap(() => this._isLoading$.next(false)),\r\n      shareReplay({ bufferSize: 1, refCount: true }),\r\n      takeUntil(this.destroy$),\r\n    );\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.destroy$.next();\r\n  }\r\n}\r\n\r\nexport type QueryStreamCreatorCallback<T, QueryParamsType = ABP.PageQueryParams> = (\r\n  query: QueryParamsType,\r\n) => Observable<PagedResultDto<T>>;\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { ProfileState } from '../states';\r\nimport { Profile } from '../models';\r\nimport { GetProfile, UpdateProfile, ChangePassword } from '../actions';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProfileStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getProfile() {\r\n    return this.store.selectSnapshot(ProfileState.getProfile);\r\n  }\r\n\r\n  dispatchGetProfile() {\r\n    return this.store.dispatch(new GetProfile());\r\n  }\r\n\r\n  dispatchUpdateProfile(...args: ConstructorParameters<typeof UpdateProfile>) {\r\n    return this.store.dispatch(new UpdateProfile(...args));\r\n  }\r\n\r\n  dispatchChangePassword(...args: ConstructorParameters<typeof ChangePassword>) {\r\n    return this.store.dispatch(new ChangePassword(...args));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Store } from '@ngxs/store';\r\nimport {\r\n  SetLanguage,\r\n  SetRemember,\r\n  SetTenant,\r\n  ModifyOpenedTabCount,\r\n} from '../actions/session.actions';\r\nimport { SessionState } from '../states';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SessionStateService {\r\n  constructor(private store: Store) {}\r\n\r\n  getLanguage() {\r\n    return this.store.selectSnapshot(SessionState.getLanguage);\r\n  }\r\n\r\n  getTenant() {\r\n    return this.store.selectSnapshot(SessionState.getTenant);\r\n  }\r\n\r\n  getSessionDetail() {\r\n    return this.store.selectSnapshot(SessionState.getSessionDetail);\r\n  }\r\n\r\n  dispatchSetLanguage(...args: ConstructorParameters<typeof SetLanguage>) {\r\n    return this.store.dispatch(new SetLanguage(...args));\r\n  }\r\n\r\n  dispatchSetTenant(...args: ConstructorParameters<typeof SetTenant>) {\r\n    return this.store.dispatch(new SetTenant(...args));\r\n  }\r\n\r\n  dispatchSetRemember(...args: ConstructorParameters<typeof SetRemember>) {\r\n    return this.store.dispatch(new SetRemember(...args));\r\n  }\r\n\r\n  dispatchModifyOpenedTabCount(...args: ConstructorParameters<typeof ModifyOpenedTabCount>) {\r\n    return this.store.dispatch(new ModifyOpenedTabCount(...args));\r\n  }\r\n}\r\n","import { Injectable, TrackByFunction } from '@angular/core';\r\nimport { O } from 'ts-toolbelt';\r\n\r\nexport const trackBy = <T = any>(key: keyof T): TrackByFunction<T> => (_, item) => item[key];\r\n\r\nexport const trackByDeep = <T = any>(\r\n  ...keys: T extends object ? O.Paths<T> : never\r\n): TrackByFunction<T> => (_, item) => keys.reduce((acc, key) => acc[key], item);\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class TrackByService<ItemType = any> {\r\n  by = trackBy;\r\n\r\n  byDeep = trackByDeep;\r\n}\r\n","import { ViewContainerRef } from '@angular/core';\r\n\r\nexport abstract class ContainerStrategy {\r\n  constructor(public containerRef: ViewContainerRef) {}\r\n\r\n  abstract getIndex(): number;\r\n\r\n  prepare(): void {}\r\n}\r\n\r\nexport class ClearContainerStrategy extends ContainerStrategy {\r\n  getIndex(): number {\r\n    return 0;\r\n  }\r\n\r\n  prepare() {\r\n    this.containerRef.clear();\r\n  }\r\n}\r\n\r\nexport class InsertIntoContainerStrategy extends ContainerStrategy {\r\n  constructor(containerRef: ViewContainerRef, private index: number) {\r\n    super(containerRef);\r\n  }\r\n\r\n  getIndex() {\r\n    return Math.min(Math.max(0, this.index), this.containerRef.length);\r\n  }\r\n}\r\n\r\nexport const CONTAINER_STRATEGY = {\r\n  Clear(containerRef: ViewContainerRef) {\r\n    return new ClearContainerStrategy(containerRef);\r\n  },\r\n  Append(containerRef: ViewContainerRef) {\r\n    return new InsertIntoContainerStrategy(containerRef, containerRef.length);\r\n  },\r\n  Prepend(containerRef: ViewContainerRef) {\r\n    return new InsertIntoContainerStrategy(containerRef, 0);\r\n  },\r\n  Insert(containerRef: ViewContainerRef, index: number) {\r\n    return new InsertIntoContainerStrategy(containerRef, index);\r\n  },\r\n};\r\n","export abstract class ContentSecurityStrategy {\r\n  constructor(public nonce?: string) {}\r\n\r\n  abstract applyCSP(element: HTMLScriptElement | HTMLStyleElement): void;\r\n}\r\n\r\nexport class LooseContentSecurityStrategy extends ContentSecurityStrategy {\r\n  constructor(nonce: string) {\r\n    super(nonce);\r\n  }\r\n\r\n  applyCSP(element: HTMLScriptElement | HTMLStyleElement) {\r\n    element.setAttribute('nonce', this.nonce);\r\n  }\r\n}\r\n\r\nexport class NoContentSecurityStrategy extends ContentSecurityStrategy {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  applyCSP(_: HTMLScriptElement | HTMLStyleElement) {}\r\n}\r\n\r\nexport const CONTENT_SECURITY_STRATEGY = {\r\n  Loose(nonce: string) {\r\n    return new LooseContentSecurityStrategy(nonce);\r\n  },\r\n  None() {\r\n    return new NoContentSecurityStrategy();\r\n  },\r\n};\r\n","import { ContentSecurityStrategy, CONTENT_SECURITY_STRATEGY } from './content-security.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class ContentStrategy<T extends HTMLScriptElement | HTMLStyleElement = any> {\r\n  constructor(\r\n    public content: string,\r\n    protected domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n    protected contentSecurityStrategy: ContentSecurityStrategy = CONTENT_SECURITY_STRATEGY.None(),\r\n  ) {}\r\n\r\n  abstract createElement(): T;\r\n\r\n  insertElement(): T {\r\n    const element = this.createElement();\r\n\r\n    this.contentSecurityStrategy.applyCSP(element);\r\n    this.domStrategy.insertElement(element);\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class StyleContentStrategy extends ContentStrategy<HTMLStyleElement> {\r\n  createElement(): HTMLStyleElement {\r\n    const element = document.createElement('style');\r\n    element.textContent = this.content;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class ScriptContentStrategy extends ContentStrategy<HTMLScriptElement> {\r\n  createElement(): HTMLScriptElement {\r\n    const element = document.createElement('script');\r\n    element.textContent = this.content;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport const CONTENT_STRATEGY = {\r\n  AppendScriptToBody(content: string) {\r\n    return new ScriptContentStrategy(content, DOM_STRATEGY.AppendToBody());\r\n  },\r\n  AppendScriptToHead(content: string) {\r\n    return new ScriptContentStrategy(content, DOM_STRATEGY.AppendToHead());\r\n  },\r\n  AppendStyleToHead(content: string) {\r\n    return new StyleContentStrategy(content, DOM_STRATEGY.AppendToHead());\r\n  },\r\n  PrependStyleToHead(content: string) {\r\n    return new StyleContentStrategy(content, DOM_STRATEGY.PrependToHead());\r\n  },\r\n};\r\n","import { ComponentRef, TemplateRef, Type } from '@angular/core';\r\nimport { InferredContextOf, InferredInstanceOf } from '../models';\r\n\r\nexport abstract class ContextStrategy<T = any> {\r\n  constructor(public context: Partial<ContextType<T>>) {}\r\n\r\n  /* tslint:disable-next-line:no-unused-variable */\r\n  setContext(componentRef?: ComponentRef<InferredInstanceOf<T>>): Partial<ContextType<T>> {\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport class NoContextStrategy<\r\n  T extends Type<any> | TemplateRef<any> = any\r\n> extends ContextStrategy<T> {\r\n  constructor() {\r\n    super(undefined);\r\n  }\r\n}\r\n\r\nexport class ComponentContextStrategy<T extends Type<any> = any> extends ContextStrategy<T> {\r\n  setContext(componentRef: ComponentRef<InferredInstanceOf<T>>): Partial<InferredInstanceOf<T>> {\r\n    Object.keys(this.context).forEach(key => (componentRef.instance[key] = this.context[key]));\r\n    componentRef.changeDetectorRef.detectChanges();\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport class TemplateContextStrategy<T extends TemplateRef<any> = any> extends ContextStrategy<T> {\r\n  setContext(): Partial<InferredContextOf<T>> {\r\n    return this.context;\r\n  }\r\n}\r\n\r\nexport const CONTEXT_STRATEGY = {\r\n  None<T extends Type<any> | TemplateRef<any> = any>() {\r\n    return new NoContextStrategy<T>();\r\n  },\r\n  Component<T extends Type<any> = any>(context: Partial<InferredInstanceOf<T>>) {\r\n    return new ComponentContextStrategy<T>(context);\r\n  },\r\n  Template<T extends TemplateRef<any> = any>(context: Partial<InferredContextOf<T>>) {\r\n    return new TemplateContextStrategy<T>(context);\r\n  },\r\n};\r\n\r\ntype ContextType<T> = T extends Type<infer U> | TemplateRef<infer U> ? U : never;\r\n","import { Observable, of } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { fromLazyLoad } from '../utils';\r\nimport { CrossOriginStrategy, CROSS_ORIGIN_STRATEGY } from './cross-origin.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class LoadingStrategy<T extends HTMLScriptElement | HTMLLinkElement = any> {\r\n  element: T;\r\n\r\n  constructor(\r\n    public path: string,\r\n    protected domStrategy: DomStrategy = DOM_STRATEGY.AppendToHead(),\r\n    protected crossOriginStrategy: CrossOriginStrategy = CROSS_ORIGIN_STRATEGY.Anonymous(),\r\n  ) {}\r\n\r\n  abstract createElement(): T;\r\n\r\n  createStream<E extends Event>(): Observable<E> {\r\n    this.element = this.createElement();\r\n\r\n    return of(null).pipe(\r\n      switchMap(() => fromLazyLoad<E>(this.element, this.domStrategy, this.crossOriginStrategy)),\r\n    );\r\n  }\r\n}\r\n\r\nexport class ScriptLoadingStrategy extends LoadingStrategy<HTMLScriptElement> {\r\n  constructor(src: string, domStrategy?: DomStrategy, crossOriginStrategy?: CrossOriginStrategy) {\r\n    super(src, domStrategy, crossOriginStrategy);\r\n  }\r\n\r\n  createElement(): HTMLScriptElement {\r\n    const element = document.createElement('script');\r\n    element.src = this.path;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport class StyleLoadingStrategy extends LoadingStrategy<HTMLLinkElement> {\r\n  constructor(href: string, domStrategy?: DomStrategy, crossOriginStrategy?: CrossOriginStrategy) {\r\n    super(href, domStrategy, crossOriginStrategy);\r\n  }\r\n\r\n  createElement(): HTMLLinkElement {\r\n    const element = document.createElement('link');\r\n    element.rel = 'stylesheet';\r\n    element.href = this.path;\r\n\r\n    return element;\r\n  }\r\n}\r\n\r\nexport const LOADING_STRATEGY = {\r\n  AppendAnonymousScriptToBody(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToBody(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  AppendAnonymousScriptToHead(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  AppendAnonymousStyleToHead(src: string, integrity?: string) {\r\n    return new StyleLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.AppendToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  PrependAnonymousScriptToHead(src: string, integrity?: string) {\r\n    return new ScriptLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.PrependToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n  PrependAnonymousStyleToHead(src: string, integrity?: string) {\r\n    return new StyleLoadingStrategy(\r\n      src,\r\n      DOM_STRATEGY.PrependToHead(),\r\n      CROSS_ORIGIN_STRATEGY.Anonymous(integrity),\r\n    );\r\n  },\r\n};\r\n","import {\r\n  ApplicationRef,\r\n  ComponentFactoryResolver,\r\n  ComponentRef,\r\n  EmbeddedViewRef,\r\n  Injector,\r\n  TemplateRef,\r\n  Type,\r\n  ViewContainerRef,\r\n} from '@angular/core';\r\nimport { InferredContextOf, InferredInstanceOf } from '../models/utility';\r\nimport { ContainerStrategy, CONTAINER_STRATEGY } from './container.strategy';\r\nimport { ContextStrategy, CONTEXT_STRATEGY } from './context.strategy';\r\nimport { DomStrategy, DOM_STRATEGY } from './dom.strategy';\r\n\r\nexport abstract class ProjectionStrategy<T = any> {\r\n  constructor(public content: T) {}\r\n\r\n  abstract injectContent(injector: Injector): ComponentRefOrEmbeddedViewRef<T>;\r\n}\r\n\r\nexport class ComponentProjectionStrategy<T extends Type<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    component: T,\r\n    private containerStrategy: ContainerStrategy,\r\n    private contextStrategy: ContextStrategy = CONTEXT_STRATEGY.None(),\r\n  ) {\r\n    super(component);\r\n  }\r\n\r\n  injectContent(injector: Injector) {\r\n    this.containerStrategy.prepare();\r\n\r\n    const resolver = injector.get(ComponentFactoryResolver) as ComponentFactoryResolver;\r\n    const factory = resolver.resolveComponentFactory<InferredInstanceOf<T>>(this.content);\r\n\r\n    const componentRef = this.containerStrategy.containerRef.createComponent(\r\n      factory,\r\n      this.containerStrategy.getIndex(),\r\n      injector,\r\n    );\r\n    this.contextStrategy.setContext(componentRef);\r\n\r\n    return componentRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport class RootComponentProjectionStrategy<T extends Type<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    component: T,\r\n    private contextStrategy: ContextStrategy = CONTEXT_STRATEGY.None(),\r\n    private domStrategy: DomStrategy = DOM_STRATEGY.AppendToBody(),\r\n  ) {\r\n    super(component);\r\n  }\r\n\r\n  injectContent(injector: Injector) {\r\n    const appRef = injector.get(ApplicationRef);\r\n    const resolver = injector.get(ComponentFactoryResolver) as ComponentFactoryResolver;\r\n    const componentRef = resolver\r\n      .resolveComponentFactory<InferredInstanceOf<T>>(this.content)\r\n      .create(injector);\r\n\r\n    this.contextStrategy.setContext(componentRef);\r\n\r\n    appRef.attachView(componentRef.hostView);\r\n    const element: HTMLElement = (componentRef.hostView as EmbeddedViewRef<any>).rootNodes[0];\r\n    this.domStrategy.insertElement(element);\r\n\r\n    return componentRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport class TemplateProjectionStrategy<T extends TemplateRef<any>> extends ProjectionStrategy<T> {\r\n  constructor(\r\n    templateRef: T,\r\n    private containerStrategy: ContainerStrategy,\r\n    private contextStrategy = CONTEXT_STRATEGY.None(),\r\n  ) {\r\n    super(templateRef);\r\n  }\r\n\r\n  injectContent() {\r\n    this.containerStrategy.prepare();\r\n\r\n    const embeddedViewRef = this.containerStrategy.containerRef.createEmbeddedView(\r\n      this.content,\r\n      this.contextStrategy.context,\r\n      this.containerStrategy.getIndex(),\r\n    );\r\n    embeddedViewRef.detectChanges();\r\n\r\n    return embeddedViewRef as ComponentRefOrEmbeddedViewRef<T>;\r\n  }\r\n}\r\n\r\nexport const PROJECTION_STRATEGY = {\r\n  AppendComponentToBody<T extends Type<unknown>>(\r\n    component: T,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new RootComponentProjectionStrategy<T>(\r\n      component,\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  AppendComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Append(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  AppendTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Append(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n  PrependComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Prepend(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  PrependTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Prepend(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n  ProjectComponentToContainer<T extends Type<unknown>>(\r\n    component: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredInstanceOf<T>>,\r\n  ) {\r\n    return new ComponentProjectionStrategy<T>(\r\n      component,\r\n      CONTAINER_STRATEGY.Clear(containerRef),\r\n      context && CONTEXT_STRATEGY.Component(context),\r\n    );\r\n  },\r\n  ProjectTemplateToContainer<T extends TemplateRef<unknown>>(\r\n    templateRef: T,\r\n    containerRef: ViewContainerRef,\r\n    context?: Partial<InferredContextOf<T>>,\r\n  ) {\r\n    return new TemplateProjectionStrategy<T>(\r\n      templateRef,\r\n      CONTAINER_STRATEGY.Clear(containerRef),\r\n      context && CONTEXT_STRATEGY.Template(context),\r\n    );\r\n  },\r\n};\r\n\r\ntype ComponentRefOrEmbeddedViewRef<T> = T extends Type<infer U>\r\n  ? ComponentRef<U>\r\n  : T extends TemplateRef<infer C>\r\n  ? EmbeddedViewRef<C>\r\n  : never;\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface MinAgeError {\r\n  minAge: {\r\n    age: number;\r\n  };\r\n}\r\n\r\nexport interface MinAgeOptions {\r\n  age?: number;\r\n}\r\n\r\nexport function validateMinAge({ age = 18 }: MinAgeOptions = {}): ValidatorFn {\r\n  return (control: AbstractControl): MinAgeError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    return isValidMinAge(control.value, age) ? null : { minAge: { age } };\r\n  };\r\n}\r\n\r\nfunction isValidMinAge(value: string | number, minAge: number) {\r\n  const date = new Date();\r\n  date.setFullYear(date.getFullYear() - minAge);\r\n  date.setHours(23, 59, 59, 999);\r\n\r\n  return Number(new Date(value)) <= date.valueOf();\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface CreditCardError {\r\n  creditCard: true;\r\n}\r\n\r\nexport function validateCreditCard(): ValidatorFn {\r\n  return (control: AbstractControl): CreditCardError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    return isValidCreditCard(String(control.value)) ? null : { creditCard: true };\r\n  };\r\n}\r\n\r\nfunction isValidCreditCard(value: string): boolean {\r\n  value = value.replace(/[ -]/g, '');\r\n\r\n  if (!/^[0-9]{13,19}$/.test(value)) return false;\r\n\r\n  let checksum = 0;\r\n  let multiplier = 1;\r\n\r\n  for (let i = value.length; i > 0; i--) {\r\n    const digit = Number(value[i - 1]) * multiplier;\r\n    /* tslint:disable-next-line:no-bitwise */\r\n    checksum += (digit % 10) + ~~(digit / 10);\r\n\r\n    multiplier = (multiplier * 2) % 3;\r\n  }\r\n\r\n  return checksum % 10 === 0;\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface RangeError {\r\n  range: {\r\n    max: number;\r\n    min: number;\r\n  };\r\n}\r\n\r\nexport interface RangeOptions {\r\n  maximum?: number;\r\n  minimum?: number;\r\n}\r\n\r\nexport function validateRange({ maximum = Infinity, minimum = 0 }: RangeOptions = {}): ValidatorFn {\r\n  return (control: AbstractControl): RangeError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    const value = Number(control.value);\r\n    return getMinError(value, minimum, maximum) || getMaxError(value, maximum, minimum);\r\n  };\r\n}\r\n\r\nfunction getMaxError(value: number, max: number, min: number): RangeError {\r\n  return value > max ? { range: { max, min } } : null;\r\n}\r\n\r\nfunction getMinError(value: number, min: number, max: number): RangeError {\r\n  return value < min ? { range: { min, max } } : null;\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface RequiredError {\r\n  required: true;\r\n}\r\n\r\nexport interface RequiredOptions {\r\n  allowEmptyStrings?: boolean;\r\n}\r\n\r\nexport function validateRequired({ allowEmptyStrings }: RequiredOptions = {}): ValidatorFn {\r\n  return (control: AbstractControl): RequiredError | null => {\r\n    return control.pristine || isValidRequired(control.value, allowEmptyStrings)\r\n      ? null\r\n      : { required: true };\r\n  };\r\n}\r\n\r\nfunction isValidRequired(value: any, allowEmptyStrings: boolean): boolean {\r\n  if (value || value === 0 || value === false) return true;\r\n\r\n  if (allowEmptyStrings && value === '') return true;\r\n\r\n  return false;\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface StringLengthError {\r\n  maxlength?: {\r\n    requiredLength: number;\r\n  };\r\n  minlength?: {\r\n    requiredLength: number;\r\n  };\r\n}\r\n\r\nexport interface StringLengthOptions {\r\n  maximumLength?: number;\r\n  minimumLength?: number;\r\n}\r\n\r\nexport function validateStringLength({\r\n  maximumLength = Infinity,\r\n  minimumLength = 0,\r\n}: StringLengthOptions = {}): ValidatorFn {\r\n  return (control: AbstractControl): StringLengthError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    const value = String(control.value);\r\n\r\n    return getMinLengthError(value, minimumLength) || getMaxLengthError(value, maximumLength);\r\n  };\r\n}\r\n\r\nfunction getMaxLengthError(value: string, requiredLength: number): StringLengthError {\r\n  return value.length > requiredLength ? { maxlength: { requiredLength } } : null;\r\n}\r\n\r\nfunction getMinLengthError(value: string, requiredLength: number): StringLengthError {\r\n  return value.length < requiredLength ? { minlength: { requiredLength } } : null;\r\n}\r\n","import { AbstractControl, ValidatorFn } from '@angular/forms';\r\n\r\nexport interface UrlError {\r\n  url: true;\r\n}\r\n\r\nexport function validateUrl(): ValidatorFn {\r\n  return (control: AbstractControl): UrlError | null => {\r\n    if (control.pristine) return null;\r\n\r\n    if (['', null, undefined].indexOf(control.value) > -1) return null;\r\n\r\n    return isValidUrl(control.value) ? null : { url: true };\r\n  };\r\n}\r\n\r\nfunction isValidUrl(value: string): boolean {\r\n  if (/^http(s)?:\\/\\/[^/]/.test(value) || /^ftp:\\/\\/[^/]/.test(value)) {\r\n    const a = document.createElement('a');\r\n    a.href = value;\r\n    return !!a.host;\r\n  }\r\n\r\n  return false;\r\n}\r\n","import { Validators } from '@angular/forms';\r\nimport { validateMinAge } from './age.validator';\r\nimport { validateCreditCard } from './credit-card.validator';\r\nimport { validateRange } from './range.validator';\r\nimport { validateRequired } from './required.validator';\r\nimport { validateStringLength } from './string-length.validator';\r\nimport { validateUrl } from './url.validator';\r\nexport * from './age.validator';\r\nexport * from './credit-card.validator';\r\nexport * from './range.validator';\r\nexport * from './required.validator';\r\nexport * from './string-length.validator';\r\nexport * from './url.validator';\r\n\r\nexport const AbpValidators = {\r\n  creditCard: validateCreditCard,\r\n  emailAddress: () => Validators.email,\r\n  minAge: validateMinAge,\r\n  range: validateRange,\r\n  required: validateRequired,\r\n  stringLength: validateStringLength,\r\n  url: validateUrl,\r\n};\r\n","/*\r\n * Public API Surface of core\r\n */\r\n\r\n// export * from './lib/handlers';\r\nexport * from './lib/abstracts';\r\nexport * from './lib/actions';\r\nexport * from './lib/components';\r\nexport * from './lib/constants';\r\nexport * from './lib/core.module';\r\nexport * from './lib/localization.module';\r\nexport * from './lib/directives';\r\nexport * from './lib/enums';\r\nexport * from './lib/guards';\r\nexport * from './lib/interceptors';\r\nexport * from './lib/models';\r\nexport * from './lib/pipes';\r\nexport * from './lib/plugins';\r\nexport * from './lib/services';\r\nexport * from './lib/states';\r\nexport * from './lib/strategies';\r\nexport * from './lib/tokens';\r\nexport * from './lib/utils';\r\nexport * from './lib/validators';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n\nexport {AbstractNgModelComponent as ɵb} from './lib/abstracts/ng-model.component';\nexport {GetAppConfiguration as ɵbo,SetEnvironment as ɵbp} from './lib/actions/config.actions';\nexport {ChangePassword as ɵbf,GetProfile as ɵbd,UpdateProfile as ɵbe} from './lib/actions/profile.actions';\nexport {AddReplaceableComponent as ɵv} from './lib/actions/replaceable-components.actions';\nexport {ModifyOpenedTabCount as ɵbk,SetLanguage as ɵbi,SetRemember as ɵbl,SetTenant as ɵbj} from './lib/actions/session.actions';\nexport {DynamicLayoutComponent as ɵd} from './lib/components/dynamic-layout.component';\nexport {ReplaceableRouteContainerComponent as ɵm} from './lib/components/replaceable-route-container.component';\nexport {RouterOutletComponent as ɵo} from './lib/components/router-outlet.component';\nexport {AutofocusDirective as ɵc} from './lib/directives/autofocus.directive';\nexport {InputEventDebounceDirective as ɵk} from './lib/directives/debounce.directive';\nexport {EllipsisDirective as ɵg} from './lib/directives/ellipsis.directive';\nexport {ForDirective as ɵh} from './lib/directives/for.directive';\nexport {FormSubmitDirective as ɵi} from './lib/directives/form-submit.directive';\nexport {InitDirective as ɵj} from './lib/directives/init.directive';\nexport {PermissionDirective as ɵl} from './lib/directives/permission.directive';\nexport {ReplaceableTemplateDirective as ɵn} from './lib/directives/replaceable-template.directive';\nexport {StopPropagationDirective as ɵq} from './lib/directives/stop-propagation.directive';\nexport {VisibilityDirective as ɵr} from './lib/directives/visibility.directive';\nexport {OAuthConfigurationHandler as ɵbw} from './lib/handlers/oauth-configuration.handler';\nexport {RoutesHandler as ɵca} from './lib/handlers/routes.handler';\nexport {ApiInterceptor as ɵbv} from './lib/interceptors/api.interceptor';\nexport {ABP as ɵbm,Profile as ɵbg} from './lib/models';\nexport {ABP as ɵbc} from './lib/models/common';\nexport {Config as ɵbq} from './lib/models/config';\nexport {ReplaceableComponents as ɵw} from './lib/models/replaceable-components';\nexport {LocalizationPipe as ɵs,MockLocalizationPipe as ɵt} from './lib/pipes/localization.pipe';\nexport {SortPipe as ɵp} from './lib/pipes/sort.pipe';\nexport {ConfigPlugin as ɵbu,NGXS_CONFIG_PLUGIN_OPTIONS as ɵbt} from './lib/plugins/config.plugin';\nexport {LocaleId as ɵbr,LocaleProvider as ɵbs} from './lib/providers/locale.provider';\nexport {LocalizationService as ɵf} from './lib/services/localization.service';\nexport {ProfileService as ɵy} from './lib/services/profile.service';\nexport {RestService as ɵz} from './lib/services/rest.service';\nexport {AbstractNavTreeService as ɵcc,AbstractTreeService as ɵcb,RoutesService as ɵcd} from './lib/services/routes.service';\nexport {SubscriptionService as ɵe} from './lib/services/subscription.service';\nexport {ConfigState as ɵbn} from './lib/states/config.state';\nexport {ProfileState as ɵx} from './lib/states/profile.state';\nexport {ReplaceableComponentsState as ɵu} from './lib/states/replaceable-components.state';\nexport {SessionState as ɵbh} from './lib/states/session.state';\nexport {oAuthStorage as ɵa} from './lib/strategies/auth-flow.strategy';\nexport {CORE_OPTIONS as ɵba,coreOptionsFactory as ɵbb} from './lib/tokens/options.token';\nexport {noop as ɵbx} from './lib/utils/common-utils';\nexport {getInitialData as ɵby,localeInitializer as ɵbz} from './lib/utils/initial-utils';"],"names":["differentLocales","noop"],"mappings":"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"}