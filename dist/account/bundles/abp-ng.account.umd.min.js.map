{"version":3,"sources":["../../../packages/account/src/lib/components/login/login.component.ts","../../../packages/account/src/lib/components/manage-profile/manage-profile.component.ts","../../../node_modules/tslib/tslib.es6.js","../../../packages/account/src/lib/services/account.service.ts","../../../packages/account/src/lib/components/register/register.component.ts","../../../packages/account/src/lib/guards/authentication-flow.guard.ts","../../../packages/account/src/lib/account-routing.module.ts","../../../packages/account/src/lib/components/auth-wrapper/auth-wrapper.component.ts","../../../packages/account/src/lib/components/change-password/change-password.component.ts","../../../packages/account/src/lib/components/personal-settings/personal-settings.component.ts","../../../packages/account/src/lib/components/tenant-box/tenant-box.component.ts","../../../packages/account/src/lib/tokens/options.token.ts","../../../packages/account/src/lib/utils/factory-utils.ts","../../../packages/account/src/lib/account.module.ts"],"names":["maxLength","Validators","required","minLength","LoginComponent","fb","oauthService","store","toasterService","authService","this","isSelfRegistrationEnabled","authWrapperKey","prototype","ngOnInit","selectSnapshot","ConfigState","getSetting","toLowerCase","form","group","username","password","remember","onSubmit","_this","invalid","inProgress","login","get","value","pipe","catchError","err","error","snq","error_description","message","life","throwError","finalize","subscribe","dispatch","SetRemember","Component","args","selector","template","FormBuilder","OAuthService","Store","ToasterService","AuthService","ManageProfileComponent","selectedTab","changePasswordKey","personalSettingsKey","GetProfile","isProfileLoaded","ProfileState","getProfile","isExternal","hideChangePasswordTab","animations","trigger","transition","useAnimation","fadeIn","__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","metadataKey","metadataValue","metadata","create","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","__spread","concat","AccountService","rest","apiName","findTenant","tenantName","request","method","url","register","body","skipHandleError","Injectable","providedIn","RestService","email","RegisterComponent","accountService","getPasswordValidators","warn","defaultValue","newUser","userName","emailAddress","appName","switchMap","AuthenticationFlowGuard","canActivate","isInternalAuth","initLogin","replaceableComponent","defaultComponent","ɵ1","ɵ2","routes","path","pathMatch","redirectTo","component","DynamicLayoutComponent","children","ReplaceableRouteContainerComponent","data","ɵ0","AuthGuard","NgModule","imports","RouterModule","forChild","exports","AuthWrapperComponent","multiTenancy","subscription","enableLocalLogin","tenantBoxKey","addOne","select","exportAs","providers","SubscriptionService","MultiTenancyService","Input","Select","getDeep","Observable","PASSWORD_FIELDS","ChangePasswordComponent","mapErrorsFn","errors","groupErrors","control","indexOf","String","name","filter","_a","hideCurrentPassword","hasPassword","passwordValidations","newPassword","validators","repeatNewPassword","comparePasswords","removeControl","ChangePassword","assign","currentPassword","reset","success","addControl","FormControl","PersonalSettingsComponent","buildForm","profile","surname","phoneNumber","submit","UpdateProfile","TenantBoxComponent","onSwitch","tenant","SessionState","getTenant","isModalVisible","save","setTenant","modalBusy","id","tenantId","showError","SetTenant","GetAppConfiguration","messageLocalizationParams","ACCOUNT_OPTIONS","InjectionToken","accountOptionsFactory","options","redirectUrl","AccountModule","ngModule","provide","useValue","useFactory","deps","forLazy","LazyModuleFactory","declarations","CoreModule","AccountRoutingModule","ThemeSharedModule","NgbDropdownModule","NgxValidateCoreModule"],"mappings":"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","sourcesContent":["import { AuthService, SetRemember, ConfigState } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { eAccountComponents } from '../../enums/components';\r\n\r\nconst { maxLength, minLength, required } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-login',\r\n  templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  isSelfRegistrationEnabled = true;\r\n\r\n  authWrapperKey = eAccountComponents.AuthWrapper;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private oauthService: OAuthService,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    private authService: AuthService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isSelfRegistrationEnabled =\r\n      (\r\n        (this.store.selectSnapshot(\r\n          ConfigState.getSetting('Abp.Account.IsSelfRegistrationEnabled'),\r\n        ) as string) || ''\r\n      ).toLowerCase() !== 'false';\r\n\r\n    this.form = this.fb.group({\r\n      username: ['', [required, maxLength(255)]],\r\n      password: ['', [required, maxLength(128)]],\r\n      remember: [false],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n\r\n    this.inProgress = true;\r\n    this.authService\r\n      .login(this.form.get('username').value, this.form.get('password').value)\r\n      .pipe(\r\n        catchError(err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error_description) ||\r\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            { life: 7000 },\r\n          );\r\n          return throwError(err);\r\n        }),\r\n        finalize(() => (this.inProgress = false)),\r\n      )\r\n      .subscribe(() => {\r\n        this.store.dispatch(new SetRemember(this.form.get('remember').value));\r\n      });\r\n  }\r\n}\r\n","import { fadeIn } from '@abp/ng.theme.shared';\r\nimport { transition, trigger, useAnimation } from '@angular/animations';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { eAccountComponents } from '../../enums/components';\r\nimport { Store } from '@ngxs/store';\r\nimport { GetProfile, ProfileState } from '@abp/ng.core';\r\n\r\n@Component({\r\n  selector: 'abp-manage-profile',\r\n  templateUrl: './manage-profile.component.html',\r\n  animations: [trigger('fadeIn', [transition(':enter', useAnimation(fadeIn))])],\r\n  styles: [\r\n    `\r\n      .min-h-400 {\r\n        min-height: 400px;\r\n      }\r\n    `,\r\n  ],\r\n})\r\nexport class ManageProfileComponent implements OnInit {\r\n  selectedTab = 0;\r\n\r\n  changePasswordKey = eAccountComponents.ChangePassword;\r\n\r\n  personalSettingsKey = eAccountComponents.PersonalSettings;\r\n\r\n  isProfileLoaded: boolean;\r\n\r\n  hideChangePasswordTab: boolean;\r\n\r\n  constructor(private store: Store) {}\r\n\r\n  ngOnInit() {\r\n    this.store.dispatch(new GetProfile()).subscribe(() => {\r\n      this.isProfileLoaded = true;\r\n      if (this.store.selectSnapshot(ProfileState.getProfile).isExternal) {\r\n        this.hideChangePasswordTab = true;\r\n        this.selectedTab = 1;\r\n      }\r\n    });\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { RestService, Rest } from '@abp/ng.core';\r\nimport { RegisterResponse, RegisterRequest, TenantIdResponse } from '../models';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AccountService {\r\n  apiName = 'AbpAccount';\r\n\r\n  constructor(private rest: RestService) {}\r\n\r\n  findTenant(tenantName: string): Observable<TenantIdResponse> {\r\n    const request: Rest.Request<null> = {\r\n      method: 'GET',\r\n      url: `/api/abp/multi-tenancy/tenants/by-name/${tenantName}`,\r\n    };\r\n\r\n    return this.rest.request<null, TenantIdResponse>(request, { apiName: this.apiName });\r\n  }\r\n\r\n  register(body: RegisterRequest): Observable<RegisterResponse> {\r\n    const request: Rest.Request<RegisterRequest> = {\r\n      method: 'POST',\r\n      url: '/api/account/register',\r\n      body,\r\n    };\r\n\r\n    return this.rest.request<RegisterRequest, RegisterResponse>(request, {\r\n      skipHandleError: true,\r\n      apiName: this.apiName,\r\n    });\r\n  }\r\n}\r\n","import { AuthService, ConfigState } from '@abp/ng.core';\r\nimport { getPasswordValidators, ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { OAuthService } from 'angular-oauth2-oidc';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, finalize, switchMap } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { RegisterRequest } from '../../models';\r\nimport { AccountService } from '../../services/account.service';\r\nimport { eAccountComponents } from '../../enums/components';\r\nconst { maxLength, required, email } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  isSelfRegistrationEnabled = true;\r\n\r\n  authWrapperKey = eAccountComponents.AuthWrapper;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private accountService: AccountService,\r\n    private oauthService: OAuthService,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    private authService: AuthService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.isSelfRegistrationEnabled =\r\n      (\r\n        this.store.selectSnapshot(\r\n          ConfigState.getSetting('Abp.Account.IsSelfRegistrationEnabled'),\r\n        ) || ''\r\n      ).toLowerCase() !== 'false';\r\n    if (!this.isSelfRegistrationEnabled) {\r\n      this.toasterService.warn(\r\n        {\r\n          key: 'AbpAccount::SelfRegistrationDisabledMessage',\r\n          defaultValue: 'Self registration is disabled.',\r\n        },\r\n        null,\r\n        { life: 10000 },\r\n      );\r\n      return;\r\n    }\r\n\r\n    this.form = this.fb.group({\r\n      username: ['', [required, maxLength(255)]],\r\n      password: ['', [required, ...getPasswordValidators(this.store)]],\r\n      email: ['', [required, email]],\r\n    });\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n\r\n    this.inProgress = true;\r\n\r\n    const newUser = {\r\n      userName: this.form.get('username').value,\r\n      password: this.form.get('password').value,\r\n      emailAddress: this.form.get('email').value,\r\n      appName: 'Angular',\r\n    } as RegisterRequest;\r\n\r\n    this.accountService\r\n      .register(newUser)\r\n      .pipe(\r\n        switchMap(() => this.authService.login(newUser.userName, newUser.password)),\r\n        catchError(err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error_description) ||\r\n              snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n            'Error',\r\n            { life: 7000 },\r\n          );\r\n          return throwError(err);\r\n        }),\r\n        finalize(() => (this.inProgress = false)),\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n","import { AuthService } from '@abp/ng.core';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate } from '@angular/router';\r\n\r\n@Injectable()\r\nexport class AuthenticationFlowGuard implements CanActivate {\r\n  constructor(private authService: AuthService) {}\r\n\r\n  canActivate() {\r\n    if (this.authService.isInternalAuth) return true;\r\n\r\n    this.authService.initLogin();\r\n    return false;\r\n  }\r\n}\r\n","import {\r\n  DynamicLayoutComponent,\r\n  AuthGuard,\r\n  ReplaceableComponents,\r\n  ReplaceableRouteContainerComponent,\r\n} from '@abp/ng.core';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { eAccountComponents } from './enums/components';\r\nimport { AuthenticationFlowGuard } from './guards/authentication-flow.guard';\r\n\r\nconst routes: Routes = [\r\n  { path: '', pathMatch: 'full', redirectTo: 'login' },\r\n  {\r\n    path: '',\r\n    component: DynamicLayoutComponent,\r\n    children: [\r\n      {\r\n        path: 'login',\r\n        component: ReplaceableRouteContainerComponent,\r\n        canActivate: [AuthenticationFlowGuard],\r\n        data: {\r\n          replaceableComponent: {\r\n            key: eAccountComponents.Login,\r\n            defaultComponent: LoginComponent,\r\n          } as ReplaceableComponents.RouteData<LoginComponent>,\r\n        },\r\n      },\r\n      {\r\n        path: 'register',\r\n        component: ReplaceableRouteContainerComponent,\r\n        canActivate: [AuthenticationFlowGuard],\r\n        data: {\r\n          replaceableComponent: {\r\n            key: eAccountComponents.Register,\r\n            defaultComponent: RegisterComponent,\r\n          } as ReplaceableComponents.RouteData<RegisterComponent>,\r\n        },\r\n      },\r\n      {\r\n        path: 'manage-profile',\r\n        component: ReplaceableRouteContainerComponent,\r\n        canActivate: [AuthGuard],\r\n        data: {\r\n          replaceableComponent: {\r\n            key: eAccountComponents.ManageProfile,\r\n            defaultComponent: ManageProfileComponent,\r\n          } as ReplaceableComponents.RouteData<ManageProfileComponent>,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class AccountRoutingModule {}\r\n","import { ConfigState, SubscriptionService, MultiTenancyService } from '@abp/ng.core';\r\nimport { Component, Input, OnInit, TemplateRef } from '@angular/core';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { eAccountComponents } from '../../enums/components';\r\nimport { Account } from '../../models/account';\r\n\r\n@Component({\r\n  selector: 'abp-auth-wrapper',\r\n  templateUrl: './auth-wrapper.component.html',\r\n  exportAs: 'abpAuthWrapper',\r\n  providers: [SubscriptionService],\r\n})\r\nexport class AuthWrapperComponent\r\n  implements Account.AuthWrapperComponentInputs, Account.AuthWrapperComponentOutputs, OnInit {\r\n  @Input()\r\n  readonly mainContentRef: TemplateRef<any>;\r\n\r\n  @Input()\r\n  readonly cancelContentRef: TemplateRef<any>;\r\n\r\n  @Select(ConfigState.getDeep('multiTenancy.isEnabled'))\r\n  isMultiTenancyEnabled$: Observable<boolean>;\r\n\r\n  enableLocalLogin = true;\r\n\r\n  tenantBoxKey = eAccountComponents.TenantBox;\r\n\r\n  constructor(\r\n    public readonly multiTenancy: MultiTenancyService,\r\n    private store: Store,\r\n    private subscription: SubscriptionService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.subscription.addOne(\r\n      this.store.select(ConfigState.getSetting('Abp.Account.EnableLocalLogin')),\r\n      value => {\r\n        if (value) {\r\n          this.enableLocalLogin = value.toLowerCase() !== 'false';\r\n        }\r\n      },\r\n    );\r\n  }\r\n}\r\n","import { ChangePassword, ProfileState } from '@abp/ng.core';\r\nimport { getPasswordValidators, ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators, FormControl } from '@angular/forms';\r\nimport { comparePasswords, Validation } from '@ngx-validate/core';\r\nimport { Store } from '@ngxs/store';\r\nimport { finalize } from 'rxjs/operators';\r\nimport snq from 'snq';\r\nimport { Account } from '../../models/account';\r\n\r\nconst { required } = Validators;\r\n\r\nconst PASSWORD_FIELDS = ['newPassword', 'repeatNewPassword'];\r\n\r\n@Component({\r\n  selector: 'abp-change-password-form',\r\n  templateUrl: './change-password.component.html',\r\n  exportAs: 'abpChangePasswordForm',\r\n})\r\nexport class ChangePasswordComponent\r\n  implements OnInit, Account.ChangePasswordComponentInputs, Account.ChangePasswordComponentOutputs {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  hideCurrentPassword: boolean;\r\n\r\n  mapErrorsFn: Validation.MapErrorsFn = (errors, groupErrors, control) => {\r\n    if (PASSWORD_FIELDS.indexOf(String(control.name)) < 0) return errors;\r\n\r\n    return errors.concat(groupErrors.filter(({ key }) => key === 'passwordMismatch'));\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.hideCurrentPassword = !this.store.selectSnapshot(ProfileState.getProfile).hasPassword;\r\n\r\n    const passwordValidations = getPasswordValidators(this.store);\r\n\r\n    this.form = this.fb.group(\r\n      {\r\n        password: ['', required],\r\n        newPassword: [\r\n          '',\r\n          {\r\n            validators: [required, ...passwordValidations],\r\n          },\r\n        ],\r\n        repeatNewPassword: [\r\n          '',\r\n          {\r\n            validators: [required, ...passwordValidations],\r\n          },\r\n        ],\r\n      },\r\n      {\r\n        validators: [comparePasswords(PASSWORD_FIELDS)],\r\n      },\r\n    );\r\n\r\n    if (this.hideCurrentPassword) this.form.removeControl('password');\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.invalid) return;\r\n    this.inProgress = true;\r\n    this.store\r\n      .dispatch(\r\n        new ChangePassword({\r\n          ...(!this.hideCurrentPassword && { currentPassword: this.form.get('password').value }),\r\n          newPassword: this.form.get('newPassword').value,\r\n        }),\r\n      )\r\n      .pipe(finalize(() => (this.inProgress = false)))\r\n      .subscribe({\r\n        next: () => {\r\n          this.form.reset();\r\n          this.toasterService.success('AbpAccount::PasswordChangedMessage', '', {\r\n            life: 5000,\r\n          });\r\n\r\n          if (this.hideCurrentPassword) {\r\n            this.hideCurrentPassword = false;\r\n            this.form.addControl('password', new FormControl('', [required]));\r\n          }\r\n        },\r\n        error: err => {\r\n          this.toasterService.error(\r\n            snq(() => err.error.error.message, 'AbpAccount::DefaultErrorMessage'),\r\n          );\r\n        },\r\n      });\r\n  }\r\n}\r\n","import { ProfileState, UpdateProfile } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Store } from '@ngxs/store';\r\nimport { finalize } from 'rxjs/operators';\r\nimport { Account } from '../../models/account';\r\n\r\nconst { maxLength, required, email } = Validators;\r\n\r\n@Component({\r\n  selector: 'abp-personal-settings-form',\r\n  templateUrl: './personal-settings.component.html',\r\n  exportAs: 'abpPersonalSettingsForm',\r\n})\r\nexport class PersonalSettingsComponent\r\n  implements\r\n    OnInit,\r\n    Account.PersonalSettingsComponentInputs,\r\n    Account.PersonalSettingsComponentOutputs {\r\n  form: FormGroup;\r\n\r\n  inProgress: boolean;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm() {\r\n    const profile = this.store.selectSnapshot(ProfileState.getProfile);\r\n\r\n    this.form = this.fb.group({\r\n      userName: [profile.userName, [required, maxLength(256)]],\r\n      email: [profile.email, [required, email, maxLength(256)]],\r\n      name: [profile.name || '', [maxLength(64)]],\r\n      surname: [profile.surname || '', [maxLength(64)]],\r\n      phoneNumber: [profile.phoneNumber || '', [maxLength(16)]],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    if (this.form.invalid) return;\r\n    this.inProgress = true;\r\n    this.store\r\n      .dispatch(new UpdateProfile(this.form.value))\r\n      .pipe(finalize(() => (this.inProgress = false)))\r\n      .subscribe(() => {\r\n        this.toasterService.success('AbpAccount::PersonalSettingsSaved', 'Success', { life: 5000 });\r\n      });\r\n  }\r\n}\r\n","import { ABP, GetAppConfiguration, SessionState, SetTenant } from '@abp/ng.core';\r\nimport { ToasterService } from '@abp/ng.theme.shared';\r\nimport { Component } from '@angular/core';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable } from 'rxjs';\r\nimport { finalize, take } from 'rxjs/operators';\r\nimport { Account } from '../../models/account';\r\nimport { AccountService } from '../../services/account.service';\r\n\r\n@Component({\r\n  selector: 'abp-tenant-box',\r\n  templateUrl: './tenant-box.component.html',\r\n})\r\nexport class TenantBoxComponent\r\n  implements Account.TenantBoxComponentInputs, Account.TenantBoxComponentOutputs {\r\n  @Select(SessionState.getTenant)\r\n  currentTenant$: Observable<ABP.BasicItem>;\r\n\r\n  name: string;\r\n\r\n  isModalVisible: boolean;\r\n\r\n  modalBusy: boolean;\r\n\r\n  constructor(\r\n    private store: Store,\r\n    private toasterService: ToasterService,\r\n    private accountService: AccountService,\r\n  ) {}\r\n\r\n  onSwitch() {\r\n    const tenant = this.store.selectSnapshot(SessionState.getTenant);\r\n    this.name = (tenant || ({} as ABP.BasicItem)).name;\r\n    this.isModalVisible = true;\r\n  }\r\n\r\n  save() {\r\n    if (!this.name) {\r\n      this.setTenant(null);\r\n      this.isModalVisible = false;\r\n      return;\r\n    }\r\n\r\n    this.modalBusy = true;\r\n    this.accountService\r\n      .findTenant(this.name)\r\n      .pipe(finalize(() => (this.modalBusy = false)))\r\n      .subscribe(({ success, tenantId: id, name }) => {\r\n        if (!success) {\r\n          this.showError();\r\n          return;\r\n        }\r\n\r\n        this.setTenant({ id, name });\r\n        this.isModalVisible = false;\r\n      });\r\n  }\r\n\r\n  private setTenant(tenant: ABP.BasicItem) {\r\n    return this.store.dispatch([new SetTenant(tenant), new GetAppConfiguration()]);\r\n  }\r\n\r\n  private showError() {\r\n    this.toasterService.error('AbpUiMultiTenancy::GivenTenantIsNotAvailable', 'AbpUi::Error', {\r\n      messageLocalizationParams: [this.name],\r\n    });\r\n  }\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Options } from '../models/options';\r\n\r\nexport const ACCOUNT_OPTIONS = new InjectionToken<Options>('ACCOUNT_OPTIONS');\r\n","import { Options } from '../models/options';\r\n\r\nexport function accountOptionsFactory(options: Options) {\r\n  return {\r\n    redirectUrl: '/',\r\n    ...options,\r\n  };\r\n}\r\n","import { CoreModule, LazyModuleFactory } from '@abp/ng.core';\r\nimport { ThemeSharedModule } from '@abp/ng.theme.shared';\r\nimport { ModuleWithProviders, NgModule, NgModuleFactory } from '@angular/core';\r\nimport { NgbDropdownModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgxValidateCoreModule } from '@ngx-validate/core';\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { AuthWrapperComponent } from './components/auth-wrapper/auth-wrapper.component';\r\nimport { ChangePasswordComponent } from './components/change-password/change-password.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { ManageProfileComponent } from './components/manage-profile/manage-profile.component';\r\nimport { PersonalSettingsComponent } from './components/personal-settings/personal-settings.component';\r\nimport { RegisterComponent } from './components/register/register.component';\r\nimport { TenantBoxComponent } from './components/tenant-box/tenant-box.component';\r\nimport { Options } from './models/options';\r\nimport { ACCOUNT_OPTIONS } from './tokens/options.token';\r\nimport { accountOptionsFactory } from './utils/factory-utils';\r\nimport { AuthenticationFlowGuard } from './guards/authentication-flow.guard';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AuthWrapperComponent,\r\n    LoginComponent,\r\n    RegisterComponent,\r\n    TenantBoxComponent,\r\n    ChangePasswordComponent,\r\n    ManageProfileComponent,\r\n    PersonalSettingsComponent,\r\n  ],\r\n  imports: [\r\n    CoreModule,\r\n    AccountRoutingModule,\r\n    ThemeSharedModule,\r\n    NgbDropdownModule,\r\n    NgxValidateCoreModule,\r\n  ],\r\n  exports: [],\r\n})\r\nexport class AccountModule {\r\n  static forChild(options: Options): ModuleWithProviders<AccountModule> {\r\n    return {\r\n      ngModule: AccountModule,\r\n      providers: [\r\n        AuthenticationFlowGuard,\r\n        { provide: ACCOUNT_OPTIONS, useValue: options },\r\n        {\r\n          provide: 'ACCOUNT_OPTIONS',\r\n          useFactory: accountOptionsFactory,\r\n          deps: [ACCOUNT_OPTIONS],\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forLazy(options: Options): NgModuleFactory<AccountModule> {\r\n    return new LazyModuleFactory(AccountModule.forChild(options));\r\n  }\r\n}\r\n"]}