import {
  CoreModule,
} from '@abp/ng.core';
import {
  ThemeSharedModule,
} from '@abp/ng.theme.shared';
import {
  Component,
  Input,
  inject
} from '@angular/core';
import { PageModule } from '@abp/ng.components/page';
import {
  CommercialUiModule,
} from '@volo/abp.commercial.ng.ui';
import { IdentityUserDto } from '@volo/abp.ng.identity/proxy';
import { eLockNames, eLockPolicyNames } from './lock/lock.model';
import { LockComponent } from './lock/lock.component';
import { eSetPasswordNames, eSetPasswordPolicyNames } from './set-password/set-password.model';
import { SetPasswordComponent } from './set-password/set-password.component';
import { eTwoFactorNames, eTwoFactorPolicyNames } from './two-factor/two-factor.model';
import { TwoFactorComponent } from './two-factor/two-factor.component';

import { <%= className %>DetailsStateService } from './<%= fileName%>-details-state.service';

import { provideLocalization } from '<%= relationPath %>../shared/provider_collection';
import { TabsService } from '<%= relationPath %>../shared/tabs.service';
import localizations from './<%= fileName%>-details.localizations';


@Component({
  selector: '<%= selector%>-details',
  templateUrl: './<%= fileName%>-details.component.html',
  providers: [
    TabsService,
    provideLocalization(localizations)
  ],  
  standalone: true,
  imports: [
    CoreModule,
    ThemeSharedModule,
    CommercialUiModule,
    PageModule
  ],
})
export class <%= className %>DetailsComponent {
  @Input()
  set id(id: string) {
    console.log(id);
  }

  @Input()
  set selectedData(selectedData: IdentityUserDto) {
    this.stateService.selectedData$.next(selectedData);
  }

  tabsService = inject(TabsService);

  constructor() {
    this.tabsService.add([
      {
        name: eLockNames.Lock,
        order: 1,
        requiredPolicy: eLockPolicyNames.Lock,
        component: LockComponent,
      },
      {
        name: eSetPasswordNames.SetPassword,
        order: 2,
        requiredPolicy: eSetPasswordPolicyNames.SetPassword,
        component: SetPasswordComponent,
      },
      {
        name: eTwoFactorNames.TwoFactor,
        order: 3,
        requiredPolicy: eTwoFactorPolicyNames.TwoFactor,
        component: TwoFactorComponent,
      }

    ]);
  }

  stateService = inject(<%= className %>DetailsStateService);
}
