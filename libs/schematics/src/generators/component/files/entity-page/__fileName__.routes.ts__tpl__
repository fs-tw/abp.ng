import { ActivatedRouteSnapshot, Route } from '@angular/router';
import { <%= componentNames.className %>Component } from './<%= fileName %>.component';
import { provide<%= componentNames.className %> } from './<%= fileName %>.provide';
import { <%= componentNames.className %>ListComponent } from './<%= fileName %>-list/<%= fileName %>-list.component';
import { ExternalLoginComponent } from './external-login/external-login.component';
import { provideExternalLogin } from './external-login/external-login.provide';
import { <%= componentNames.className %>DetailsComponent } from './<%= fileName %>-details/<%= fileName %>-details.component';
import { provide<%= componentNames.className %>Details } from './<%= fileName %>-details/<%= fileName %>-details.provide';
import { inject } from '@angular/core';
import { IdentityUserService } from '@abp/ng.identity/proxy';

export default [
  {
    path: '',
    component: <%= componentNames.className %>Component,
    providers: [
      provide<%= componentNames.className %>(),
    ],
    children: [
      {
        path: '',
        component: <%= componentNames.className %>ListComponent
      },
      {
        path: 'external-login',
        component: ExternalLoginComponent,
        providers: [
          provideExternalLogin()
        ]
      },   
      {
        path: ':id',
        children:[
          {
            path: 'details',
            component: <%= componentNames.className %>DetailsComponent,
            resolve: {
              selectedData: (route: ActivatedRouteSnapshot) => {
                const identityUserService = inject(IdentityUserService);
                return identityUserService.get(route.params['id']);
              }
            },
            providers: [
              provide<%= componentNames.className %>Details()
            ]
          },
        ]
      },

    ]
  },
] as Route[];
