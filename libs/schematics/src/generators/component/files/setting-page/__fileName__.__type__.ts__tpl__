import { PageModule } from '@abp/ng.components/page';
import { ABP, CoreModule } from '@abp/ng.core';
import { <%= className %>TabsService } from './<%= fileName %>-tabs.service';
import { ThemeSharedModule } from '@abp/ng.theme.shared';
import { Component, TrackByFunction, inject } from '@angular/core';
import { takeUntilDestroyed } from '@angular/core/rxjs-interop';

@Component({
  selector: '<%= selector %>',
  templateUrl: './<%= fileName %><%= type ? '.' + type : '' %>.html',
  standalone: true,
  imports: [CoreModule, ThemeSharedModule, PageModule]
})
export class <%= className %><%= typeClassName %> {
  tabsService = inject(<%= className %>TabsService);

  settings: ABP.Tab[] = [];

  selected!: ABP.Tab;

  trackByFn: TrackByFunction<ABP.Tab> = (_, item) => item.name;

  constructor() {
    this.tabsService.visible$
      .pipe(takeUntilDestroyed())
      .subscribe((settings) => {
        this.settings = settings;

        if (!this.selected) this.selected = this.settings[0];
      });
  }
}
